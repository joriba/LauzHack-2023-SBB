{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Journey-Service",
    "termsOfService" : "https://confluence.sbb.ch/pages/viewpage.action?pageId=915374475",
    "contact" : {
      "name" : "Consumer-Registration",
      "url" : "https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/User-Registration-Process.md",
      "email" : "journey-service@sbb.ch"
    },
    "license" : {
      "name" : "Licence: SBB CFF FFS",
      "url" : "https://www.sbb.ch/de/meta/legallines/rechtlicher-hinweis.html"
    },
    "version" : "3.13.10",
    "description" : "## SBB Journey-Planner \n(de:Fahrplanpublikation Personenverkehr SBB)\n\nThis is a stateless RESTful web-service for **timetable based public transportation routing** as provided by SBB Journey-Planner applications such as [sbb.ch](https://www.sbb.ch/) or [SBB Mobile App](https://apps.apple.com/ch/app/sbb-mobile/id294855237).\nThe service-contract is restricted to **SBB internal consumers** or **accredited partners** and supports various and enhanced use cases.\n\n### Before 'Sign up' \nFor new consumers:\n1. This **service needs official approval** before granting any access, therefore send an e-mail (see 'Contact -> E-Mail') first with the subject: **Request: Sign Up Journey-Service**\n2. Wait for the appropriate response e-mail and fill-in the attached **Questionnaire** and follow further steps given in the response.  \n\n### Approved and 'Signed up' consumers\nSee **Contact** box\n* **Homepage** for general infos about the service \n* **Developer resources** for specific usage and concepts of Journey-Service\n\nRemark:\n* non SBB consumers might have problems to access our external confluence manual. If the Swagger-Doc is non sufficient, consider sending us an e-Mail with further questions.\n\n"
  },
  "servers" : [ {
    "url" : "http://localhost:39981",
    "description" : "Generated server url"
  } ],
  "tags" : [ {
    "name" : "Routes V2",
    "description" : "Find vehicle-journeys, consisting of all stops passed from the very beginning to its destination resp. direction (aka JourneyDetail, DatedVehicleJourney, OJP DatedJourney, de:Fahrt/Zuglauf)."
  }, {
    "name" : "Trips Subscription V3",
    "description" : "Subscribe a concrete `Trip` for realtime-change events (de:Fahrtüberwachung). If anything out of plan happens a Kafka Topic will be provided J-S::Event.<br>The usage needs an individual setup by the J-S Team, see [J-S::Event Consumer process](https://confluence.sbb.ch/display/KIS/J-S%3A%3AEvent)"
  }, {
    "name" : "Schedules V3",
    "description" : "General timetable information."
  }, {
    "name" : "Stationboards V2",
    "description" : "Find departures and arrivals (partial routes)."
  }, {
    "name" : "Trips V3",
    "description" : "Find trips for your customer journey."
  }, {
    "name" : "Locations V2",
    "description" : "Find STATION, ADDRESS and POI."
  }, {
    "name" : "Archive V3",
    "description" : "Find archived journey data (timemachine records according to effective realtime routing) back to 60 days."
  }, {
    "name" : "Trips V2",
    "description" : "Find trips for your customer journey."
  }, {
    "name" : "Tool Support V3",
    "description" : "HIM-SX tools."
  }, {
    "name" : "Situations V3",
    "description" : "Situation-messages concerning public transportation (aka **[HIM, de:Betriebslage und Störungen](https://www.sbb.ch/de/fahrplan/bahnverkehrsinformation/betriebslage.html)**, Siri Situations). Such messages do not impact routing directly but may by given as an add on information for e.g. on related trips or regional areas as provided here."
  }, {
    "name" : "Vehicle Journeys V3",
    "description" : "Planned movement of a public transport vehicle on a day from the start `StopPlace` to the end on a planned route. (Aka OJP Stop-Event, de:Fahrt/Zuglauf)"
  }, {
    "name" : "Open Journey Planner V3",
    "description" : "OJP as underlying router, exposed by J-S v3 APIs. **Highly experimental, tests not complete yet!!!**"
  }, {
    "name" : "Places V3",
    "description" : "Find STATION, ADDRESS and POI."
  }, {
    "name" : "extXML V1",
    "description" : "Find XML-handle on deprecated Hafas::extXML API for a TripV2::reconstructionContext."
  } ],
  "paths" : {
    "/v3/trips/subscriptions/{subscriptionId}" : {
      "put" : {
        "tags" : [ "Trips Subscription V3" ],
        "summary" : "Update the `Trip` subscription.",
        "description" : "Updateable parameters analog `v3/trips/subscriptions`",
        "operationId" : "updateTripSubscriptionBySubscriptionId",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "MEGA abbreviation like J-S with UUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TripSubscriptionRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripSubscriptionResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Trips Subscription V3" ],
        "summary" : "Delete a `Trip` subscription.",
        "description" : "Monitoring for the given subscriptionId will be terminated.",
        "operationId" : "deleteTripSubscriptionBySubscriptionId",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "MEGA abbreviation like J-S with UUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripSubscriptionDeletionResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/vehicle-journeys/affected/by-lines" : {
      "post" : {
        "tags" : [ "Tool Support V3" ],
        "summary" : "{Idempotent: GET with body payload}Get affected `ServiceJourney`'s by start/end stoppoints on matching `DatedVehicleJourney`'s.",
        "description" : "Specific for HIM-SX info.",
        "operationId" : "getAffectedLines",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffectedByLinesRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineAffectedResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/vehicle-journeys/affected/by-lines-at-stopplaces" : {
      "post" : {
        "tags" : [ "Tool Support V3" ],
        "summary" : "{Idempotent: GET with body payload}Get affected `ServiceJourney`'s by crossing concrete `StopPlace's` on matching `DatedVehicleJourney`'s.",
        "description" : "Specific for HIM-SX info.",
        "operationId" : "getAffectedLinesAtStopPlaces",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffectedLinesAtStopPlacesRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineAffectedResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/vehicle-journeys/affected/by-journeys" : {
      "post" : {
        "tags" : [ "Tool Support V3" ],
        "summary" : "{Idempotent: GET with body payload}Get affected `ServiceJourney`'s by start/end stoppoints on matching `DatedVehicleJourney`'s.",
        "description" : "Specific for HIM-SX info.",
        "operationId" : "getAffectedJourneys",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffectedJourneysRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceJourneyAffectedResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/vehicle-journeys/affected/by-journeys-at-stopplaces" : {
      "post" : {
        "tags" : [ "Tool Support V3" ],
        "summary" : "{Idempotent: GET with body payload}Get affected `ServiceJourney`'s by crossing concrete `StopPlace's` on matching `DatedVehicleJourney`'s.",
        "description" : "Specific for HIM-SX info.",
        "operationId" : "getAffectedJourneysAtStopPlaces",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AffectedJourneysAtStopPlacesRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceJourneyAffectedResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/trips/subscriptions" : {
      "post" : {
        "tags" : [ "Trips Subscription V3" ],
        "summary" : "Subscribe a given `Trip::id` to be monitored for realtime changes while riding.",
        "description" : "**Single** (one specific `Trip` only) or **periodical** (specific `Trip` repeatedly for e.g. on a Monday) subscription is supported.",
        "operationId" : "subscribeTrip",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TripSubscriptionRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripSubscriptionResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/trips/intervals/by-origin-destination" : {
      "post" : {
        "tags" : [ "Trips V3" ],
        "summary" : "{Idempotent: GET with body payload} Get one-way trip-intervals for Public Transportation (PT) between given origin and destination `StopPlace`. Analog /trips but within duration interval.",
        "description" : "The underlying public transportation planner will provide the best journey-connections according to your query-parameters, such as via, individual change time (ICT) etc.",
        "operationId" : "getTripsIntervalByOriginAndDestination",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TripsIntervalByOriginAndDestinationRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/trips/by-origin-destination" : {
      "post" : {
        "tags" : [ "Trips V3" ],
        "summary" : "{Idempotent: GET with body payload} Get one-way trips between given origin and destination locations. Each Leg is operated by a certain transport-product, therefore multiple legs means changing vehicles.",
        "description" : "The underlying public transportation planner will provide the best journey-connections according to your query-parameters, such as via, individual change time (ICT) etc.<br>Between 0 and about 12 hits are expectable, related to realtime circumstances.",
        "operationId" : "getTripsByOriginAndDestination",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TripsByOriginAndDestinationRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/trips/by-leg" : {
      "post" : {
        "tags" : [ "Trips V3" ],
        "summary" : "{Idempotent: GET with body payload} Perform a trip search starting at a position on a current `PTRideLeg` where a passenger is on its way on a planned Trip (aka search on trip (sot)).",
        "description" : "Assuming there is a known disturbance coming, this API is useful to find other Trip options to get to the final destination from the view of the passenger's current position.",
        "operationId" : "getTripsByLeg",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TripsByLegRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/service-calendar/by-origin-destination" : {
      "post" : {
        "tags" : [ "Schedules V3" ],
        "summary" : "Creates a specific service-calender PDF (aka personal timetable) in the background, downloadable by enduser.",
        "description" : "See [personal timetable](https://www.sbb.ch/de/fahrplan/online-fahrplan/pdf-fahrplaene/persoenlicher-taschenfahrplan.html), which initiates asynchronous PDF creation in the background and returns reference to current state of the process:\n- if `PersonalTimetableDownloadReference::downloadUrl` is given, your **personal timetable (pdf)** should be downloadable by the given link\n- otherwise keep calling `v3/service-calendar/by-origin-destination/{pollId}` by given `pollId` until 'downloadURL' is provided (might take a few seconds).",
        "operationId" : "getServiceCalendarByOriginAndDestination",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceCalendarByOriginAndDestinationRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceCalendarByOriginAndDestinationDownloadResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/archive/{archiveDate}/trips/by-origin-destination" : {
      "post" : {
        "tags" : [ "Archive V3" ],
        "summary" : "{Idempotent: GET with body payload} Today and past (last 60days) realtime effective archive. Get one-way trips between given origin and destination locations based on archived trips in the past. API behaves like /trips with additional properties. **Some attributes of `v3/trips` are not supported yet**: viasNot, viasNoTransfer, optimisationMethod, includeAlternateMatch, includeNoticeAttributes, includeEconomic, includeUnsharp, includeEarlier, includeEcologyComparison, includeOperatingDays, includeRouteProjection, includeGroupReservation, excludeDatedVehicleJourneys, excludeFootpathAtOriginAndDestination",
        "description" : "This API may be used to validate delays, for e.g. requested by PARE.",
        "operationId" : "getArchivedTripsByOriginAndDestination",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "archiveDate",
          "in" : "path",
          "description" : "Date (Timezone 'Europe/Zurich') for the archived data within [yesterday..last 60days].",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TripsByOriginAndDestinationRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/INCUBATOR/ojp/trips/by-origin-destination" : {
      "post" : {
        "tags" : [ "Open Journey Planner V3" ],
        "summary" : "{Idempotent: GET with body payload} Get one-way trips between given origin and destination locations. Each Leg is operated by a certain transport-product, therefore multiple legs means changing vehicles.",
        "description" : "The underlying public transportation planner will provide the best journey-connections according to your query-parameters, such as via, individual change time (ICT) etc.\nBetween 0 and about 12 hits are expectable, related to realtime circumstances.",
        "operationId" : "getOjpTripsByOriginAndDestination",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "OJP-Active-Instance",
          "in" : "header",
          "description" : "false: **passive instance** is used (default); true: **active instance** is used.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "OJP-Token",
          "in" : "header",
          "description" : "OJP instance specific secret necessary for OJP-Active-Instance, see [API-key](https://opentransportdata.swiss/de/cookbook/verwendung-der-api/). If none is given, J-S will fallback to a restricted token for passive instance.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TripsByOriginAndDestinationRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/api/sbb/v1/trips/extXmlCrutch" : {
      "post" : {
        "tags" : [ "extXML V1" ],
        "summary" : "@Deprecated (remains operational until Ticketshop is EOL) Get XmlHandle for Hafas::extXML API.",
        "description" : "Workaround for Ticketshop-link to buy international Tickets and to render Hafas-map for de:Streckenverlauf.\nRemark: Trip::reconstructionContext is compatible between Hafas::REST and Hafas::extXML.",
        "operationId" : "getExtXmlCrutch",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Request-ID The given value will not be returned in response header for this API!",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtXmlBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Response found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtXmlResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No response (nothing found by Hafas)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtXmlResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "X-HTTP-Error-Description" : {
                "description" : "Explains hints or errors of the problem.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtXmlResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-HTTP-Error-Description" : {
                "description" : "Explains hints or errors of the problem.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtXmlResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-HTTP-Error-Description" : {
                "description" : "Explains hints or errors of the problem.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtXmlResponse"
                }
              }
            }
          },
          "415" : {
            "description" : "Content-Type (must be 'application/json')",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtXmlResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "X-HTTP-Error-Description" : {
                "description" : "Explains hints or errors of the problem.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtXmlResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/v3/vehicle-journeys/{id}" : {
      "get" : {
        "tags" : [ "Vehicle Journeys V3" ],
        "summary" : "Get complete DatedVehicleJourney by its Journey-Reference.",
        "description" : "This will deliver all current details of the complete vehicle-journey (of the passenger carrying `ServiceProduct` such such as train, bus,..). It contains a list of all `ScheduledStopPoints` including departure and arrival times (with real-time data if available) and additional information like specific Notice's.",
        "operationId" : "getDatedVehicleJourneyById",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Any `ServiceJourney::id` given by PTRideLeg or any other Vehicle-Journey response. Or CUS JourneyReferemce (e.g. 85:11:284:002).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Day of operation at very origin StopPlace. If not provided, all matching Line's of the current timetable-period are taken into account.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "includeOperatingDays",
          "in" : "query",
          "description" : "Set true to get `ServiceJourney::operatingPeriods`.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeRouteProjection",
          "in" : "query",
          "description" : "With or without a plottable polyline for each vehicle-journey (if available).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeIntermediateStops",
          "in" : "query",
          "description" : "Whether the `PTRideLeg's` should include intermediate stops (between the passenger's board and alight in `ServiceJourney::stopPoints`).<br>x-extensible-enum:  [ALL,NONE,BOARDING_ALIGHTING] where ALL is BOARDING_ALIGHTING plus virtual stops.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "includeTrainStopAssignments",
          "in" : "query",
          "description" : "Whether `PTRideLeg's` should include `CompoundTrain's`(aka formation, composition). However, `CompoundTrain's` at any `ScheduledStopPoint` on the `ServiceJourney` may be loaded separately by `/v3/vehicle-journeys/by-stoppoints`.\nPossible values:\n- NONE none at all, though a `PTRideLeg::trainStopAssignmentHint` is always given.\n- ORIGIN  `TrainStopAssignment's` are added to first (departure) `ScheduledStopPoint` of each `PTRideLeg` \n- ORIGIN_DESTINATION `TrainStopAssignment's` are added to first (departure) and last (arrival) `ScheduledStopPoint` of each `PTRideLeg` having a `TrainStopAssignment` resp. a `CompoundTrain`.",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TrainStopAssignmentsEnum"
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatedVehicleJourney"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/vehicle-journeys/{id}/by-stoppoints" : {
      "get" : {
        "tags" : [ "Vehicle Journeys V3" ],
        "summary" : "Get `TrainStopAssignment's` for a `ServiceJourney` at given stops.",
        "description" : "Returns known `TrainStopAssignment's` for the given `ServiceJourney::id` matching the given `StopPlace's`, if found, or null otherwise. Returns NOT-FOUND (HTTP 404) if no `TrainStopAssignment' is found for any given stop. `StopPlace's` requested must relate to passing `ScheduledStopPoint's` on the `ServiceJourney`.",
        "operationId" : "getTrainStopAssignmentsByServiceJourneyId",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Any `ServiceJourney::id` given by PTRideLeg or any other Vehicle-Journey response. Or CUS JourneyReferemce (e.g. 85:11:284:002).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "placeReferences",
          "in" : "query",
          "description" : "`StopPlace's` of interest related to `ScheduledStopPoint's` on `ServiceJourney` with potential `TrainStopAssignment's`. See v3 PlaceReference in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : true,
          "schema" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : 8503000
            }
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrainStopAssignmentResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/vehicle-journeys/by-vehicle/{vehicleId}" : {
      "get" : {
        "tags" : [ "Vehicle Journeys V3" ],
        "summary" : "Get vehicle-journeys by car-identifier (carUIC oder BeaconID).",
        "description" : "Determines complete journey-details (aka de:Fahrt/Zuglauf) matching given parameters.",
        "operationId" : "getDatedVehicleJourneysByVehicleId",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "vehicleId",
          "in" : "path",
          "description" : "UIC number of a concrete Car within a formation. Various (numeric) formats are possible: a) Beacon MajorId = 15003, b) FOS CarUIC with or without whitespaces and hyphen like '94 85 123 123 - 2' or '94851231232'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Unique date of operation. Default is NOW",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Time (seconds will be ignored) of operation related to date (defaults to NOW), see offsetBeforeDateTime. Default is NOW",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "time",
            "example" : "13:07"
          }
        }, {
          "name" : "includeIntermediateStops",
          "in" : "query",
          "description" : "Whether the `PTRideLeg's` should include intermediate stops (between the passenger's board and alight in `ServiceJourney::stopPoints`).<br>x-extensible-enum:  [ALL,NONE,BOARDING_ALIGHTING] where ALL is BOARDING_ALIGHTING plus virtual stops.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "includeVehicleSpeakerMessage",
          "in" : "query",
          "description" : "Include vocal speaker messages on vehicle. The content corresponds to original VIA-speaker messages, but may differ from actually spoken message by operating crew on board of vehicle. Interprete them with a grain of salt.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatedVehicleJourneyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/vehicle-journeys/by-stoppoints" : {
      "get" : {
        "tags" : [ "Vehicle Journeys V3" ],
        "summary" : "@Deprecated Use v3/vehicle-journeys/{id}/by-stoppoints instead, API will be removed soon!",
        "description" : "Returns known `TrainStopAssignment's` for the given `ServiceJourney::id` matching the given `StopPlace's`, if found, or null otherwise. Returns NOT-FOUND (HTTP 404) if no `TrainStopAssignment' is found for any given stop. `StopPlace's` requested must relate to passing `ScheduledStopPoint's` on the `ServiceJourney`.",
        "operationId" : "getTrainStopAssignments",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "serviceProductReference",
          "in" : "query",
          "description" : "Reference to an operating vehicle (`ServiceProduct` of a Line or a route),see [**ServiceProductReference**](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md#serviceproductreference).<br>Results might not be 100% exact for e.g. a filter like 'IC 714' might also result in 'IC **1** 714' but a filter like 'IC 1 714' will not resolve 'IC 714'!",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operatorNumber",
          "in" : "query",
          "description" : "`ServiceProduct`::`Operator`::id DiDok/INFO+/Plabe related operator-number (typically Integer for CH managed codes, however some TU's like in foreign countries might return String expressions like '80___'), relates to operatorName.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "000011"
        }, {
          "name" : "operatingDay",
          "in" : "query",
          "description" : "Day of operation of `ServiceJourney`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "placeReferences",
          "in" : "query",
          "description" : "`StopPlace's` of interest related to `ScheduledStopPoint's` on `ServiceJourney` with potential `TrainStopAssignment's`. See v3 PlaceReference in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : true,
          "schema" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : 8503000
            }
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrainStopAssignmentResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/vehicle-journeys/by-service/{serviceProductReference}" : {
      "get" : {
        "tags" : [ "Vehicle Journeys V3" ],
        "summary" : "Get vehicle-journeys by `ServiceProduct` reference (aka train-search).",
        "description" : "Determines complete journey-details (aka de:Fahrt/Zuglauf) matching given parameters.",
        "operationId" : "getDatedVehicleJourneysByService",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "serviceProductReference",
          "in" : "path",
          "description" : "Reference to an operating vehicle (`ServiceProduct` of a Line or a route),see [**ServiceProductReference**](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md#serviceproductreference).<br>Results might not be 100% exact for e.g. a filter like 'IC 714' might also result in 'IC **1** 714' but a filter like 'IC 1 714' will not resolve 'IC 714'!",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Day of operation (relates to departure-time) at very origin StopPlace. If not provided, all matching `ServiceProduct's` of the current `ServiceCalendar` (timetable-period) will be resolved.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Local time (seconds will be ignored) of operation (relates to date) at departure station according to scheduled data. If not provided, the whole day is taken into account.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "time",
            "example" : "13:07"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of hits to be found (max=50). If limit=1, sorting related to input parameters (Line and operatorNumbers) is applied to determine best result, where limit greater than 1 results are returned as is (by underlying router).",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "operatorReferences",
          "in" : "query",
          "description" : "Operators involved on Line. Three variants are supported, see **OperatorReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)\n1) OperatorReference-Object with type='TEXT' as given in [OpenTransportData.swiss 'Business organisation' in 'GO-Liste.csv' field 'BEZEICHNUNG_DE'](https://opentransportdata.swiss/de/dataset/goch) or in returned Operator::name\n2) OperatorReference-Object with type='NUMBER' as given in [OpenTransportData.swiss 'Business organisation' in 'GO-Liste.csv' field 'NUMMER'](https://opentransportdata.swiss/de/dataset/goch)\n3) as 1) but just Operator::name String (without JSON Object)",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : 11
            }
          }
        }, {
          "name" : "restrictCH",
          "in" : "query",
          "description" : "Restricts to CH only if set to true, or false if confusions with similar international lines like Finland's 'IC 1' are ok.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "regionNumber",
          "in" : "query",
          "description" : "Region-number as given in `ServiceJourney:::notices -> Notice::type='INFO', ::key='RN'` (relevant for Postauto AG (PAG) operations-reference).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : 3520
          }
        }, {
          "name" : "includeExitSide",
          "in" : "query",
          "description" : "Add exit-side at each stop, if available. Needs `date` and allocated `ServiceProduct`.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeIntermediateStops",
          "in" : "query",
          "description" : "Whether the `PTRideLeg's` should include intermediate stops (between the passenger's board and alight in `ServiceJourney::stopPoints`).<br>x-extensible-enum:  [ALL,NONE,BOARDING_ALIGHTING] where ALL is BOARDING_ALIGHTING plus virtual stops.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatedVehicleJourneyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/vehicle-journeys/by-departure/{origin}" : {
      "get" : {
        "tags" : [ "Vehicle Journeys V3" ],
        "summary" : "Get departures starting at a StopPlace.",
        "description" : "Determines next departures from a Stop and point in time within duration (the results always contain all departures running to the last minute found even if the requested maximum limit was overrun).",
        "operationId" : "getVehicleJourneysByDepartureAtOrigin",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "origin",
          "in" : "path",
          "description" : "Starting StopPlace of the Departure. See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : 8507000
          }
        }, {
          "name" : "restrictOrigin",
          "in" : "query",
          "description" : "Set `CONCRETE_STOP` for departures passing that exact origin or `EQUIVALENT_STOPS` including equivalent Stops (such as Meta StopPlace's).<br>x-extensible-enum: ",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "CONCRETE_STOP"
          }
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "If only vehicles departing to a certain direction shall be returned, specify the direction StopPlace. See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : 8503000
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "(Local) date at origin, defaults to TODAY.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-04-18"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Local time at origin, defaults to NOW (seconds will be ignored).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "time",
            "example" : "13:07"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of results to be returned, related to parameter `duration` and may reduce or expand `limit` settings.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "duration",
          "in" : "query",
          "description" : "Interval duration [min.] (0..1439) to consider. Relates to parameter `limit`, which will limit results within the duration.",
          "required" : false,
          "schema" : {
            "maximum" : 1439,
            "minimum" : 0,
            "type" : "integer",
            "default" : 60
          }
        }, {
          "name" : "includeTransportModes",
          "in" : "query",
          "description" : "Optionally restrict to a requestable set of SBB specific TransportMode's (aka OJP PTMode). The set is relevant for any vehicle-journey (`DatedVehicleJourney`, `PTRideLeg`, ..). Relates to `ServiceProduct::vehicleMode` and `::vehicleSubModes`.\n- Default: non-restricted (null or empty-list), by means all TransportMode's are searched.\n- If some choice is made, other TransportMode's are excluded implicitely.\n- To get TRAIN (VehicleMode::id) only, add: [HIGH_SPEED_TRAIN,INTERCITY,INTERREGIO,REGIO,URBAN_TRAIN,SPECIAL_TRAIN]\n>- Be aware that TRAMWAY also searches for METRO (not distinguished it here further!)\n- Also there is no exact possibility to distinguish more precisely between CABLEWAY_GONDOLA_CHAIRLIFT_FUNICULAR at search time<br><br>x-extensible-enum: ",
          "required" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          }
        }, {
          "name" : "includeQuays",
          "in" : "query",
          "description" : "Restrict departures optionally from given tracks (related to origin).",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "7,8"
            }
          }
        }, {
          "name" : "includeRank",
          "in" : "query",
          "description" : "Calculate StopPoint::rank, which might be used by consumers to consider relevant intermediate stops to display.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DepartureResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/vehicle-journeys/by-arrival/{destination}" : {
      "get" : {
        "tags" : [ "Vehicle Journeys V3" ],
        "summary" : "Get arrivals at a StopPlace.",
        "description" : "Determines next arrivals at a given Stop and point in time within a duration (the results always contain all departures running to the last minute found even if the requested maximum limit was overrun).",
        "operationId" : "getVehicleJourneysByArrivalAtDestination",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "destination",
          "in" : "path",
          "description" : "StopPlace for which arrivals shall be retrieved. See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : 8507000
          }
        }, {
          "name" : "restrictDestination",
          "in" : "query",
          "description" : "Set `CONCRETE_STOP` for arrivals passing that exact destination or `EQUIVALENT_STOPS` including equivalent Stops (such as Meta StopPlace's).<br>x-extensible-enum: ",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "CONCRETE_STOP"
          }
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "If only vehicles departing from a certain direction shall be returned, specify the direction (StopPlace only yet). See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : 8503000
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "(Local) date at arrival, defaults to TODAY.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-04-18"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Local time at arrival, defaults to NOW (seconds will be ignored).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "time",
            "example" : "13:07"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of results to be returned, related to parameter `duration` and may reduce or expand `limit` settings.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "duration",
          "in" : "query",
          "description" : "Interval duration [min.] (0..1439) to consider. Relates to parameter `limit`, which will limit results within the duration.",
          "required" : false,
          "schema" : {
            "maximum" : 1439,
            "minimum" : 0,
            "type" : "integer",
            "default" : 60
          }
        }, {
          "name" : "includeTransportModes",
          "in" : "query",
          "description" : "Optionally restrict to a requestable set of SBB specific TransportMode's (aka OJP PTMode). The set is relevant for any vehicle-journey (`DatedVehicleJourney`, `PTRideLeg`, ..). Relates to `ServiceProduct::vehicleMode` and `::vehicleSubModes`.\n- Default: non-restricted (null or empty-list), by means all TransportMode's are searched.\n- If some choice is made, other TransportMode's are excluded implicitely.\n- To get TRAIN (VehicleMode::id) only, add: [HIGH_SPEED_TRAIN,INTERCITY,INTERREGIO,REGIO,URBAN_TRAIN,SPECIAL_TRAIN]\n>- Be aware that TRAMWAY also searches for METRO (not distinguished it here further!)\n- Also there is no exact possibility to distinguish more precisely between CABLEWAY_GONDOLA_CHAIRLIFT_FUNICULAR at search time<br><br>x-extensible-enum: ",
          "required" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          }
        }, {
          "name" : "includeQuays",
          "in" : "query",
          "description" : "Restrict departures optionally from given tracks (related to origin).",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "7,8"
            }
          }
        }, {
          "name" : "includeRank",
          "in" : "query",
          "description" : "Calculate StopPoint::rank, which might be used by consumers to consider relevant intermediates stops to display.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrivalResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/trips/{id}" : {
      "get" : {
        "tags" : [ "Trips V3" ],
        "summary" : "Get corresponding trip for a specific Trip::id.",
        "description" : "Typically there is [1] hit but failing `Problem` must be expected in realtime scenarios or older `Trip::id's`. Rare [2] hit cases might resolve from includeAlternateMatch=BOTH.",
        "operationId" : "getTripsById",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "`Trip::id` to be refreshed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Alternate (local) date if reconstruction is desired for a specific date other than given by Trip::id. Successful resolution depends on operating-days of the Line and other aspects (such as period, realtime, ...).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-04-18"
          }
        }, {
          "name" : "realtimeMode",
          "in" : "query",
          "description" : "<br>x-extensible-enum: \n- `REALTIME` potentially planned and RT **including non-rideable** (like cancelled)\n- `REALTIME_RIDEABLE` as `REALTIME` but **excluding non-rideable**\n- `OFF` **planned only**",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/RealtimeModeEnum"
          }
        }, {
          "name" : "retryFuzzy",
          "in" : "query",
          "description" : "Due to changing `ServiceProduct::number` updates by Public Transport-Operators, the temporary `Trip::id` might not resolve any more after a while. Therefore true (not necessary for fresh Trips) will automatically retry to find the `Trip` assuming such a `ServiceProduct::number` adaption. **100% correctness cannot be guaranteed if `TripResponse::serviceProductAdapted` is true, do validate found `Trip` whether it might be what you are looking for!**",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeAlternateMatch",
          "in" : "query",
          "description" : "Post-filter to adjust cancelled/alternate 1:1 Trip cases per response (de:Ausfall/Ersatz) according to SBB BR, where other Trip's remain as is.<br>x-extensible-enum: \n- IRRELEVANT: no adaption\n- BOTH: as IRRELEVANT but some Note's will be cloned from cancelled to 1:1 alternate Trip\n- ALTERNATE_ONLY: suppresses cancelled 1:1 Trip's if matched with alternates\n- CANCELLED_ONLY: suppress exactly matching 1:1 alternates",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/AlternateMatchEnum"
          }
        }, {
          "name" : "includeRouteProjection",
          "in" : "query",
          "description" : "With or without a plottable polyline for each vehicle-journey (if available).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeOperatingDays",
          "in" : "query",
          "description" : "`Trip::operatingPeriods` will always be returned if it is a **repeatable planned Trip over the period**. To enforce concrete planned dates in `OperatingPeriod::operatingDays`set `includeOperatingDays=true` (PTRideLeg::serviceJourney::operationPeriods will remain empty, because whole Trip is of interest).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeSummary",
          "in" : "query",
          "description" : "Create some summary facts about each Trip (useful for UI overviews).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeIntermediateStops",
          "in" : "query",
          "description" : "Whether the `PTRideLeg's` should include intermediate stops (between the passenger's board and alight in `ServiceJourney::stopPoints`).<br>x-extensible-enum:  [ALL,NONE,BOARDING_ALIGHTING] where ALL is BOARDING_ALIGHTING plus virtual stops.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "includeTrainStopAssignments",
          "in" : "query",
          "description" : "Whether `PTRideLeg's` should include `CompoundTrain's`(aka formation, composition). However, `CompoundTrain's` at any `ScheduledStopPoint` on the `ServiceJourney` may be loaded separately by `/v3/vehicle-journeys/by-stoppoints`.\nPossible values:\n- NONE none at all, though a `PTRideLeg::trainStopAssignmentHint` is always given.\n- ORIGIN  `TrainStopAssignment's` are added to first (departure) `ScheduledStopPoint` of each `PTRideLeg` \n- ORIGIN_DESTINATION `TrainStopAssignment's` are added to first (departure) and last (arrival) `ScheduledStopPoint` of each `PTRideLeg` having a `TrainStopAssignment` resp. a `CompoundTrain`.",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TrainStopAssignmentsEnum"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/trips/{id}/{viaEarlierLaterContext}" : {
      "get" : {
        "tags" : [ "Trips V3" ],
        "summary" : "Get a `Trip` [0..1] with changed arrival/departure times at a concrete via on a given `Trip::id` (aka partialTripSearch).",
        "description" : "Useful to find a slightly different trip with earlier arrival or later departure for a desired Via. Trip-pagination cannot be provided in this case.",
        "operationId" : "getTripsByIdAndPartialSearchContext",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "`TripV2::reconstructionContext` or `v3.Trip::id` is a temporary TripContext describing a concrete rideable and priceable journey (and not to be understood as a guaranteed ID which might be cached forever)! Therefore proper reconstruction is not guaranteed (realtime aspects, lacking service-days in the future, ..)!",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "yA88CgJWMRLmBiVDMiVCNkhLSQkJ8ElUJTI0QSUgM3Mzk-BAE="
          }
        }, {
          "name" : "viaEarlierLaterContext",
          "in" : "path",
          "description" : "`PTRideLeg::paginationCursor` previous- or next-value of a specific PTRideLeg within a Trip (given by its `id`). Use **previous** to arrive earlier at last stop (via), or **next** to depart later at first stop.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "PS=F$T=151200$L=A=1@O=Olten@X=7907703@Y=47351938@U=85@L=8500218@$"
          }
        }, {
          "name" : "additionalTransferTime",
          "in" : "query",
          "description" : "Additional change time at Via to be changed expressed by related `viaEarlierLaterContext`.",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "includeAlternateMatch",
          "in" : "query",
          "description" : "Post-filter to adjust cancelled/alternate 1:1 Trip cases per response (de:Ausfall/Ersatz) according to SBB BR, where other Trip's remain as is.<br>x-extensible-enum: \n- IRRELEVANT: no adaption\n- BOTH: as IRRELEVANT but some Note's will be cloned from cancelled to 1:1 alternate Trip\n- ALTERNATE_ONLY: suppresses cancelled 1:1 Trip's if matched with alternates\n- CANCELLED_ONLY: suppress exactly matching 1:1 alternates",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/AlternateMatchEnum"
          }
        }, {
          "name" : "includeRouteProjection",
          "in" : "query",
          "description" : "With or without a plottable polyline for each vehicle-journey (if available).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeSummary",
          "in" : "query",
          "description" : "Create some summary facts about each Trip (useful for UI overviews).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeIntermediateStops",
          "in" : "query",
          "description" : "Whether the `PTRideLeg's` should include intermediate stops (between the passenger's board and alight in `ServiceJourney::stopPoints`).<br>x-extensible-enum:  [ALL,NONE,BOARDING_ALIGHTING] where ALL is BOARDING_ALIGHTING plus virtual stops.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/trips/subscriptions/status/{subscriptionId}" : {
      "get" : {
        "tags" : [ "Trips Subscription V3" ],
        "summary" : "Get a simple subscription-status about a previously subscribed 'Trip'.",
        "description" : "Useful as an optional controlling step any time after subscription.",
        "operationId" : "getTripSubscriptionStatusBySubscriptionId",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Return all subscriptions for a subscriptionId'.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripSubscriptionStatusResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/trips/subscriptions/detail/{subscriptionId}" : {
      "get" : {
        "tags" : [ "Trips Subscription V3" ],
        "summary" : "Get details about a subcribed `Trip`.",
        "description" : "Raw upate by underlying system.",
        "operationId" : "getTripSubscriptionDetailsBySubscriptionId",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Return details of a given trip subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripSubscriptionDetailsResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/stop-places" : {
      "get" : {
        "tags" : [ "Places V3" ],
        "summary" : "Get the matching `StopPlaceDetailed` (aka stations, bus stops, etc.) known resp. routed by public transportation.",
        "description" : " Provides a download of all transferable `StopPlaceDetailed` known by DiDok (UIC source) resp. INFO+ (planned routes).<br>There are more than 65'000 such entries.<br>{To compress large responses, set header `accept-encoding` as `gzip`.}All Stations will be updated on a weekly base, because of rare changes, please do not use this service more frequently!",
        "operationId" : "getStopPlaces",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "Didok's geographical country: optionally restrict hits to a specific country by 2-letter format ISO 3166 as per [https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "CH"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "description" : "Sort sortOrder of StopPlaces if given: alphabetically by name, by weight/importance or by distance (only if _nearby_ is set).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "NAME", "WEIGHT", "DISTANCE" ]
          }
        }, {
          "name" : "validDate",
          "in" : "query",
          "description" : "StopPlace data might change over time (though not very often) for an exact **snapshot-date** (defaults to TODAY or set null if `validFrom/To` are set).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "validFrom",
          "in" : "query",
          "description" : "Only find `StopPlace's` that are valid within an interval, relates to `validTo`.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "validTo",
          "in" : "query",
          "description" : "Only find `StopPlace's` that are valid within an interval, relates to `validFrom`. May result in multiple instances of 'same' `StopPlace` with identical `id` and snapshot-version.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "vehicleModes",
          "in" : "query",
          "description" : "Vehicle-types at StopPlaces (null for any). Be aware the known vehicle-modes are based on planned calculated routes and might not match exactly in realtime.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleModeEnum"
            }
          }
        }, {
          "name" : "nameMatch",
          "in" : "query",
          "description" : "Tolerant `Place::name` match, where `Accept-Language` accepts translated terms like (Genève, Geneva, ..) at request time, where:\n- Address resp. street name (like 'Bollwerk 8')\n- PointOfInterest (like 'Museum')\n- StopPlace name (like 'Bern' or DiDok-UIC '8507000' or DiDok-ShortName 'BN').",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bern"
        }, {
          "name" : "tariffZone",
          "in" : "query",
          "description" : "Tariff-Zone's (aka NOVA Network) name in which the stop places are searched.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nearby",
          "in" : "query",
          "description" : "Reference point for searching nearby stop places (reduces hits in a meaningful way). See v3 _PlaceReference_ in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit the number of returned elements (empty for no limit).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StopPlaceDetailedResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Resource was not modified since last request to the client. Relates to Cache-Control.",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/stop-places/{id}" : {
      "get" : {
        "tags" : [ "Places V3" ],
        "summary" : "Get the `StopPlaceDetailed` (aka stations, bus stops, etc.) known resp. routed by public transportation.",
        "description" : "Get the stop place by its id. All Stations will be updated on a weekly base, because of rare changes, please do not use this service more frequently!",
        "operationId" : "getStopPlaceById",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "`StopPlace::id` from a /places or /stopPlaces request. Currently UIC values greater 0 and Integer.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : 8507000
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "`StopPlace` snapshot for the related `date` (defaults to TODAY). If `StopPlace` is available for another date, check `Problem::detail`.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StopPlaceDetailed"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/situations/{ids}" : {
      "get" : {
        "tags" : [ "Situations V3" ],
        "summary" : "Get situation-messages by Id (referencing HIM messages).",
        "description" : "Lists active situation-messages within a publication window provided by SBB HIM.",
        "operationId" : "getSituationsByIds",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "ids",
          "in" : "path",
          "description" : "Set of HIM-Ids ([1..50]).",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : 762539
            }
          }
        }, {
          "name" : "audience",
          "in" : "query",
          "description" : "Restricts situation-filter to wanted reader like end-user's (B2C), or staff like SBB employees (B2E) for consuming publishing-channels, where:<br>x-extensible-enum: \n- B2C_TEXT represents end-user messages\n- B2C_MAP as on on map 'de:Bahnverkehrsinformationskarte' with icons and coordinates\n- B2C_TIMETABLE journey related passenger message (as found for e.g. on a public transportation leg)\n- B2E_TEXT represent sales staff messages\n- B2E_MAP represent sales staff map",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/AudienceEnum"
          }
        }, {
          "name" : "includeProjection",
          "in" : "query",
          "description" : "Relates to `audience=*_MAP` otherwise ignored! With or without a plottable polyline for each situation-message related element (if available for edges and regions).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SituationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/situations/by-validity" : {
      "get" : {
        "tags" : [ "Situations V3" ],
        "summary" : "Get situation-messages within the given time interval.",
        "description" : "Lists active situation-messages within a publication window provided by SBB HIM.",
        "operationId" : "getSituationsByValidity",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "validFromDate",
          "in" : "query",
          "description" : "Begin publishing window of situation validity (related to `validFromTime` and `validToDate`/`validToTime`), defaults to TODAY.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-04-18"
          }
        }, {
          "name" : "validFromTime",
          "in" : "query",
          "description" : "Begin of publishing window of situation validity (related to `validFromDate` and `validToDate`/`validToTime`), defaults to NOW (seconds will be ignored).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "time",
            "example" : "13:07"
          }
        }, {
          "name" : "validToDate",
          "in" : "query",
          "description" : "End of publishing window of situation validity (related to `validToTime` and `validFromDate`/`validFromTime`), defaults to TODAY.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-04-18"
          }
        }, {
          "name" : "validToTime",
          "in" : "query",
          "description" : "End of publishing window of situation validity (related to `validToDate` and `validFromDate`/`validToTime`), defaults to NOW (seconds will be ignored).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "time",
            "example" : "13:07"
          }
        }, {
          "name" : "affectedScope",
          "in" : "query",
          "description" : "Specific business use case. If MAJOR_AREA_DISRUPTION is set, some filters might be ignored (J-S will adapt to latest P Data-Mgmt rules automatically)!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "MAJOR_AREA_DISRUPTION" ]
          }
        }, {
          "name" : "cause",
          "in" : "query",
          "description" : "An event inducing a change resp. disruption in public transport or traffic operation (aka HIM category).",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/SituationCauseEnum"
          },
          "example" : "DISTURBANCE"
        }, {
          "name" : "audience",
          "in" : "query",
          "description" : "Restricts situation-filter to wanted reader like end-user's (B2C), or staff like SBB employees (B2E) for consuming publishing-channels, where:<br>x-extensible-enum: \n- B2C_TEXT represents end-user messages\n- B2C_MAP as on on map 'de:Bahnverkehrsinformationskarte' with icons and coordinates\n- B2C_TIMETABLE journey related passenger message (as found for e.g. on a public transportation leg)\n- B2E_TEXT represent sales staff messages\n- B2E_MAP represent sales staff map",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/AudienceEnum"
          }
        }, {
          "name" : "title",
          "in" : "query",
          "description" : "Post-filters text contained in `title` of message (related to Accept-Language).",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "Störung"
        }, {
          "name" : "priorityMin",
          "in" : "query",
          "description" : "Search interval minimal **numerical value** for `PTSituationMessage::priority` and relates to `priorityMax`.<br>The **semantic value** is to be understood vice versa to the numerical value, like: Priority rank (the smaller the higher): low = 80, medium = 60, high = 40, de:Grossereignis = 20<br>(Patch applied for confusing case: if only the min value is set and greater than 40, the `priorityMin` will become 0 and `priorityMax` will become this value to build the search interval.)",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "priorityMax",
          "in" : "query",
          "description" : "Search interval maximal **numerical value** for `PTSituationMessage::priority`, relates to `priorityMin`.<br>(See applied patch in `priorityMin`.)",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 40
          }
        }, {
          "name" : "includeProjection",
          "in" : "query",
          "description" : "Relates to `audience=*_MAP` otherwise ignored! With or without a plottable polyline for each situation-message related element (if available for edges and regions).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SituationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/situations/by-rss-feed" : {
      "get" : {
        "tags" : [ "Situations V3" ],
        "summary" : "Get `PTSituationMessage's` by RSS-Feed.",
        "description" : "Lists active situation-messages within a publication window provided by SBB HIM. Format: RSS-Feed as an XML 1.0 dialect, see [Web content: Really Simple Syndication](https://validator.w3.org/feed/docs/rss2.html#requiredChannelElements).",
        "operationId" : "getSituationsByRSSFeed",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "language",
          "in" : "query",
          "description" : "Language of translatable properties. Overrides the Accept-Language header which is not suitable for some clients.<br>x-extensible-enum: see allowable values",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "causes",
          "in" : "query",
          "description" : "PTSituation::cause (aka HIM category).<br>x-extensible-enum: (see `SituationCauseEnum` except 'VOCAL_ANNOUNCEMENT_ON_VEHICLE'), or analog as raw values [0..5]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "audience",
          "in" : "query",
          "description" : "Restricts situation-filter to wanted reader like end-user's (B2C), or staff like SBB employees (B2E) for consuming publishing-channels, where:<br>x-extensible-enum: \n- B2C_TEXT represents end-user messages\n- B2C_MAP as on on map 'de:Bahnverkehrsinformationskarte' with icons and coordinates\n- B2C_TIMETABLE journey related passenger message (as found for e.g. on a public transportation leg)\n- B2E_TEXT represent sales staff messages\n- B2E_MAP represent sales staff map",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/AudienceEnum"
          }
        }, {
          "name" : "priorityMin",
          "in" : "query",
          "description" : "Search interval minimal **numerical value** for `PTSituationMessage::priority` and relates to `priorityMax`.<br>The **semantic value** is to be understood vice versa to the numerical value, like: Priority rank (the smaller the higher): low = 80, medium = 60, high = 40, de:Grossereignis = 20",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "priorityMax",
          "in" : "query",
          "description" : "Search interval maximal **numerical value** for `PTSituationMessage::priority`, relates to `priorityMin`.",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 40
          }
        }, {
          "name" : "affectedRegions",
          "in" : "query",
          "description" : "Filter situations for specific regions (see AffectedRegion::nameFormatted, ::name`).<br>x-extensible-enum: [CH_WEST,CH_MID,CH_ZURICH,CH_TICINO,CH_EAST,FRANCE,GERMANY,AUSTRIA,ITALY] (or analog as HIM raw values [BVI1,BVI2,BVI3,BVI4,BVI5,CSTRI1,CSTRI2,CSTRI3,CSTRI4])",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/rss+xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/service-calendar" : {
      "get" : {
        "tags" : [ "Schedules V3" ],
        "summary" : "Get current Journey Planner timetable periods supported by underlying systems (in Switzerland we deal with yearly operating-periods changing around 2nd Sunday of december).",
        "description" : "Therefore `StopPlace's`, `ServiceJourney's` and their scheduled times and service-days might change as well (usually having change impact for e.g. on regular commuters)!",
        "operationId" : "getServiceCalendar",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "If-None-Match" : {
                "description" : "ETag for this response snapshot related to Cache-Control.",
                "style" : "simple",
                "schema" : {
                  "type" : "string",
                  "example" : "W/\"0623750dea13167fb7283617c31cea94c\""
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Cache-Control: private, must-revalidate, max-age=86400" : {
                "description" : "The RFC 7234 Cache-Control header field is providing **directives to control how proxies and clients are allowed to cache responses** for performance. However they are free to ignore caching, but if they do, obey directives by [RFC-7234 Section 5.2.2](https://tools.ietf.org/html/rfc7234).<br>See [J-S caching](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/TechnicalAspects.md#caching)",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceCalendar"
                }
              }
            }
          },
          "304" : {
            "description" : "Resource was not modified since last request to the client. Relates to Cache-Control.",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/service-calendar/by-origin-destination/{pollId}" : {
      "get" : {
        "tags" : [ "Schedules V3" ],
        "summary" : "Returns instruction for polling 'personal timetable (pdf)' or link to download pdf if it created meanwhile.",
        "description" : "Needs a precedent call to: v3/service-calendar/by-origin-destination",
        "operationId" : "getServiceCalendarByPollId",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pollId",
          "in" : "path",
          "description" : "`PersonalTimetableReference::pollId` to poll whether 'personal timetable (pdf)' was generated meanwhile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceCalendarByOriginAndDestinationDownloadResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/places" : {
      "get" : {
        "tags" : [ "Places V3" ],
        "summary" : "Get places of type StopPlace, Address,PointOfInterest by its name.",
        "description" : "The response is a flat (non-inherited) structure of concrete places.",
        "operationId" : "getPlacesByName",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "nameMatch",
          "in" : "query",
          "description" : "Tolerant `Place::name` match, where `Accept-Language` accepts translated terms like (Genève, Geneva, ..) at request time, where:\n- Address resp. street name (like 'Bollwerk 8')\n- PointOfInterest (like 'Museum')\n- StopPlace name (like 'Bern' or DiDok-UIC '8507000' or DiDok-ShortName 'BN').",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bern"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "`Place::type` to be searched for.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALL", "StopPlace", "Address", "PointOfInterest" ],
              "default" : "ALL"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of hits to be found (max=50).",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "example" : 10,
            "default" : 10
          }
        }, {
          "name" : "center",
          "in" : "query",
          "description" : "A representative geographic position of the `Place` by a [GeoJSON Point](https://datatracker.ietf.org/doc/html/rfc794). If set, the pattern matching score of `nameMatch` in the specified `radius` is increased though outside hits may still be contained if they reach a high pattern score as well.<br>To find all stops in a circle-region use v3/places/by-coordinates-geojson instead.)<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : [ 8.5441, 47.4115 ]
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "Radius [m] around the related `center`, if given.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 1000
          }
        }, {
          "name" : "includeVehicleModes",
          "in" : "query",
          "description" : "Whether to deliver the `StopPlace::vehicleModes` or not. <br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeTouristicVia",
          "in" : "query",
          "description" : "If `type` contain `StopPlace` also include touristic via (pseudo stop-markers relevant for routing) like 'Centovalli' or 'Bahn-2000-Strecke' if set to true.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "304" : {
            "description" : "Resource was not modified since last request to the client. Relates to Cache-Control.",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlaceResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/places/by-coordinates" : {
      "get" : {
        "tags" : [ "Places V3" ],
        "summary" : "Get places nearby given coordinates by longitude/latitude. (Alternately use `v3/places/by-coordinates-geojson` instead.)",
        "description" : "Returns a list of `Place's` ordered by their distance to the centre coordinates.",
        "operationId" : "getPlacesByCoordinates",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "longitude",
          "in" : "query",
          "description" : "Longitude as decimal WGS84, paired with `latitude`.",
          "required" : true,
          "schema" : {
            "type" : "number",
            "example" : 8.5441
          }
        }, {
          "name" : "latitude",
          "in" : "query",
          "description" : "Latitude as decimal WGS84, paried with `longitude`.",
          "required" : true,
          "schema" : {
            "type" : "number",
            "example" : 47.4115
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "Radius [m] around the given coordinate `longitude/latitude`.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 1000
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of hits to be found (max=50).",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "example" : 10,
            "default" : 10
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Place type to be searched for.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALL", "StopPlace", "Address", "PointOfInterest" ],
              "default" : "ALL"
            }
          }
        }, {
          "name" : "includeVehicleModes",
          "in" : "query",
          "description" : "Whether to deliver the `StopPlace::vehicleModes` or not. <br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlaceResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/places/by-coordinates-geojson" : {
      "get" : {
        "tags" : [ "Places V3" ],
        "summary" : "Get places nearby given coordinates in GeoJson. (Alternately use `v3/places/by-coordinates` instead.)",
        "description" : "Returns a list of `Place's` ordered by their distance to the centre coordinates.",
        "operationId" : "getPlacesByCoordinatesGeojson",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "center",
          "in" : "query",
          "description" : "Search nearby within related `radius` of: A representative geographic position of the `Place` by a [GeoJSON Point](https://datatracker.ietf.org/doc/html/rfc794).",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : [ 8.5441, 47.4115 ]
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "Radius [m] around the given `center`.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 1000
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of hits to be found (max=50).",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "example" : 10,
            "default" : 10
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Place type to be searched for.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALL", "StopPlace", "Address", "PointOfInterest" ],
              "default" : "ALL"
            }
          }
        }, {
          "name" : "includeVehicleModes",
          "in" : "query",
          "description" : "Whether to deliver the `StopPlace::vehicleModes` or not. <br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlaceResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/archive/{archiveDate}/vehicle-journeys/{id}" : {
      "get" : {
        "tags" : [ "Archive V3" ],
        "summary" : "Today and past (last 60days) realtime effective archive. Get complete vehicle-journey including its ScheduledStopPoint's (de: Zuglauf mit Haltestellen) of a specific PTRideLeg, DatedVehicleJourney, Departure or ArrivalV3).",
        "description" : "The DatedVehicleJourney will deliver information about the complete route of a vehicle (resp. ServiceProduct such as train, bus,..).",
        "operationId" : "getArchivedVehicleJourneysById",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "archiveDate",
          "in" : "path",
          "description" : "Date (Timezone 'Europe/Zurich') for the archived data within [yesterday..last 60days].",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "An id as given by DatedVehicleJourney::serviceJourney::id. This value is **highly temporary** and may change even during a concrete day, make sure to pass an `ServceJourney::id` fetched by `v3/archive/*`! (Take care of the 'pipe' character from response, do URL-encode it properly but not twice.)",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "1|17166|0|85|18032019"
        }, {
          "name" : "includeIntermediateStops",
          "in" : "query",
          "description" : "Whether the `PTRideLeg's` should include intermediate stops (between the passenger's board and alight in `ServiceJourney::stopPoints`).<br>x-extensible-enum:  [ALL,NONE,BOARDING_ALIGHTING] where ALL is BOARDING_ALIGHTING plus virtual stops.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatedVehicleJourney"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/archive/{archiveDate}/trips/{id}" : {
      "get" : {
        "tags" : [ "Archive V3" ],
        "summary" : "Today and past (last 60days) realtime effective archive. Get corresponding trip for a specific `Trip::id` in the past. However other alternative trips may result set by `Trip::status::isAlternative`, based on specific realtime in the past.",
        "description" : "Reconstruction is not always guaranteed.",
        "operationId" : "getArchivedTripsById",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "archiveDate",
          "in" : "path",
          "description" : "Date (Timezone 'Europe/Zurich') for the archived data within [yesterday..last 60days].",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "`Trip::id` to be retrieved. Make sure to pass an id retrieved by `v3/archive/{archiveDate}/trips/by-origin-destination`!",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeSummary",
          "in" : "query",
          "description" : "Create some summary facts about each Trip (useful for UI overviews).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeIntermediateStops",
          "in" : "query",
          "description" : "Whether the `PTRideLeg's` should include intermediate stops (between the passenger's board and alight in `ServiceJourney::stopPoints`).<br>x-extensible-enum:  [ALL,NONE,BOARDING_ALIGHTING] where ALL is BOARDING_ALIGHTING plus virtual stops.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "ALL"
          }
        }, {
          "name" : "realtimeMode",
          "in" : "query",
          "description" : "<br>x-extensible-enum: \n- `REALTIME` potentially planned and RT **including non-rideable** (like cancelled)\n- `REALTIME_RIDEABLE` as `REALTIME` but **excluding non-rideable**\n- `OFF` **planned only**",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/RealtimeModeEnum"
          },
          "example" : "REALTIME"
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/archive/{archiveDate}/places" : {
      "get" : {
        "tags" : [ "Archive V3" ],
        "summary" : "Today and past (last 60days) realtime effective archive. Get Locations of type StopPlace by its name.",
        "description" : "The response is a flat (non-inherited) structure of concrete places.",
        "operationId" : "getArchivedPlacesByName",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "archiveDate",
          "in" : "path",
          "description" : "Date (Timezone 'Europe/Zurich') for the archived data within [yesterday..last 60days].",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "nameMatch",
          "in" : "query",
          "description" : "Tolerant `Place::name` match, where `Accept-Language` accepts translated terms like (Genève, Geneva, ..) at request time, where:\n- Address resp. street name (like 'Bollwerk 8')\n- PointOfInterest (like 'Museum')\n- StopPlace name (like 'Bern' or DiDok-UIC '8507000' or DiDok-ShortName 'BN').",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bern"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of hits to be found (max=50).",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "example" : 10,
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlaceResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/INCUBATOR/trips/by-road" : {
      "get" : {
        "tags" : [ "Trips V3" ],
        "summary" : "Get road route by underlying router (no public transportation modes included). Returns one trip with very limited request options and response data.",
        "operationId" : "getTripsByRoad",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "origin",
          "in" : "query",
          "description" : "Starting `StopPlace` of the trip at origin (departure). See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "destination",
          "in" : "query",
          "description" : "Ending `StopPlace` of the trip at destination (arrival). See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/INCUBATOR/trips/by-redefinition/{id}" : {
      "get" : {
        "tags" : [ "Trips V3" ],
        "summary" : "Split given `Trip` referenced by its `id` by redefined origin and/or destination into a partial (shortened) subtrip (where a typical split-point might be a `StopPlace::isTariffborder`).",
        "description" : "Usage: for e.g. strip-off international journey-part from trips starting or ending in Switzerland to get a valid NOVA ticketing offre.",
        "operationId" : "getTripsByRedefinition",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "`Trip::id` referring to a Trip to be shortened (unlike to `v3/trips/{id}` a refresh might be omitted by J-s for this manipulation).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "redefinedOrigin",
          "in" : "query",
          "description" : "`StopPlace` between origin and destination on `Trip`, related to`id`. If given, make the first `ScheduledStopPoint` found the new origin! Make sure `includeIntermediateStops` **includes intermediate stop-points** at preceeding /trips request!See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : 8500090,
            "deprecated" : true
          }
        }, {
          "name" : "redefinedDestination",
          "in" : "query",
          "description" : "`StopPlace` between origin and destination on `Trip`, related to `id`. If given, make the first `ScheduledStopPoint` found the new destination! Relates to `redefinedOrigin` which is applied first. **Make sure `includeIntermediateStops` **includes intermediate stop-points** at preceeding /trips request!See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : 8500010,
            "deprecated" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/INCUBATOR/stop-places/{id}/facility-info-portal" : {
      "get" : {
        "tags" : [ "Places V3" ],
        "summary" : "Get the facility as for InfoPortal.",
        "description" : "Get the facility as for InfoPortal. Temporary solution before it goes to a PlaceService. ",
        "operationId" : "getFacilityForInfoPortal",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "`StopPlace::id` from a /places or /stopPlaces request. Currently UIC values greater 0 and Integer.",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : 8506131
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityForInfoPortalResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/INCUBATOR/openapi/dummy-patch" : {
      "get" : {
        "tags" : [ "Places V3" ],
        "summary" : "PATCH for OpenApi-Plugin-Generator (temporary).",
        "description" : "ApiClient **inherited sub-classes** reference.",
        "operationId" : "getDummyInheritance",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InheritanceResponse"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/INCUBATOR/ojp/vehicle-journeys/by-departure/{origin}" : {
      "get" : {
        "tags" : [ "Open Journey Planner V3" ],
        "summary" : "Get departures starting at a StopPlace.",
        "description" : "Determines next departures from a Stop and point in time within duration (the results always contain all departures running to the last minute found even if the requested maximum limit was overrun).",
        "operationId" : "getOjpVehicleJourneysByDepartureAtOrigin",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "OJP-Active-Instance",
          "in" : "header",
          "description" : "false: **passive instance** is used (default); true: **active instance** is used.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "OJP-Token",
          "in" : "header",
          "description" : "OJP instance specific secret necessary for OJP-Active-Instance, see [API-key](https://opentransportdata.swiss/de/cookbook/verwendung-der-api/). If none is given, J-S will fallback to a restricted token for passive instance.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "origin",
          "in" : "path",
          "description" : "Starting StopPlace of the Departure. OJP passive instance requires Stop UIC like '850700' whereas active instance enforces 'OJP:STOP:SBB:8507000|Bern'. See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : 8507000
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "(Local) date at origin, defaults to TODAY.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-04-18"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Local time at origin, defaults to NOW (seconds will be ignored).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "time",
            "example" : "13:07"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of departures to be returned.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "includeTransportModes",
          "in" : "query",
          "description" : "Optionally restrict to a requestable set of SBB specific TransportMode's (aka OJP PTMode). The set is relevant for any vehicle-journey (`DatedVehicleJourney`, `PTRideLeg`, ..). Relates to `ServiceProduct::vehicleMode` and `::vehicleSubModes`.\n- Default: non-restricted (null or empty-list), by means all TransportMode's are searched.\n- If some choice is made, other TransportMode's are excluded implicitely.\n- To get TRAIN (VehicleMode::id) only, add: [HIGH_SPEED_TRAIN,INTERCITY,INTERREGIO,REGIO,URBAN_TRAIN,SPECIAL_TRAIN]\n>- Be aware that TRAMWAY also searches for METRO (not distinguished it here further!)\n- Also there is no exact possibility to distinguish more precisely between CABLEWAY_GONDOLA_CHAIRLIFT_FUNICULAR at search time<br><br>x-extensible-enum: ",
          "required" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DepartureResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/INCUBATOR/ojp/vehicle-journeys/by-arrival/{destination}" : {
      "get" : {
        "tags" : [ "Open Journey Planner V3" ],
        "summary" : "Get arrivals at a StopPlace.",
        "description" : "Determines next arrivals at a given Stop and point in time within a duration (the results always contain all departures running to the last minute found even if the requested maximum limit was overrun).",
        "operationId" : "getOjpVehicleJourneysByArrivalAtDestination",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "OJP-Active-Instance",
          "in" : "header",
          "description" : "false: **passive instance** is used (default); true: **active instance** is used.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "OJP-Token",
          "in" : "header",
          "description" : "OJP instance specific secret necessary for OJP-Active-Instance, see [API-key](https://opentransportdata.swiss/de/cookbook/verwendung-der-api/). If none is given, J-S will fallback to a restricted token for passive instance.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "destination",
          "in" : "path",
          "description" : "StopPlace for which arrivals shall be retrieved. OJP passive instance requires Stop UIC like '850700' whereas active instance enforces 'OJP:STOP:SBB:8507000|Bern'. See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : 8507000
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "(Local) date at arrival, defaults to TODAY.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-04-18"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Local time at arrival, defaults to NOW (seconds will be ignored).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "time",
            "example" : "13:07"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of arrivals to be returned.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "includeTransportModes",
          "in" : "query",
          "description" : "Optionally restrict to a requestable set of SBB specific TransportMode's (aka OJP PTMode). The set is relevant for any vehicle-journey (`DatedVehicleJourney`, `PTRideLeg`, ..). Relates to `ServiceProduct::vehicleMode` and `::vehicleSubModes`.\n- Default: non-restricted (null or empty-list), by means all TransportMode's are searched.\n- If some choice is made, other TransportMode's are excluded implicitely.\n- To get TRAIN (VehicleMode::id) only, add: [HIGH_SPEED_TRAIN,INTERCITY,INTERREGIO,REGIO,URBAN_TRAIN,SPECIAL_TRAIN]\n>- Be aware that TRAMWAY also searches for METRO (not distinguished it here further!)\n- Also there is no exact possibility to distinguish more precisely between CABLEWAY_GONDOLA_CHAIRLIFT_FUNICULAR at search time<br><br>x-extensible-enum: ",
          "required" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrivalResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/INCUBATOR/ojp/trips/by-leg/{id}" : {
      "get" : {
        "tags" : [ "Open Journey Planner V3" ],
        "summary" : "Get a refreshed `Leg` for a specific `PTRideLeg::serviceJourney::id` wrapped in a faked Trip. Supported by OJP passive instance only.",
        "description" : "Typically there is [1] hit but failure [0] must be expected in realtime scenarios or older data.",
        "operationId" : "getOjpTripLegById",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "OJP-Active-Instance",
          "in" : "header",
          "description" : "false: **passive instance** is used (default); true: **active instance** is used.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "OJP-Token",
          "in" : "header",
          "description" : "OJP instance specific secret necessary for OJP-Active-Instance, see [API-key](https://opentransportdata.swiss/de/cookbook/verwendung-der-api/). If none is given, J-S will fallback to a restricted token for passive instance.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Typically a `PTRideLeg::id` to be refreshed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Alternate (local) date if reconstruction is desired for a specific date other than given by Trip::id. Successful resolution depends on operating-days of the Line and other aspects (such as period, realtime, ...).",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-04-18"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/INCUBATOR/ojp/places" : {
      "get" : {
        "tags" : [ "Open Journey Planner V3" ],
        "summary" : "Get places of type StopPlace, Address,PointOfInterest by its name.",
        "description" : "The response is a flat (non-inherited) structure of concrete places.",
        "operationId" : "getOjpPlacesByName",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "OJP-Active-Instance",
          "in" : "header",
          "description" : "false: **passive instance** is used (default); true: **active instance** is used.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "OJP-Token",
          "in" : "header",
          "description" : "OJP instance specific secret necessary for OJP-Active-Instance, see [API-key](https://opentransportdata.swiss/de/cookbook/verwendung-der-api/). If none is given, J-S will fallback to a restricted token for passive instance.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nameMatch",
          "in" : "query",
          "description" : "Tolerant `Place::name` match, where `Accept-Language` accepts translated terms like (Genève, Geneva, ..) at request time, where:\n- Address resp. street name (like 'Bollwerk 8')\n- PointOfInterest (like 'Museum')\n- StopPlace name (like 'Bern' or DiDok-UIC '8507000' or DiDok-ShortName 'BN').",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bern"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Place type to be searched for.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALL", "StopPlace", "Address", "PointOfInterest" ],
              "default" : "ALL"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of hits to be found (max=50).",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "example" : 10,
            "default" : 10
          }
        }, {
          "name" : "center",
          "in" : "query",
          "description" : "A representative geographic position of the `Place` by a [GeoJSON Point](https://datatracker.ietf.org/doc/html/rfc794). If set, the pattern matching score of `nameMatch`  should be increased.<br>",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : [ 8.5441, 47.4115 ]
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "Radius [m] around the related `center`, if given.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 1000
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlaceResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/v3/INCUBATOR/ojp/places/by-coordinates" : {
      "get" : {
        "tags" : [ "Open Journey Planner V3" ],
        "summary" : "Get places nearby given coordinates by longitude/latitude.",
        "description" : "Gives places as a list ordered by their distance to the centre coordinates.",
        "operationId" : "getOjpPlacesByCoordinates",
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          },
          "example" : "en"
        }, {
          "name" : "OJP-Active-Instance",
          "in" : "header",
          "description" : "false: **passive instance** is used (default); true: **active instance** is used.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "OJP-Token",
          "in" : "header",
          "description" : "OJP instance specific secret necessary for OJP-Active-Instance, see [API-key](https://opentransportdata.swiss/de/cookbook/verwendung-der-api/). If none is given, J-S will fallback to a restricted token for passive instance.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "longitude",
          "in" : "query",
          "description" : "Longitude as decimal WGS84.",
          "required" : true,
          "schema" : {
            "type" : "number",
            "example" : 8.5441
          }
        }, {
          "name" : "latitude",
          "in" : "query",
          "description" : "Latitude as decimal WGS84.",
          "required" : true,
          "schema" : {
            "type" : "number",
            "example" : 47.4115
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "Radius [m] around the related `center`, if given.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 1000
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of hits to be found (max=50).",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "example" : 10,
            "default" : 10
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Place type to be searched for.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALL", "StopPlace", "Address", "PointOfInterest" ],
              "default" : "ALL"
            }
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Any 5xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Any 4xx according to standard (like [httpstatuses.com](https://www.webfx.com/web-development/glossary/http-status-codes/)).",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlaceResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/trips" : {
      "get" : {
        "tags" : [ "Trips V2" ],
        "summary" : "@Deprecated (SWITCH to v3/trips/by-origin-destination)! Get one-way trips between given origin and destination locations. Each Leg is operated by a certain transport-product, therefore multiple legs means changing vehicles.",
        "description" : "The underlying public transportation planner will provide the best journey-connections according to your query-parameters, such as via, individual change time (ICT) etc.<br>Between 0 and about 12 hits are expectable, scroll by header-properties.",
        "operationId" : "/v2/trips",
        "parameters" : [ {
          "name" : "destinationValue",
          "in" : "query",
          "description" : "Concrete location of the trip at destination (arrival). Value depends on destinationType:\n- destinationType=UIC, destinationValue=Location::uicOrId (if Location::type==STATION)\n- destinationType=ADDRESS_POI, destinationValue=Location::uicOrId (if Location::type==ADDRESS or POI)\n- destinationType=COORDINATES, destinationValue(lat,lon!)=46.948658,7.437406",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : 8503000
          }
        }, {
          "name" : "originValue",
          "in" : "query",
          "description" : "Concrete location of the trip at origin (departure). Value depends on originType:\n- originType=UIC, originValue=Location::uicOrId (if Location::type==STATION)\n- originType=ADDRESS_POI, originValue=Location::uicOrId (if Location::type==ADDRESS or POI)\n- originType=COORDINATES, originValue(lat,lon!)=46.948658,7.437406",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : 8507000
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Scroll-Context",
          "in" : "header",
          "description" : "Based on a previous search-response, earlier or later connections for the same trip can be retrieved\nby scrolling back and forth (by a pointer-context). You must use the same request parameters as in the previous\ntrips-request for the given values in the response-header for either 'ScrollBack-Context' or 'ScrollForward-Context' for optional scrolling.\nSee TripV2::scrollChecksum",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessibility",
          "in" : "query",
          "description" : "Accessibility (BFR, de:BAIM) for better handicap support using transport-products. If available relevant on first (boarding) and last (alighting) Stop per PUBLIC-TRANSPORT Leg. LegV2::infos will get an entry of key=RN if available (PAG relevant).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "ALL", "BOARDING_ALIGHTING_SELF", "BOARDING_ALIGHTING_BY_CREW", "BOARDING_ALIGHTING_BY_NOTIFICATION" ],
            "default" : "ALL"
          }
        }, {
          "name" : "additionalChangeTime",
          "in" : "query",
          "description" : "Additional time [in min.] on top of default change time when changing transport-products.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "alternateMatch",
          "in" : "query",
          "description" : "Post-filter to adjust cancelled/alternate 1:1 Trip cases per response (de:Ausfall/Ersatz) according to SBB BR, where other Trip's remain as is.<br>x-extensible-enum: \n- IRRELEVANT: no adaption\n- BOTH: as IRRELEVANT but some Note's will be cloned from cancelled to 1:1 alternate Trip\n- ALTERNATE_ONLY: suppresses cancelled 1:1 Trip's if matched with alternates\n- CANCELLED_ONLY: suppress exactly matching 1:1 alternates",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "IRRELEVANT", "BOTH", "ALTERNATE_ONLY", "CANCELLED_ONLY" ],
            "default" : "IRRELEVANT"
          }
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "Searchable Note::key's for Note::type=ATTRIBUTE.",
          "required" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "GROUPS_ADMITTED", "BIKE_CARRIAGE", "COUCHETTE", "SLEEPING_CAR", "EXCLUDE_TILTING_TRAIN" ]
            }
          }
        }, {
          "name" : "calculateEco",
          "in" : "query",
          "description" : "Create a simplified Trip::EcoBalance comparison object, based on SBB default car eco-params.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "changeTimePercentage",
          "in" : "query",
          "description" : "Walking speed when changing transport-products: 100% means default speed, 200% doubles it and below 100% will reduce changing time below SBB recommendation.<br>If the calculation based on changeTimePercent does not result in full minutes, it is rounded using 'round half up' method.<br>See Trip::individualChangeTime for time risky changes.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 100
          }
        }, {
          "name" : "createSummary",
          "in" : "query",
          "description" : "Create some summary facts about each Trip (useful for UI overviews).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "dateTime",
          "in" : "query",
          "description" : "Date/time at origin or destination (related to searchForArrival, default is NOW). Notation 'date-time' as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6), please be aware the given UTC-offset (for. e.g. '+02:00') will be ignored, instead the given date/time will be interpreted as local date/time at the location searched for!!! WARNING: any **Z**(ulu) date/time-instances will be converted with an offset of 'Europe/Zurich'!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2023-04-18T14:55:00+01:00"
          }
        }, {
          "name" : "destinationType",
          "in" : "query",
          "description" : "Type of location of the trip at destination (arrival).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "STATION", "ADDRESS_POI", "COORDINATES" ],
            "default" : "STATION"
          }
        }, {
          "name" : "earlier",
          "in" : "query",
          "description" : "Consider earlier leaving connections, even if arrival is later.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "economic",
          "in" : "query",
          "description" : "Consider additional connections by Bus or S-Bahn leading to destination as well (de:'Zusätzliche Alternativverbindungen', 'Mehrdimensionale Suche', 'Preiswerte Suche').<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "excludes",
          "in" : "query",
          "description" : "Exclude a non wanted set of connections in the response.\nEach excluded journey is a JSON object with the following TransportProductV2 related structure:\nString transportProductCategory, String transportProductLine, String transportProductNumber, Integer originUIC(mandatory), Integer, destinationUIC(mandatory), OffsetDateTime departureDateTime(mandatory), OffsetDateTime arrivalDateTime(mandatory)\nwhere a valid combination of transportProduct* attributes is mandatory as well, for e.g. 'IC 1' or '825'",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : {
                "transportProductCategory" : "IC",
                "transportProductLine" : "8",
                "transportProductNumber" : "825",
                "originUIC" : 8507000,
                "destinationUIC" : 8503000,
                "departureDateTime" : "2023-10-04T16:02:00+02:00",
                "arrivalDateTime" : "2023-10-04T16:58:00+02:00"
              }
            }
          }
        }, {
          "name" : "includeOperatingDays",
          "in" : "query",
          "description" : "Will add effective operatingDay's within ServiceDaysV2::operatingDays for the whole period.<br><br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "infos",
          "in" : "query",
          "description" : "LegV2::infos will get an entry of key=RN if available (PAG relevant).",
          "required" : false,
          "deprecated" : true,
          "schema" : {
            "type" : "string",
            "deprecated" : true,
            "enum" : [ "RN" ]
          }
        }, {
          "name" : "maxChanges",
          "in" : "query",
          "description" : "Max amount of transport-product changes (0 for direct connection). The parameter is relevant between origin and destination or between origin and first Via if any!",
          "required" : false,
          "schema" : {
            "maximum" : 11,
            "minimum" : 0,
            "type" : "integer",
            "default" : 11
          }
        }, {
          "name" : "minChangeTime",
          "in" : "query",
          "description" : "Minimum change time [in min.] when changing transport-products. There is no constant default, depends on SBB defined changing time at specific STATION.",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "name" : "noChangesAt",
          "in" : "query",
          "description" : "Force NO-CHANGE Via routing (currently STATION only supported).<br>Each NoChangeAt is a JSON object with the following Structure:\n- {uic:mandatory Integer,status:NO_CHANGE}\n- where possible status are: NO_CHANGE_META_STATION, NO_CHANGE",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : {
                "value" : 8501000,
                "status" : "NO_CHANGE"
              }
            }
          }
        }, {
          "name" : "notVias",
          "in" : "query",
          "description" : "Enforce NOT Via routing (currently STATION only supported).<br>Each NotVia is a JSON object with the following Structure:\n- {uic:mandatory Integer,status:NO_PASS_THROUGH}\n- where possible status are: NO_PASS_THROUGH_META_STATION, NO_PASS_THROUGH",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "{\"value\":8503000\",\"status\":\"NO_PASS_THROUGH\"}"
            }
          }
        }, {
          "name" : "occupancyAverage",
          "in" : "query",
          "description" : "Expected average occupancy in transport-products, related to parameter occupancyClass (where UNKNOWN means rather irrelevant).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "LOW", "MEDIUM", "HIGH" ]
          }
        }, {
          "name" : "occupancyClass",
          "in" : "query",
          "description" : "Relevant passenger-class, related to parameter occupancyAverage.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "enum" : [ "1", "2" ],
            "default" : 2
          }
        }, {
          "name" : "originType",
          "in" : "query",
          "description" : "Type of location of the trip at origin (departure).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "STATION", "ADDRESS_POI", "COORDINATES" ],
            "default" : "STATION"
          }
        }, {
          "name" : "polyline",
          "in" : "query",
          "description" : "With or without a plottable polyline for each vehicle-journey (if available).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "realtimeMode",
          "in" : "query",
          "description" : "Realtime-Mode. Use 'OFF' to request planned routes without realtime only.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "SERVER_DEFAULT", "OFF", "REALTIME", "INFOS", "FULL" ],
            "default" : "SERVER_DEFAULT"
          }
        }, {
          "name" : "searchForArrival",
          "in" : "query",
          "description" : "Search for arriving (true) or departing (false) trips.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "stopBehaviour",
          "in" : "query",
          "description" : "Stop behaviour influencing whether and what intermediate stops should be returned (relates to StopV2::boardingAlightingStatus). For better data quality include intermediate stops! IMPORTANT: if you need pricing offers in CH (NOVA) do not set ORIGIN_DESTINATION_ONLY.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "ORIGIN_DESTINATION_ONLY", "REAL_BOARDING_ALIGHTING", "ALL_BOARDING_ALIGHTING" ],
            "default" : "ORIGIN_DESTINATION_ONLY"
          }
        }, {
          "name" : "trainFormationType",
          "in" : "query",
          "description" : "Trainformation given in response. Useful for 2 scenarios in PUBLIC_TRANSPORTATION legs: <br>This parameter has an impact on performance and/or response volume, set wisely!<br>- Clients showing formation-changes on Trip-overview - creates per LegV2::formationAlert with rt formation-changes at origin<br>- Clients going to request trainFormations by a follow-up /trainFormation call - creates per LegV2::formationHint showing whether there is a potential formation or not (if not, further /trainFormation calls should be omitted).<br>",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "NONE", "HINT_ORIGIN_DESTINATION" ],
            "default" : "NONE"
          }
        }, {
          "name" : "transportProducts",
          "in" : "query",
          "description" : "Optionally restrict to a set of transport-transportProducts (default=ALL). The set of transport-products will be considered until the first Via if set (related to parameter vias). See [v580 de:Verkehrsmittelkategorien (aka Transmodel or OJP/Siri `VehicleMode`)](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/TransportMode.md)",
          "required" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ICE_EN_CNL_CIS_ES_MET_NZ_PEN_TGV_THA_X2", "EUROCITY_INTERCITY_ICN_INTERCITYNIGHT_SUPERCITY", "INTERREGIO", "FASTTRAIN_REGIOEXPRESS", "SHIP_FERRY_STEAMER", "URBANRAILWAY_STADTEXPRESS_SEMIFASTTRAIN_OMNIBUSTRAIN", "BUS_COACH_TAXI", "CABLEWAY_FUNICULAR_GONDOLALIFT_CHAIRLIFT", "METRO_MOTORAILTRAIN_SPECIALTRAIN_URLAUBSEXPRESS", "TRAMWAY" ]
            }
          }
        }, {
          "name" : "unsharp",
          "in" : "query",
          "description" : "Consider alternative stations origin/destination (de: Erweiterte Anzeige).",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "vias",
          "in" : "query",
          "description" : "Force Via routing (currently STATION only supported). Each ViaStop is a JSON object with the following Structure, see v2 **ViaStop** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : {
                "value" : 8507000,
                "transportProducts" : [ "INTERREGIO" ],
                "waittime" : 3
              }
            }
          }
        }, {
          "name" : "includeBefore",
          "in" : "query",
          "description" : "Indicate the minimum number of search results returned before related dateTime.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "maximum" : 6,
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "includeAfter",
          "in" : "query",
          "description" : "Indicate the minimum number of search results returned after related dateTime.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "maximum" : 6,
            "minimum" : 0,
            "type" : "integer",
            "default" : 5
          }
        }, {
          "name" : "includeGroupReservation",
          "in" : "query",
          "description" : "Relates to `LegV2::groupReservationStatus`. Include the status for group-reservation possibilities (source CAPRE).<br>Format 'x:y' which means to check reservation status for number of x passenger in first class and y passengers in second class.<br>Needs specific GRANT rights, do not specify unless you have them!<br>This parameter has an impact on performance and/or response volume, set wisely! LegV2::infos will get an entry of key=RN if available (PAG relevant).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "0:7"
          }
        }, {
          "name" : "maxChangeTime",
          "in" : "query",
          "description" : "Maximum change time at stop in minutes. In realtimeMode=FULL only planned time is considered (by means not guaranteed if dateTimeRt is given).",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "name" : "originRadius",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "destinationRadius",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "excludeFootpathAtOriginAndDestination",
          "in" : "query",
          "description" : "In case of Station to Station at origin and/or destination set true to prevent legs of type `FOOTPATH` at beginning or end.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "ScrollBack-Context" : {
                "description" : "Scroll reference for the current response to scroll backward.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "ScrollForward-Context" : {
                "description" : "Scroll reference for the current response to scroll forward.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TripV2"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/trips/{reconstructionContext}" : {
      "get" : {
        "tags" : [ "Trips V2" ],
        "summary" : "@Deprecated (SWITCH to v3/trips/{id})! Get corresponding trip for a specific TripV2::reconstructionContext.",
        "description" : "Typically there is 1 hit but failure is highly probable in realtime scenarios or older reconstructionContext's.",
        "operationId" : "getTripsByReconstructionContext",
        "parameters" : [ {
          "name" : "reconstructionContext",
          "in" : "path",
          "description" : "`TripV2::reconstructionContext` or `v3.Trip::id` is a temporary TripContext describing a concrete rideable and priceable journey (and not to be understood as a guaranteed ID which might be cached forever)! Therefore proper reconstruction is not guaranteed (realtime aspects, lacking service-days in the future, ..)!",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "yA88CgJWMRLmBiVDMiVCNkhLSQkJ8ElUJTI0QSUgM3Mzk-BAE="
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "alternateMatch",
          "in" : "query",
          "description" : "Post-filter to adjust cancelled/alternate 1:1 Trip cases per response (de:Ausfall/Ersatz) according to SBB BR, where other Trip's remain as is.<br>x-extensible-enum: \n- IRRELEVANT: no adaption\n- BOTH: as IRRELEVANT but some Note's will be cloned from cancelled to 1:1 alternate Trip\n- ALTERNATE_ONLY: suppresses cancelled 1:1 Trip's if matched with alternates\n- CANCELLED_ONLY: suppress exactly matching 1:1 alternates",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "IRRELEVANT", "BOTH", "ALTERNATE_ONLY", "CANCELLED_ONLY" ],
            "default" : "IRRELEVANT"
          }
        }, {
          "name" : "createSummary",
          "in" : "query",
          "description" : "Create some summary facts about each Trip (useful for UI overviews).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Alternate date if reconstruction is desired for a specific date local at departure. Successful resolution depends on service-days of the transport-product and other aspects (such as period, realtime, ..).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "includeOperatingDays",
          "in" : "query",
          "description" : "Will add effective operatingDay's within ServiceDaysV2::operatingDays for the whole period.<br><br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "infos",
          "in" : "query",
          "description" : "LegV2::infos will get an entry of key=RN if available (PAG relevant).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "RN" ]
          }
        }, {
          "name" : "polyline",
          "in" : "query",
          "description" : "With or without a plottable polyline for each vehicle-journey (if available).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "redefinedDestinationValue",
          "in" : "query",
          "description" : "@Deprecated use `v3/trips/by-redefinition/{id}`instead! Stop::uic between origin and destination on Trip represented by reconstructionContext. If given, make the first Stop found the new destination **without refreshing rt**! Relates to `redefinedOriginValue` which is applied first. **Make sure `stopBehaviour` **includes intermediate stops** at /trips request!",
          "required" : false,
          "deprecated" : true,
          "schema" : {
            "type" : "string",
            "example" : 8500010
          }
        }, {
          "name" : "redefinedOriginValue",
          "in" : "query",
          "description" : "@Deprecated use `v3/trips/by-redefinition/{id}`instead! Stop::uic between origin and destination on Trip represented by reconstructionContext. If given, make the first Stop found the new origin **without refreshing rt**! Make sure `stopBehaviour` **includes intermediate stops** at /trips request!",
          "required" : false,
          "deprecated" : true,
          "schema" : {
            "type" : "string",
            "example" : 8500090
          }
        }, {
          "name" : "stopBehaviour",
          "in" : "query",
          "description" : "Stop behaviour influencing whether and what intermediate stops should be returned (relates to StopV2::boardingAlightingStatus). For better data quality include intermediate stops!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "ORIGIN_DESTINATION_ONLY", "REAL_BOARDING_ALIGHTING", "ALL_BOARDING_ALIGHTING" ],
            "default" : "ORIGIN_DESTINATION_ONLY"
          }
        }, {
          "name" : "realtimeMode",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "OFF", "REALTIME", "INFOS", "FULL", "SERVER_DEFAULT" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TripV2"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "No entity/resource found (in Backend) -> no StopFormation on origin or destination Stop (though trip is reconstructable)",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/trips/ecoBalance/{reconstructionContext}" : {
      "get" : {
        "tags" : [ "Trips V2" ],
        "summary" : "Get detailed eco-balance values for a given `Trip` (v2.TripV2::reconstructionContext or v3.Trip::id). The response is a Map(key=PUBLIC_TRANSPORTATION|CAR|FLIGHT, value=EcoBalanceDetail) to compare PT, Car or flight (if distance is far enough for a flight).",
        "description" : "Determines comparable trips internally in relation to transportProduct and ecology-coefficants per key.<br>Check [Hafas Manual EcoParams](https://sbb.sharepoint.com/:b:/r/teams/297/Oeffentlich/S3_Programm/Anwendungen/Oeffentlich/KIP/Hafas/API/REST-Proxy/10_Dokumentation_ReST/HAFAS_ReST_Interface_EcoParams_v.1.4_sbb.pdf).",
        "operationId" : "getTripsWithEcoBalanceByReconstructionContext",
        "parameters" : [ {
          "name" : "reconstructionContext",
          "in" : "path",
          "description" : "`TripV2::reconstructionContext` or `v3.Trip::id` is a temporary TripContext describing a concrete rideable and priceable journey (and not to be understood as a guaranteed ID which might be cached forever)! Therefore proper reconstruction is not guaranteed (realtime aspects, lacking service-days in the future, ..)!",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "yA88CgJWMRLmBiVDMiVCNkhLSQkJ8ElUJTI0QSUgM3Mzk-BAE="
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "carClass",
          "in" : "query",
          "description" : "Specifies the size of the vehicle.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "LOW_1", "LOW_2", "LOW_3", "MEDIUM_1", "MEDIUM_2", "MEDIUM_3", "HIGH_1", "HIGH_2", "HIGH_3", "VAN_1", "VAN_2", "VAN_3", "OFFROAD_1", "OFFROAD_2", "OFFROAD_3" ],
            "default" : "MEDIUM_3"
          }
        }, {
          "name" : "carEngine",
          "in" : "query",
          "description" : "Vehicle engine type.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AVG", "GAS_EURO3", "GAS_EURO4", "GAS_EURO5", "DIESEL_EURO3", "DIESEL_EURO4", "DIESEL_EURO5", "LPG_CONV" ],
            "default" : "AVG"
          }
        }, {
          "name" : "carEuroNorm",
          "in" : "query",
          "description" : "Emission standards for vehicle-engines.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AVG", "EURO3", "EURO4", "EURO5", "EURO6" ],
            "default" : "AVG"
          }
        }, {
          "name" : "carFuelType",
          "in" : "query",
          "description" : "Fuel type, related to vehicle-engines.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AVG", "GAS", "DIESEL", "LPG", "HYBRID", "PLUGIN", "ELECTRIC" ],
            "default" : "AVG"
          }
        }, {
          "name" : "carLoad",
          "in" : "query",
          "description" : "Specifies the number of passengers in a vehicle.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AVG", "PASSENGER_1", "PASSENGER_2", "PASSENGER_3", "PASSENGER_4", "PASSENGER_5" ],
            "default" : "AVG"
          }
        }, {
          "name" : "flightFeeder",
          "in" : "query",
          "description" : "Sets the means of transport for the route from the origin to the first airport and from the last airport to the destination.\nEmissions for flights with feeders using compareCarTrip or public transport (train) can be calculated.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "CAR", "TRAIN" ],
            "default" : "CAR"
          }
        }, {
          "name" : "flightLoad",
          "in" : "query",
          "description" : "Degree of flight capacity utilization.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AVG", "FULL" ],
            "default" : "AVG"
          }
        }, {
          "name" : "load",
          "in" : "query",
          "description" : "Public transport load (air included): specifies the load in public transport.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AVG", "LOW", "MEDIUM", "HIGH" ],
            "default" : "AVG"
          }
        }, {
          "name" : "publicTransportLoad",
          "in" : "query",
          "description" : "Specifies the load in public transport as average.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AVG", "FULL" ],
            "default" : "AVG"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EcoMap"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "No entity/resource found (in Backend)",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "415" : {
            "description" : "Content-Type (must be 'application/json')",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/trainFormation/{reconstructionContext}" : {
      "get" : {
        "tags" : [ "Trips V2" ],
        "summary" : " (SWITCH to v3/trips/{id} &includeTrainStopAssignments!) Get the train-formation (composition of wagons) for a specific trip (most successful for SBB vehicles of vehicleType=TRAIN).",
        "description" : "@Deprecated (SWITCH to v3/trips/{id}&Whether `PTRideLeg's` should include `CompoundTrain's`(aka formation, composition). However, `CompoundTrain's` at any `ScheduledStopPoint` on the `ServiceJourney` may be loaded separately by `/v3/vehicle-journeys/by-stoppoints`.\nPossible values:\n- NONE none at all, though a `PTRideLeg::trainStopAssignmentHint` is always given.\n- ORIGIN  `TrainStopAssignment's` are added to first (departure) `ScheduledStopPoint` of each `PTRideLeg` \n- ORIGIN_DESTINATION `TrainStopAssignment's` are added to first (departure) and last (arrival) `ScheduledStopPoint` of each `PTRideLeg` having a `TrainStopAssignment` resp. a `CompoundTrain`.)! Train-formations are considered as daily realtime data and are therefore available TODAY only.<br>Assumes the search of a previous trip (by /trips) and tries to reconstruct it by its TripV2::reconstructionContext.<br>If successful and the given origin and destination are on the same Leg, the relevant train-formations will be determined for origin and destination if available.",
        "operationId" : "getTrainFormationByReconstructionContext",
        "parameters" : [ {
          "name" : "destinationValue",
          "in" : "query",
          "description" : "Destination station of the desired leg (make sure it is on the same Leg as originValue).",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : 8503000
          }
        }, {
          "name" : "originValue",
          "in" : "query",
          "description" : "Origin station of the desired leg (make sure it is on the same Leg as destinationValue).",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : 8507000
          }
        }, {
          "name" : "reconstructionContext",
          "in" : "path",
          "description" : "`TripV2::reconstructionContext` or `v3.Trip::id` is a temporary TripContext describing a concrete rideable and priceable journey (and not to be understood as a guaranteed ID which might be cached forever)! Therefore proper reconstruction is not guaranteed (realtime aspects, lacking service-days in the future, ..)! Only TODAY's reconstructionContext might resolve hits!",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "yA88CgJWMRLmBiVDMiVCNkhLSQkJ8ElUJTI0QSUgM3Mzk-BAE="
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "destinationType",
          "in" : "query",
          "description" : "Type of location of the trip at destinationValue.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "STATION" ],
            "default" : "STATION"
          }
        }, {
          "name" : "originType",
          "in" : "query",
          "description" : "Type of location of the trip at originValue.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "STATION" ],
            "default" : "STATION"
          }
        }, {
          "name" : "leavingDirectionEnforceLeft",
          "in" : "query",
          "description" : "@Deprecated SBB commercial channels show all formations by convention with leaving-direction=LEFT, though in reality some trains might leave to the RIGHT, which is the case on station-displays (de:Perronanzeiger)! Choose false to get leaving-direction as is (according to display-services).",
          "required" : false,
          "deprecated" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrainFormation"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "No entity/resource found (in Backend)",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "415" : {
            "description" : "Content-Type (must be 'application/json')",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/trainFormation/{journeyReference}/{stopValue}" : {
      "get" : {
        "tags" : [ "Trips V2" ],
        "summary" : "@Deprecated (SWITCH to v3/vehicle-journeys/{id} &includeTrainStopAssignments)! Get the train-formation (composition of wagons) for a specific JourneyDetail (for e.g. of an SBB transport-product of vehicleType=TRAIN). Found TrainFormation::originFormation corresponds to stopValue.",
        "description" : "Train-formations are considered as daily realtime data and are therefore available TODAY only.<br>Assumes the search of a previous journeyDetail (by /routes, /departures or /arrivals) and tries to reconstruct it by its journeyReference.",
        "operationId" : "getTrainFormationByJourneyReferenceAndStop",
        "parameters" : [ {
          "name" : "journeyReference",
          "in" : "path",
          "description" : "A reference to a JourneyDetail (de:Zuglauf) as given by JourneyDetail::journeyReference, LegV2::journeyReference or Departure/Arrival::journeyReference. This value is **highly temporary** and may change even during a concrete day!  (Check your URL-encoding in case 'pipe' character from response will not be or double encoded.) Only TODAY's journeyReference might resolve hits!",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "1|17166|0|85|18032019"
          }
        }, {
          "name" : "stopValue",
          "in" : "path",
          "description" : "Concrete Stop within journeyDetail to get formation from, resp. considered as departure from stopValue (of wing-trains which might split/join anywhere of this stop).",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : 8507000
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stopType",
          "in" : "query",
          "description" : "Type of stop.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "STATION" ],
            "default" : "STATION"
          }
        }, {
          "name" : "leavingDirectionEnforceLeft",
          "in" : "query",
          "description" : "@Deprecated SBB commercial channels show all formations by convention with leaving-direction=LEFT, though in reality some trains might leave to the RIGHT, which is the case on station-displays (de:Perronanzeiger)! Choose false to get leaving-direction as is (according to display-services).",
          "required" : false,
          "deprecated" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrainFormation"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "No entity/resource found (in Backend)",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "415" : {
            "description" : "Content-Type (must be 'application/json')",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/stations" : {
      "get" : {
        "tags" : [ "Locations V2" ],
        "summary" : "@Deprecated (SWITCH to v3/stop-places)! Get all STATION's known resp. routed by public transportation.",
        "description" : "Provides a download of all transferable STATION's known and routed by Hafas and managed by DiDok (UIC source) resp. INFO+ (planned routes).\nThere are more than 65'000 such STATION's, therefore a paging mechanism is provided to step through all potential hits.\nAll Station's will be updated on a weekly base, because of rare changes, please do not use this service more frequently!",
        "operationId" : "getStations",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "Optionally restrict STATION hits to a specific country by 2-letter format ISO 3166 (see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Searches Didok's organisational country.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "CH"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "Page-number to return starting at 0 until StationsPage::nextPageAvailable becomes false within [0..*].",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page-size of returned STATIONs per page.",
          "required" : false,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 10,
            "type" : "integer"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "description" : "Sort sortOrder of locations, alphabetically by name or by weight.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "NAME", "WEIGHT" ],
            "default" : "NAME"
          }
        }, {
          "name" : "validDate",
          "in" : "query",
          "description" : "Station data might change over time (though not very often), therefore specify your snapshot date of interest (defaults to TODAY).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "vehicleTypes",
          "in" : "query",
          "description" : "Vehicle-types at STATIONs (null for any). The known vehicle-types are based on planned calculated routes and might not match exactly in realtime.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "TRAIN", "BUS", "TRAMWAY", "BOAT", "FUNICULAR", "CABLEWAY", "CHAIRLIFT", "METRO", "COG_RAILWAY", "TAXI", "LIFT", "AIRPLANE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StationsPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/routes" : {
      "get" : {
        "tags" : [ "Routes V2" ],
        "summary" : "@Deprecated (SWITCH to v3/vehicle-journeys/by-service)! Get complete vehicle-journeys by transport-products (also referred as 'trainSearch').<br>Results might not be 100% exact for e.g. a filter like 'IC 714' might also result in 'IC **1** 714' but filter like 'IC 1 714' will not resolve 'IC 714'!",
        "description" : "Determines complete journey-details matching given transport-product input (at least {`transportProductNumber`} OR  {`transportProductCategory` AND `transportProductLine`} are expected.).",
        "operationId" : "getRoutes",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Day of operation (relates to time) at very origin Stop. If not provided, all matching transport-products of the current timetable-period are taken into account.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "includeExitSide",
          "in" : "query",
          "description" : "Add exit-side at each stop, if available. Needs `date` and allocated `TransportProductV2`.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of hits to be found (max=50). If limit=1, sorting related to input parameters (transportProduct and operatorNumbers) is applied to determine best result, where limit greater than 1 results are returned as is (by underlying router).",
          "required" : false,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "default" : 1
          }
        }, {
          "name" : "operatorNumbers",
          "in" : "query",
          "description" : "Patterns:\n1) Operator-numbers (de:Transportunternehmen) according to ['Business organisations' column 'Nummer'](https://opentransportdata.swiss/en/dataset/goch).\n2) If number is not contained in 1) other/foreign operator-names might lead to desired results, for e.g. 'LEX'.\n3) Exotic cases like '10____' for Finland's operatorShortName=VR might not be resolved at all.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : 11
            }
          }
        }, {
          "name" : "restrictCH",
          "in" : "query",
          "description" : "Searches in CH only or all over.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "stopBehaviour",
          "in" : "query",
          "description" : "Stop behaviour influencing whether and what intermediate stops should be returned (relates to StopV2::boardingAlightingStatus). For better data quality include intermediate stops!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "REAL_BOARDING_ALIGHTING", "ALL_BOARDING_ALIGHTING" ],
            "default" : "REAL_BOARDING_ALIGHTING"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Time (seconds will be ignored) of operation (relates to date) at very origin Stop according to scheduled data. If not provided, the whole day is taken into account.",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "example" : "13:07"
        }, {
          "name" : "transportProductCategory",
          "in" : "query",
          "description" : "As given by `TransportProductV2::categoryShortForm`.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "IC"
          }
        }, {
          "name" : "transportProductLine",
          "in" : "query",
          "description" : "As given by `TransportProductV2::line`.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : 1
          }
        }, {
          "name" : "transportProductNumber",
          "in" : "query",
          "description" : "As given by `TransportProductV2::number`.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : 756
          }
        }, {
          "name" : "transportReferenceNumber",
          "in" : "query",
          "description" : "Region-number as given in /trips &infos Note::key='RN'.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : 3520
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/JourneyDetail"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/routes/{journeyReference}" : {
      "get" : {
        "tags" : [ "Routes V2" ],
        "summary" : "@Deprecated (SWITCH to v3/vehicle-journeys/{id})! Get complete journey of a vehicle including its stops (de: Zuglauf mit Haltestellen), where a `LegV2`, `DepartureV2` or `Arrival` might just represent a partial journey of it.",
        "description" : "The journey-detail will deliver information about the complete path of a vehicle (resp. transport-product such as train, bus,..).<br>The journey identifier is part of a trip or station-board response. It contains a list of all stops/stations of this journey including all departure and arrival times (with real-time data if available) and additional information like specific attributes about facilities and other texts.",
        "operationId" : "getRoutesByJourneyReference",
        "parameters" : [ {
          "name" : "journeyReference",
          "in" : "path",
          "description" : "A reference to a JourneyDetail (de:Zuglauf) as given by JourneyDetail::journeyReference, LegV2::journeyReference or Departure/Arrival::journeyReference. This value is **highly temporary** and may change even during a concrete day!  (Check your URL-encoding in case 'pipe' character from response will not be or double encoded.)",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "1|17166|0|85|18032019"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessibility",
          "in" : "query",
          "description" : "Accessibility (BFR, de:BAIM) for better handicape support using transport-products.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Day of operation at departure station. Specify only if different from date given in journeyReference.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "includeOperatingDays",
          "in" : "query",
          "description" : "Will add effective operatingDay's within ServiceDaysV2::operatingDays for the whole period.<br><br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "polyline",
          "in" : "query",
          "description" : "With or without polyline for JourneyDetail.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "stopBehaviour",
          "in" : "query",
          "description" : "Stop behaviour influencing whether and what intermediate stops should be returned (relates to StopV2::boardingAlightingStatus). For better data quality include intermediate stops!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "ORIGIN_DESTINATION_ONLY", "REAL_BOARDING_ALIGHTING", "ALL_BOARDING_ALIGHTING" ],
            "default" : "ORIGIN_DESTINATION_ONLY"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JourneyDetail"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "No entity/resource found (in Backend)",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/routes/{date}/{carUic}" : {
      "get" : {
        "tags" : [ "Routes V2" ],
        "summary" : "@Deprecated (SWITCH to v3/vehicle-journeys/by-vehicle/{vehicleId})! Get complete journey of a vehicle including its stops (de: Zuglauf mit Haltestellen) by a concrete car-reference within a train-formation.",
        "description" : "The journey-detail will deliver information about the complete route of a vehicle (resp. transport-product such as train, bus,..).<br>The journeyReference is part of a leg or stationboard response. It contains a list of all stops/stations of this journey including all departure and arrival times (with real-time data if available) and additional information like specific attributes about facilities and other texts.",
        "operationId" : "getRoutesByDateAndCarUic",
        "parameters" : [ {
          "name" : "date",
          "in" : "path",
          "description" : "Unique date of operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "carUic",
          "in" : "path",
          "description" : "UIC number of a concrete Car within a formation. Various (numeric) formats are possible: a) Beacon MajorId = 15003, b) FOS CarUIC with or without whitespaces and hyphen like '94 85 123 123 - 2' or '94851231232'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : 94
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Time (seconds will be ignored) of operation related to date (defaults to NOW), see offsetBeforeDateTime.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "13:07"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stopBehaviour",
          "in" : "query",
          "description" : "Stop behaviour influencing whether and what intermediate stops should be returned (relates to StopV2::boardingAlightingStatus). For better data quality include intermediate stops!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "ORIGIN_DESTINATION_ONLY", "REAL_BOARDING_ALIGHTING", "ALL_BOARDING_ALIGHTING" ],
            "default" : "REAL_BOARDING_ALIGHTING"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JourneyDetail"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "No entity/resource found (in Backend)",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/departures/{originUIC}" : {
      "get" : {
        "tags" : [ "Stationboards V2" ],
        "summary" : "@Deprecated (SWITCH to v3/vehicle-journeys/by-departure/{origin})!<br>Get departures from a station.",
        "description" : "Determines next departures from a Stop and point in time within duration (the results always contain all departures running to the last minute found even if the requested maximum limit was overrun).",
        "operationId" : "getDeparturesByOrigin",
        "parameters" : [ {
          "name" : "originUIC",
          "in" : "path",
          "description" : "STATION UIC code for which departures shall be retrieved.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "example" : 8507000
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateTime",
          "in" : "query",
          "description" : "Sets the start date/time for which the departures shall be retrieved (default is NOW). Notation 'date-time' as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6), please be aware the given UTC-offset (for. e.g. '+02:00') will be ignored, instead the given date/time will be interpreted as local date/time at the location searched for!!! WARNING: any **Z**(ulu) date/time-instances will be converted with an offset of 'Europe/Zurich'!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2023-04-18T14:55:00+01:00"
          }
        }, {
          "name" : "directionUIC",
          "in" : "query",
          "description" : "If only vehicles departing to a certain direction shall be returned, specify the direction by UIC code of that station.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "example" : 8503000
          }
        }, {
          "name" : "duration",
          "in" : "query",
          "description" : "Interval duration in min. (0..1439) to consider departures. Relates to parameter limit, which will limit within the duration results.)",
          "required" : false,
          "schema" : {
            "maximum" : 1439,
            "minimum" : 0,
            "type" : "integer",
            "default" : 60
          }
        }, {
          "name" : "filterEquivalentStops",
          "in" : "query",
          "description" : "Enables/disables the filtering of equivalent marked stops.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeRank",
          "in" : "query",
          "description" : "Calculate StopV2::rank, which might be used by consumers to consider relevant intermediates stops to display.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number (20) of departures to be returned, related to parameter duration and may result in less or more results than limit).",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "transportProducts",
          "in" : "query",
          "description" : "Optionally restrict to a set of transport-transportProducts.",
          "required" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ICE_EN_CNL_CIS_ES_MET_NZ_PEN_TGV_THA_X2", "EUROCITY_INTERCITY_ICN_INTERCITYNIGHT_SUPERCITY", "INTERREGIO", "FASTTRAIN_REGIOEXPRESS", "SHIP_FERRY_STEAMER", "URBANRAILWAY_STADTEXPRESS_SEMIFASTTRAIN_OMNIBUSTRAIN", "BUS_COACH_TAXI", "CABLEWAY_FUNICULAR_GONDOLALIFT_CHAIRLIFT", "METRO_MOTORAILTRAIN_SPECIALTRAIN_URLAUBSEXPRESS", "TRAMWAY" ]
            }
          }
        }, {
          "name" : "tracks",
          "in" : "query",
          "description" : "Restrict departures optionally from given tracks (related to originUIC).",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "7,8"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DepartureV2"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/delayConfirmation/{archiveDate}/{transportProductName}" : {
      "get" : {
        "tags" : [ "Archive V2" ],
        "summary" : "Returns a list with delayed connections for given train name (e.g. 'IC 728'). Recorded today back to 5 days ago, captured at arrival time for **SBB, BLS, SOB, THURBO, ZB, RegionAlps and TPF**.",
        "operationId" : "getDelayConfirmationByDateAndTransportProductName",
        "parameters" : [ {
          "name" : "archiveDate",
          "in" : "path",
          "description" : "Day of operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "transportProductName",
          "in" : "path",
          "description" : "Transport-product name consisting strictly of 3 parts: category, line, number",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "IC 1 728"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TripV2"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/delayConfirmation/{archiveDate}/{originUIC}/{destinationUIC}" : {
      "get" : {
        "tags" : [ "Archive V2" ],
        "summary" : "@Deprecated use v3/archive/{archiveDate}/trips/by-origin-destination! Get one-way trips between origin and destination STATIONs which are delayed. Recorded today back to 5 days ago, captured at arrival time for **SBB, BLS, SOB, THURBO, ZB, RegionAlps and TPF**.",
        "operationId" : "getDelayConfirmationByDateAndOriginAndDestination",
        "parameters" : [ {
          "name" : "archiveDate",
          "in" : "path",
          "description" : "Day of operation at local date of originUIC or destinationUIC depending on searchForArrival.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "destinationUIC",
          "in" : "path",
          "description" : "Destination STATION of a Trip.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "example" : 8503000
          }
        }, {
          "name" : "originUIC",
          "in" : "path",
          "description" : "Origin STATION of a Trip.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "example" : 8507000
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchForArrival",
          "in" : "query",
          "description" : "Search for arriving (true) or departing (false) trips.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Time (seconds will be ignored) of operation in relation to given archiveDate according to scheduled data. If not provided, the whole day is taken into account.",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "example" : "13:07"
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TripV2"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/delayConfirmation/{archiveDate}/{journeyId}/{transportProductName}/{stationUIC}" : {
      "get" : {
        "tags" : [ "Archive V2" ],
        "summary" : "Returns pdf with given delayed connection. Recorded today back to 5 days ago, captured at arrival time for **SBB, BLS, SOB, THURBO, ZB, RegionAlps and TPF**.",
        "operationId" : "getDelayConfirmationByDateAndJourneyIdAndTransportProductNameAndStation",
        "parameters" : [ {
          "name" : "archiveDate",
          "in" : "path",
          "description" : "Day of operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-04-18"
        }, {
          "name" : "journeyId",
          "in" : "path",
          "description" : "Given by Journey::journeyId (v3.DatedVehicleJourney::id or v2.JourneyDetail::journeyReference) in preceeding request to /delayConfirmation/{archiveDate}",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "707_170525_8501008_0542_8506302"
          }
        }, {
          "name" : "stationUIC",
          "in" : "path",
          "description" : "DiDok code (UIC) of a station.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "example" : 8507000
          }
        }, {
          "name" : "transportProductName",
          "in" : "path",
          "description" : "Transport-product name",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "IC 1 728"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "No entity/resource found (in Backend)",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/arrivals/{destinationUIC}" : {
      "get" : {
        "tags" : [ "Stationboards V2" ],
        "summary" : "@Deprecated (SWITCH to v3/vehicle-journeys/by-arrival/{destination})!<br>Get arrivals at a station.",
        "description" : "Determines next arrivals at a given Stop and point in time within a duration (the results always contain all departures running to the last minute found even if the requested maximum limit was overrun).",
        "operationId" : "getArrivalsByOrigin",
        "parameters" : [ {
          "name" : "destinationUIC",
          "in" : "path",
          "description" : "STATION UIC code for which arrivals shall be retrieved.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "example" : 8507000
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateTime",
          "in" : "query",
          "description" : "Sets the start date/time for which the arrivals shall be retrieved (default is NOW). Notation 'date-time' as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6), please be aware the given UTC-offset (for. e.g. '+02:00') will be ignored, instead the given date/time will be interpreted as local date/time at the location searched for!!! WARNING: any **Z**(ulu) date/time-instances will be converted with an offset of 'Europe/Zurich'!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2023-04-18T14:55:00+01:00"
          }
        }, {
          "name" : "directionUIC",
          "in" : "query",
          "description" : "If only vehicles departing from a certain direction shall be returned, specify the direction by UIC code of that station.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "example" : 8503000
          }
        }, {
          "name" : "duration",
          "in" : "query",
          "description" : "Interval duration in min. (0..1439) to consider arrivals. Relates to parameter limit, which will limit within the duration results.)",
          "required" : false,
          "schema" : {
            "maximum" : 1439,
            "minimum" : 0,
            "type" : "integer",
            "default" : 60
          }
        }, {
          "name" : "filterEquivalentStops",
          "in" : "query",
          "description" : "Enables/disables the filtering of equivalent marked stops.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeRank",
          "in" : "query",
          "description" : "Calculate StopV2::rank, which might be used by consumers to consider relevant intermediates stops to display.<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number (20) of arrivals to be returned, related to parameter duration and may result in less or more results than limit).",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "transportProducts",
          "in" : "query",
          "description" : "Optionally restrict to a set of transport-transportProducts.",
          "required" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ICE_EN_CNL_CIS_ES_MET_NZ_PEN_TGV_THA_X2", "EUROCITY_INTERCITY_ICN_INTERCITYNIGHT_SUPERCITY", "INTERREGIO", "FASTTRAIN_REGIOEXPRESS", "SHIP_FERRY_STEAMER", "URBANRAILWAY_STADTEXPRESS_SEMIFASTTRAIN_OMNIBUSTRAIN", "BUS_COACH_TAXI", "CABLEWAY_FUNICULAR_GONDOLALIFT_CHAIRLIFT", "METRO_MOTORAILTRAIN_SPECIALTRAIN_URLAUBSEXPRESS", "TRAMWAY" ]
            }
          }
        }, {
          "name" : "tracks",
          "in" : "query",
          "description" : "Restrict arrivals optionally to given tracks (related to destinationUIC)",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "7,8"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Arrival"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/INCUBATOR/weather" : {
      "get" : {
        "tags" : [ "Locations V2" ],
        "summary" : "@Deprecated Will be part of /v3/trips! Get weather forecast at a Location.",
        "description" : "Source of data: [meteomatics](https://www.meteomatics.com/en/api/overview)",
        "operationId" : "getWeather",
        "parameters" : [ {
          "name" : "locationValue",
          "in" : "query",
          "description" : "Concrete location for weather forecast. Format: `lat,lon` (double).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "46.948658,7.437406"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateTime",
          "in" : "query",
          "description" : "Date/time with UTC-Offset (related to coordinates), defaults to NOW in 'Europe/Zurich'.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2023-04-18T14:55:00+01:00"
          }
        }, {
          "name" : "locationType",
          "in" : "query",
          "description" : "Type of location (related to v2/locations).",
          "required" : false,
          "deprecated" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "COORDINATES" ],
            "default" : "COORDINATES"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimedWeatherForecast"
                }
              }
            }
          },
          "304" : {
            "description" : "Resource was not modified since last request to the client. Relates to Cache-Control.",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "No entity/resource found (in Backend)",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/b2c/v2/INCUBATOR/trips/{reconstructionContext}/{viaValue}" : {
      "get" : {
        "tags" : [ "Trips V2" ],
        "summary" : "@Deprecated (SWITCH to v3/trips/{id}/{viaEarlierLaterContext})! Get alternate trip (list with 2 entries: [alternateTrip, originTrip]) with alternate leg proposals at given Via earlier or later (aka Partial-Search).",
        "description" : "Useful to find alternate trip with earlier arrival or later departure for desired Via.<br>Scroll-Context cannot be provided in this case.",
        "operationId" : "getTripsByReconstructionContextAndVia",
        "parameters" : [ {
          "name" : "reconstructionContext",
          "in" : "path",
          "description" : "`TripV2::reconstructionContext` or `v3.Trip::id` is a temporary TripContext describing a concrete rideable and priceable journey (and not to be understood as a guaranteed ID which might be cached forever)! Therefore proper reconstruction is not guaranteed (realtime aspects, lacking service-days in the future, ..)!",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "yA88CgJWMRLmBiVDMiVCNkhLSQkJ8ElUJTI0QSUgM3Mzk-BAE="
          }
        }, {
          "name" : "viaValue",
          "in" : "path",
          "description" : "Stop::uic representing viaValue to depart later or earlier within the given trip. Relates to reconstructionContext, viaDepartLater and viaJourneyReference.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : 8507000
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language of translatable properties.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "de", "fr", "it", "en" ],
            "default" : "en"
          }
        }, {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "The given 'Request-ID' will support traceability (monitoring by Instana and logging by Splunk). The given value will be returned by the appropriate response as well (see [SBB Instana](https://confluence.sbb.ch/display/MON/Instana+-+HTTP+Header+Whitelist)).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createSummary",
          "in" : "query",
          "description" : "Create some summary facts about each Trip (useful for UI overviews).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "infos",
          "in" : "query",
          "description" : "LegV2::infos will get an entry of key=RN if available (PAG relevant).",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "RN" ]
          }
        }, {
          "name" : "polyline",
          "in" : "query",
          "description" : "With or without a plottable polyline for each vehicle-journey (if available).<br>This parameter has an impact on performance and/or response volume, set wisely!",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "stopBehaviour",
          "in" : "query",
          "description" : "Stop behaviour influencing whether and what intermediate stops should be returned (relates to StopV2::boardingAlightingStatus). For better data quality include intermediate stops!",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "REAL_BOARDING_ALIGHTING", "ALL_BOARDING_ALIGHTING" ],
            "default" : "REAL_BOARDING_ALIGHTING"
          }
        }, {
          "name" : "viaDepartLater",
          "in" : "query",
          "description" : "Shift trip at given viaValue to leave earlier before Via (false) or depart later (true) connection",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "viaJourneyReference",
          "in" : "query",
          "description" : "Occasionally the same viaValue may be contained in given Trip multiple times, therefore specify PUBLIC_JOURNEY's LegV2::journeyReference where the desired viaValue represents LegV2::destination (last stop), otherwise first such via Stop is assumed.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "1|17166|0|85|18032019"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response found",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TripV2"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "No entity/resource found (in Backend)",
            "headers" : {
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "501" : {
            "description" : "Not implemented yet",
            "headers" : {
              "Content-Language" : {
                "description" : "Language of translatable properties.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Request-ID" : {
                "description" : "Your 'Request-ID' value",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "TripSubscriptionResponse" : {
        "required" : [ "subscriptionId" ],
        "type" : "object",
        "properties" : {
          "subscriptionId" : {
            "type" : "string",
            "description" : "<Kafka-Topic-name>:<UUID>@<HCSS-TechnicalId>",
            "example" : "CEP_CAPRE:550e8400-e29b-11d4-a716-446655440000@69644"
          }
        },
        "description" : "Response for initial `Trip` subscription."
      },
      "Hysteresis" : {
        "type" : "object",
        "properties" : {
          "longTermNotificationStart" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Time in minutes before first departure time (schedule) / observation time for sending out first notifications during long-term observation. During this time the observation will be done periodically every `longTermNotificationInterval` minutes.\n- Missing values and `-1` lead to server defaults being used.\n- 0` disables the long-term observation.\n- Negative values (other than `-1`) lead to long-term observation that starts immediatly (infinite duration).\n- The observation will take place at the time of day specified as the value (abs(longTermNotificationStart) minutes before departure).",
            "format" : "int32",
            "default" : 0
          },
          "longTermNotificationInterval" : {
            "type" : "integer",
            "description" : "Defines the interval in minutes for long-term observation. Observation will be done once every X minutes during the time frame specified in `longTermNotificationStart`\n- Missing values and `-1` lead to server defaults being used.\n- `0` disables the long-term observation.",
            "format" : "int32",
            "default" : 0
          },
          "notificationStart" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Time in minutes before (schedule) departure time to start the observation.",
            "format" : "int32",
            "default" : 0
          }
        },
        "description" : "Subscriptions can be configured to only trigger notifications, if changes exceed a configured limit. This is done using the hysteresis property per user or subscription."
      },
      "SubscriptionPeriod" : {
        "required" : [ "begin", "daysInWeek", "end" ],
        "type" : "object",
        "properties" : {
          "begin" : {
            "type" : "string",
            "description" : "First day of a subscription.",
            "format" : "date",
            "example" : "2022-04-08"
          },
          "end" : {
            "type" : "string",
            "description" : "End of subscription. Use DELETE API to end subscription any time.",
            "format" : "date",
            "example" : "2022-06-30"
          },
          "daysInWeek" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Selected days.",
              "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
            }
          }
        },
        "description" : "Period within the Trip should be observed regularly."
      },
      "TripSubscriptionRequestBody" : {
        "required" : [ "tripId" ],
        "type" : "object",
        "properties" : {
          "tripId" : {
            "type" : "string",
            "description" : "Set the Trip::id (or TripV2::reconstructionContext) to subscribe for realtime observation."
          },
          "subscriptionPeriod" : {
            "$ref" : "#/components/schemas/SubscriptionPeriod"
          },
          "hysteresis" : {
            "$ref" : "#/components/schemas/Hysteresis"
          }
        },
        "description" : "Request body."
      },
      "Problem" : {
        "required" : [ "detail", "status", "title", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "maximum" : 600,
            "exclusiveMaximum" : true,
            "minimum" : 100,
            "type" : "integer",
            "description" : "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "format" : "int32",
            "example" : 500
          },
          "title" : {
            "type" : "string",
            "description" : "A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized).",
            "example" : "Service Unavailable"
          },
          "detail" : {
            "type" : "string",
            "description" : "A human readable explanation specific to this occurrence of the problem."
          },
          "instance" : {
            "type" : "string",
            "description" : "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
            "example" : "/v3/places/8507000"
          },
          "type" : {
            "type" : "string",
            "description" : "An absolute URI that identifies the problem type.  When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML).",
            "default" : "https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/Problem-Manual.md"
          },
          "traceId" : {
            "type" : "string",
            "description" : "The `trace-id` according to the [W3C tracing standard](https://www.w3.org/TR/trace-context/#traceparent-header). (Might be useful for support-cases with the operations teams.)"
          }
        },
        "description" : "Zalando like error-object if not HttpStatus 2xx (see [RFC-7807](https://tools.ietf.org/html/rfc7807)). Check for: Content-Type=application/problem+json"
      },
      "AffectedByLinesRequestBody" : {
        "required" : [ "dateTimeIntervals", "stopPointIntervals" ],
        "type" : "object",
        "properties" : {
          "stopPointIntervals" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StopPointInterval"
            }
          },
          "dateTimeIntervals" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DateTimeInterval"
            }
          },
          "bidirectional" : {
            "type" : "boolean",
            "description" : "`ServiceJourney's` running in both directions (true) or directed (false) ones only.",
            "default" : true
          },
          "includeTransportModes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Optionally restrict to a requestable set of SBB specific TransportMode's (aka OJP PTMode). The set is relevant for any vehicle-journey (`DatedVehicleJourney`, `PTRideLeg`, ..). Relates to `ServiceProduct::vehicleMode` and `::vehicleSubModes`.\n- Default: non-restricted (null or empty-list), by means all TransportMode's are searched.\n- If some choice is made, other TransportMode's are excluded implicitely.\n- To get TRAIN (VehicleMode::id) only, add: [HIGH_SPEED_TRAIN,INTERCITY,INTERREGIO,REGIO,URBAN_TRAIN,SPECIAL_TRAIN]\n>- Be aware that TRAMWAY also searches for METRO (not distinguished it here further!)\n- Also there is no exact possibility to distinguish more precisely between CABLEWAY_GONDOLA_CHAIRLIFT_FUNICULAR at search time<br><br>x-extensible-enum: ",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          }
        },
        "description" : "Request parameters (POST body)."
      },
      "DateTimeInterval" : {
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "string",
            "description" : "Corresponding date/time for `ServiceJourney`. If not set, the first location in the reconstruction will be used that matches the location. Related to `end`.",
            "format" : "date-time"
          },
          "end" : {
            "type" : "string",
            "description" : "Corresponding date/time for `ServiceJourney`, related to `start`.",
            "format" : "date-time"
          },
          "dailyStartingAt" : {
            "type" : "string",
            "description" : "Starting time within [start..end].",
            "format" : "time"
          },
          "dailyEndingAt" : {
            "type" : "string",
            "description" : "Ending time within [start..end]",
            "format" : "time"
          }
        },
        "description" : "Start/end date/time interval.",
        "example" : {
          "start" : "2023-04-18T14:55:00+01:00",
          "end" : "2023-09-07T09:10:00+02:00",
          "dailyStartingAt" : "17:15",
          "dailyEndingAt" : "18:05"
        }
      },
      "StopPointInterval" : {
        "required" : [ "endStopPlaceId", "startStopPlaceId" ],
        "type" : "object",
        "properties" : {
          "startStopPlaceId" : {
            "type" : "string",
            "description" : "Starting point of the `ServiceJourney` at origin (very first stop-point).",
            "example" : "8503000"
          },
          "endStopPlaceId" : {
            "type" : "string",
            "description" : "Starting point of the `ServiceJourney` at destination (very last stop-point).",
            "example" : "8507000"
          }
        },
        "description" : "Start/end description of a `ServiceJourney`.",
        "example" : {
          "startStopPlaceId" : "8503000",
          "endStopPlaceId" : "8507000"
        }
      },
      "TransportModeEnum" : {
        "type" : "string",
        "description" : "Optionally restrict to a requestable set of SBB specific TransportMode's (aka OJP PTMode). The set is relevant for any vehicle-journey (`DatedVehicleJourney`, `PTRideLeg`, ..). Relates to `ServiceProduct::vehicleMode` and `::vehicleSubModes`.\n- Default: non-restricted (null or empty-list), by means all TransportMode's are searched.\n- If some choice is made, other TransportMode's are excluded implicitely.\n- To get TRAIN (VehicleMode::id) only, add: [HIGH_SPEED_TRAIN,INTERCITY,INTERREGIO,REGIO,URBAN_TRAIN,SPECIAL_TRAIN]\n>- Be aware that TRAMWAY also searches for METRO (not distinguished it here further!)\n- Also there is no exact possibility to distinguish more precisely between CABLEWAY_GONDOLA_CHAIRLIFT_FUNICULAR at search time<br><br>x-extensible-enum: ",
        "enum" : [ "HIGH_SPEED_TRAIN", "INTERCITY", "INTERREGIO", "REGIO", "URBAN_TRAIN", "SPECIAL_TRAIN", "SHIP", "BUS", "TRAMWAY", "CABLEWAY_GONDOLA_CHAIRLIFT_FUNICULAR" ]
      },
      "LineAffected" : {
        "type" : "object",
        "properties" : {
          "serviceProductId" : {
            "type" : "string",
            "description" : "Internal ServiceProduct id for reconstruction (aka pid). All `ServiceProduct's` having a `ServiceProduct::line` should provide such a `serviceProductId`.  This value will be null if `ServiceProduct::line` is not provided therefore."
          },
          "serviceProduct" : {
            "$ref" : "#/components/schemas/ServiceProduct"
          },
          "affectedJourneysCount" : {
            "type" : "integer",
            "description" : "Concrete operating-day (aka service-day).",
            "format" : "int32"
          }
        },
        "description" : "Affected line (as given by a `ServiceProduct::line`)."
      },
      "LineAffectedResponse" : {
        "required" : [ "linesAffected" ],
        "type" : "object",
        "properties" : {
          "linesAffected" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineAffected"
            }
          }
        },
        "description" : "Contains a list of `LineAffected`'s matching the search-criteria."
      },
      "Operator" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "DiDok/INFO+/Plabe related operator-number (typically Integer for CH managed codes, however some TU's like in foreign countries might return String expressions like '80___'), relates to operatorName.\nNOVA does not accept trimmed numbers!",
            "example" : "000011"
          },
          "name" : {
            "type" : "string",
            "description" : "Fullname of responsible operator, relates to operatorNumber. This value matches with [OpenTransportData.swiss GoList field 'BEZEICHNUNG_DE'](https://opentransportdata.swiss/de/dataset/goch).<br>(Translated according to Accept-Language.)",
            "example" : "Schweizerische Bundesbahnen SBB"
          },
          "shortName" : {
            "type" : "string",
            "description" : "Abbreviation of operator, relates to operatorName. This value might differ from OpenTransportData.swiss abbreviation (there are 3 different versions, J-S supports 3-digit abbreviation).<br>(Translated according to Accept-Language.)",
            "example" : "SBB"
          }
        },
        "description" : "A company providing public transport services (aka Carrier)."
      },
      "ServiceProduct" : {
        "required" : [ "name", "vehicleMode" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Product name to display to passenger, may consist of {`vehicleSubModeShortName`, `line`, `number`}. (Refers to Transmodel `Line::name/::id`.)",
            "example" : "IC 1 753"
          },
          "line" : {
            "type" : "string",
            "description" : "Usually referring to a specific commercial PT route (where direction might be either way), shown on vehicle displays. If this value is missing, it is probably a _single-journey (de:Einzelfahrt)_. (Refers to Transmodel `Line::id`.)",
            "example" : "1"
          },
          "lineId" : {
            "type" : "string",
            "description" : "External line-reference like SLNID (source INFO+) or TU specific value (for e.g. provided by Postauto AG), relates to `line`.",
            "example" : "R_547_000801_0883"
          },
          "vehicleMode" : {
            "$ref" : "#/components/schemas/VehicleMode"
          },
          "number" : {
            "type" : "string",
            "description" : "Unique per `OperatingDay` (CH day-change at 04:00 !) and name (where 'IC 1' can run several times per day in either of opposite directions). For passenger display use `numberFormatted` instead! (Aka Transmodel: `TrainNumber`)",
            "example" : "753"
          },
          "numberFormatted" : {
            "type" : "string",
            "description" : "Either as `number` or suppressed by BR to not confuse passengers (with internal technical values).",
            "example" : "753"
          },
          "operator" : {
            "$ref" : "#/components/schemas/Operator"
          },
          "routeIndexFrom" : {
            "type" : "integer",
            "description" : "Defines the first ScheduledStop::routeIndex where this product is valid on a Line, null if unknown.",
            "format" : "int32",
            "example" : 3
          },
          "routeIndexTo" : {
            "type" : "integer",
            "description" : "Defines the last ScheduledStop::routeIndex where this product is valid on a Line, null if unknown",
            "format" : "int32",
            "example" : 7
          }
        },
        "description" : "A passenger carrying Service (phyisical public transport vehicle) provided and operated by a certain Operator allocated to a concrete ServiceJourney on an `OperatingDay`.<br>See SBB specific transport-modes: [v580 de:Verkehrsmittelkategorien (aka Transmodel or OJP/Siri `VehicleMode`)](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/TransportMode.md)."
      },
      "VehicleMode" : {
        "required" : [ "corporateIdentityIcon", "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Mode of public transportation according to **v580 TransportMode** (see [de:Verkehrsmittelkategorie](https://www.allianceswisspass.ch/de/tarife-vorschriften/uebersicht/V580/Produkte-der-V580-FIScommun-1)) given  by [opentransportdata.swiss Transportmodes (de:Verkehrsmittel)](https://opentransportdata.swiss/de/dataset/vm-liste) column `EN` as uppercase.<br>x-extensible-enum: values see `VehicleModeEnum`.",
            "example" : "TRAIN"
          },
          "name" : {
            "type" : "string",
            "description" : "Translation of related `id` (according to Accept-Language and [opentransportdata.swiss Transportmodes (de:Verkehrsmittel)](https://opentransportdata.swiss/de/dataset/vm-liste) language column).<br>(Translated according to Accept-Language.)",
            "example" : "Zug"
          },
          "corporateIdentityIcon" : {
            "type" : "string",
            "description" : "Icon-identifier to represent the related `id` (main mode). See [SBB Corporate-Identity catalog (CDN, aka FIGMA Icons)](https://www.figma.com/file/UQBd7cHKav0hr9oXYp7opJ/SBB-Icons?node-id=395%3A2952&t=ad26LgREBbTANSK5-1)",
            "example" : "SBB_oev_b_t02"
          },
          "vehicleSubModeName" : {
            "type" : "string",
            "description" : "Long, displayable submode (aka de:Gattung) related to (main) mode `id`. See [v580 de:Verkehrsmittelkategorien (aka Transmodel or OJP/Siri `VehicleMode`)](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/TransportMode.md)",
            "example" : "InterCity"
          },
          "vehicleSubModeShortName" : {
            "type" : "string",
            "description" : "Short version of related `vehicleSubModeName`.",
            "example" : "IC"
          }
        },
        "description" : "A characterisation of the public transport operation according to the means of transport (aka OJP PtMode; Siri::VehicleMode; v580 TransportMode or de:Verkehrsmittelkategorie). Whether only `id` is given or submode as well depends on available data."
      },
      "AffectedLinesAtStopPlacesRequestBody" : {
        "required" : [ "dateTimeIntervals", "stopPlaceIds" ],
        "type" : "object",
        "properties" : {
          "stopPlaceIds" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Crossing `StopPlace's` by matching `DatedVehicleJourney's`, related to `dateTimeIntervals`.",
              "example" : "8507000"
            }
          },
          "dateTimeIntervals" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DateTimeInterval"
            }
          },
          "includeTransportModes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          },
          "stopPointMatchMode" : {
            "$ref" : "#/components/schemas/StopPointModeEnum"
          }
        },
        "description" : "Request parameters (POST body)."
      },
      "StopPointModeEnum" : {
        "type" : "string",
        "description" : "Matching mode for equivalent stop-points.<br>x-extensible-enum: ",
        "example" : "DEFAULT",
        "enum" : [ "DEFAULT", "EQUIVALENTS", "NONE" ]
      },
      "AffectedJourneysRequestBody" : {
        "required" : [ "dateTimeIntervals", "stopPointIntervals" ],
        "type" : "object",
        "properties" : {
          "stopPointIntervals" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StopPointInterval"
            }
          },
          "dateTimeIntervals" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DateTimeInterval"
            }
          },
          "affectedLineReferences" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AffectedLineReference"
            }
          },
          "serviceProductLineId" : {
            "type" : "string",
            "description" : "Matching `ServiceProduct::lineId`."
          },
          "bidirectional" : {
            "type" : "boolean",
            "description" : "`ServiceJourney's` running in both directions (true) or directed (false) ones only.",
            "default" : true
          },
          "includeTransportModes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Optionally restrict to a requestable set of SBB specific TransportMode's (aka OJP PTMode). The set is relevant for any vehicle-journey (`DatedVehicleJourney`, `PTRideLeg`, ..). Relates to `ServiceProduct::vehicleMode` and `::vehicleSubModes`.\n- Default: non-restricted (null or empty-list), by means all TransportMode's are searched.\n- If some choice is made, other TransportMode's are excluded implicitely.\n- To get TRAIN (VehicleMode::id) only, add: [HIGH_SPEED_TRAIN,INTERCITY,INTERREGIO,REGIO,URBAN_TRAIN,SPECIAL_TRAIN]\n>- Be aware that TRAMWAY also searches for METRO (not distinguished it here further!)\n- Also there is no exact possibility to distinguish more precisely between CABLEWAY_GONDOLA_CHAIRLIFT_FUNICULAR at search time<br><br>x-extensible-enum: ",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          }
        },
        "description" : "Request parameters (POST body)."
      },
      "AffectedLineReference" : {
        "required" : [ "serviceProductId", "serviceProductName" ],
        "type" : "object",
        "properties" : {
          "serviceProductId" : {
            "type" : "string",
            "description" : "Internal `ServiceProduct::id`, related to `LineAffected::serviceProductId` (for e.g. from a previous call returning `LineAffectedResponse`).",
            "example" : "L::1::IC::B2925753281::H_5_000011_::*"
          },
          "serviceProductName" : {
            "type" : "string",
            "description" : "`ServiceProduct::name` line-name. See [ServiceProductReference](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md#serviceproductreference).",
            "example" : "IC 5 1516"
          }
        },
        "description" : "Reference to a ServiceProduct with its id",
        "example" : {
          "start" : "2023-04-18T14:55:00+01:00",
          "end" : "2023-09-07T09:10:00+02:00",
          "dailyStartingAt" : "17:15",
          "dailyEndingAt" : "18:05"
        }
      },
      "AccessibilityBoardingAlighting" : {
        "required" : [ "assistanceService", "corporateIdentityIcon", "description", "limitation", "name" ],
        "type" : "object",
        "properties" : {
          "limitation" : {
            "type" : "string",
            "description" : "The most relevant boarding/alighting accessibility restriction.<br>x-extensible-enum: [NO_HINT,BOARDING_ALIGHTING_SELF,BOARDING_ALIGHTING_BY_CREW,BOARDING_ALIGHTING_BY_NOTIFICATION,BOARDING_ALIGHTING_SHUTTLE_TRANSPORT,BOARDING_ALIGHTING_NOT_POSSIBLE]"
          },
          "name" : {
            "type" : "string",
            "description" : "Textual value for `limitation`.<br>(Translated according to Accept-Language.)"
          },
          "description" : {
            "type" : "string",
            "description" : "Further description about `limitation` consequences.<br>(Translated according to Accept-Language.)"
          },
          "assistanceService" : {
            "$ref" : "#/components/schemas/LinkedText"
          },
          "corporateIdentityIcon" : {
            "type" : "string",
            "description" : "Icon-identifier to represent the related `limitation`. See [SBB Corporate-Identity catalog (CDN, aka FIGMA Icons)](https://www.figma.com/file/UQBd7cHKav0hr9oXYp7opJ/SBB-Icons?node-id=395%3A2952&t=ad26LgREBbTANSK5-1)",
            "example" : "sa-rs"
          }
        },
        "description" : "Hint for handicaped people at a StopPlace to board or alight a Vehicle on a PTRideLeg. Relates to `forBoarding` and `forAlighting`."
      },
      "Address" : {
        "required" : [ "id", "name", "type" ],
        "type" : "object",
        "description" : "Address (source POST.ch directory, aka OJP AddressStructure).<br>Inherited from `Place`.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Place"
        } ]
      },
      "BoardingPosition" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Non-formal id provided by J-S.",
            "example" : "8507000_12_C"
          },
          "name" : {
            "type" : "string",
            "description" : "Boarding/alighting position which could be a concrete track (boardable/alightable by attached `Quay`), a section name (aka de:Sektor) or both.",
            "example" : "C"
          }
        },
        "description" : "A location within a `Quay` from which passengers may directly board, or onto which passengers may directly alight from a vehicle."
      },
      "CompoundTrain" : {
        "required" : [ "legendItems", "operationalOrientation", "trainChanges", "trains" ],
        "type" : "object",
        "properties" : {
          "operationalOrientation" : {
            "type" : "string",
            "description" : "Type of operating direction.<br>x-extensible-enum: [LEFT, RIGHT]",
            "example" : "LEFT"
          },
          "trainChanges" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Consists of [0..*] hints about realtime formation-changes if any.",
              "example" : "Dieser Zug verkehrt ohne Familienwagen."
            }
          },
          "trains" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Train"
            }
          },
          "legendItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegendItemV3"
            }
          },
          "deckPlanAssumed" : {
            "$ref" : "#/components/schemas/DeckPlan"
          }
        },
        "description" : "A vehicle-type composed (aka composition/-formation) of a sequence of **one or more vehicle-type `Train`**. A `CompoundTrain` is always self-propelled (even if a Locomotive is not explicitely distinguishable)."
      },
      "Connection" : {
        "type" : "object",
        "properties" : {
          "mobilityRestrictedTravellerDuration" : {
            "type" : "string",
            "description" : "Minimal transfer [duration](https://www.w3.org/TR/xmlschema11-2/#duration) for a mobility impaired traveller to make transfer. Relates to `includeAccessibility` other than `ALL`. See `mobilityRestrictedTravellerTransferRule` for the rules applied to determine the time needed."
          },
          "mobilityRestrictedTravellerTransferCritical" : {
            "type" : "boolean",
            "description" : "Hint whether the vehicle transfer is critical for handicaped people, related to `mobilityRestrictedTravellerDuration`."
          },
          "mobilityRestrictedTravellerTransferRule" : {
            "type" : "string",
            "description" : "Hint for handicaped experts (such as AMO) about which duration rule was applied to determine minimal transfer time.",
            "example" : "Fallback"
          }
        },
        "description" : "The physical (spatial) possibility for a passenger to change from one public transport vehicle to another to continue the `Trip`, determined by two `ScheduledStopPoint's`. Different times may be necessary to cover the link between these points, depending on the kind of passenger."
      },
      "DeckPlan" : {
        "type" : "object",
        "properties" : {
          "typeTechnical" : {
            "type" : "string",
            "description" : "Vehicle-type resp. technical expression of a physical `TrainElement` (car, wagon) within a `CompoundTrain` (aka de:FahrzeugType gemäss Zugbildungsplan (ZBP)), source CERES.(On `TrainElement` always given, but not guaranteed on `CompoundTrain`.)",
            "example" : "RABe533_SBB"
          },
          "typeAdvertised" : {
            "type" : "string",
            "description" : "Popular train-model like 'Dosto', 'Domino', 'ICN', .. Relates to `typeTechnical`.",
            "example" : "Flirt"
          },
          "typeAdvertisedLink" : {
            "type" : "string",
            "description" : "Related to `typeAdvertised`. Specialized sub-site of [unsere Züge](https://www.sbb.ch/de/bahnhof-services/waehrend-der-reise/unsere-zuege.html), [über uns - Flotte](https://www.bls.ch/de/unternehmen/ueber-uns/flotte#/), [Fahrzeuge - Flotte](https://www.sob.ch/dienstleistungen/fahrzeuge/flotte).",
            "example" : "https://www.sbb.ch/de/bahnhof-services/waehrend-der-reise/unsere-zuege/flirt.html"
          },
          "buildCategory" : {
            "type" : "string",
            "description" : "May contain a concrete descrpition of about how many decks (aka floors) a car may provide.",
            "example" : "Regionalverkehrszug, einstöckig"
          }
        },
        "description" : "Plan of the build plan of vehicle-type such as a car (data quality might not be guaranted properly for all `TrainElement's`)."
      },
      "LegendItemV3" : {
        "required" : [ "id", "text" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Reference to related `LegendItem::text` assigned by aggregated `TrainElement::attributes` for the whole `CompoundTrain`.",
            "example" : "FA"
          },
          "text" : {
            "type" : "string",
            "description" : "Detailed description of related `id`.<br>(Translated according to Accept-Language.)",
            "example" : "Familienabteil"
          }
        },
        "description" : "Provide matching legend-entry related to `TrainElement::attributes`."
      },
      "LinkedText" : {
        "required" : [ "arguments", "template" ],
        "type" : "object",
        "properties" : {
          "template" : {
            "type" : "string",
            "description" : "End-user text.<br>(Translated according to Accept-Language.)<br>If `arguments` are not empty the template must be formatted for end-user readability, by means arguments will be filled in or an UI may make them interactable (for e.g. clickable)."
          },
          "arguments" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map(key=linkable types {EMAIL,PHONE,URL}, value=list of corresponding linkable values in `LinkedText::template` in ascending order of occurance).",
              "items" : {
                "type" : "string",
                "description" : "Map(key=linkable types {EMAIL,PHONE,URL}, value=list of corresponding linkable values in `LinkedText::template` in ascending order of occurance)."
              }
            },
            "description" : "Map(key=linkable types {EMAIL,PHONE,URL}, value=list of corresponding linkable values in `LinkedText::template` in ascending order of occurance)."
          }
        },
        "description" : "Text template with optional formattable parameters. Useful to represent in UIs as clickable features like an e-Mail, phone or URL.<br>Usage see for e.g. [`Notice::text`](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md#linkedtext)."
      },
      "Links" : {
        "type" : "object",
        "properties" : {
          "detail" : {
            "type" : "string",
            "description" : "Link to further details."
          }
        },
        "description" : "List of links as per [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) principle."
      },
      "NavigationPathAssignment" : {
        "type" : "object",
        "properties" : {
          "connectionTo" : {
            "$ref" : "#/components/schemas/Connection"
          }
        },
        "description" : "The allocation of a **navigation path** to a specific `ScheduledStopPoint` assignment, for example to indicate the path to be taken to make a connection.<br>Currently a **transfer-hint is given for handicaped people** at alighting at `PTRideLeg`s` last/alighting `ScheduledStopPoint` when transfering to next vehicle for boarding."
      },
      "Place" : {
        "required" : [ "id", "name", "type" ],
        "type" : "object",
        "properties" : {
          "distanceToSearchPosition" : {
            "type" : "integer",
            "description" : "Specifies the distance in [m] to the given coordinates in request. (Only set for `v3/places/by-coordinates*`).",
            "format" : "int32"
          },
          "canton" : {
            "type" : "string",
            "description" : "In CH this represents the 'canton' abbreviation.",
            "example" : "BE"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The two uppercase character of ISO 3166 code, mostly similar to lowercase IANA identifier (source: DiDok geographic-based _isoCountryCode_).",
            "example" : "CH"
          },
          "name" : {
            "type" : "string",
            "description" : "Unique non-translated name of Place."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique id referable by underlying system(s)."
          },
          "type" : {
            "type" : "string",
            "description" : "**Inheritance discriminator to proper Subclass** (technical field required by [OpenApi 3 Discriminator](https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/)) makes deserialization at consumer side easier."
          },
          "centroid" : {
            "$ref" : "#/components/schemas/Point"
          }
        },
        "description" : "**Abstract Superclass** of concrete inherited sub-classes such as **`StopPlace`, `Address`, `PointOfInterest`**.",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "Point" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type as per GeoJSON, always constant _Point_.",
            "readOnly" : true,
            "default" : "Point"
          },
          "coordinates" : {
            "minItems" : 2,
            "type" : "array",
            "description" : "Coordinates as [longitude, latitude] resp. easting/northing.",
            "example" : [ 7.4385, 46.9488 ],
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        },
        "description" : "Point in [GeoJSON](https://datatracker.ietf.org/doc/html/rfc7946) format."
      },
      "PointOfInterest" : {
        "required" : [ "categories", "id", "name", "type" ],
        "type" : "object",
        "description" : "Point of Interest (POI), such as a Museum (source: [ROKAS POI-Service `Poi`](https://developer.sbb.ch/apis/journey-pois/information).<br>Inherited from `Place`.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Place"
        }, {
          "type" : "object",
          "properties" : {
            "categories" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PointOfInterestCategory"
              }
            }
          }
        } ]
      },
      "PointOfInterestCategory" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of `PointOfInterest` category (list of values see [ROKAS journey-pois API `Poi::category`](https://developer.sbb.ch/apis/journey-pois/documentation).<br>x-extensible-enum: ",
            "example" : "shopping"
          },
          "subtype" : {
            "type" : "string",
            "description" : "Sub-category of `PointOfInterest`, related to `type` resp. main-category (list of values see [ROKAS journey-pois API `Poi::category`](https://developer.sbb.ch/apis/journey-pois/documentation).",
            "example" : "bakery"
          },
          "name" : {
            "type" : "string",
            "description" : "Speaking name of `subtype` (or when unset of `type`).<br>(Translated according to Accept-Language.)",
            "example" : "Bakery"
          }
        },
        "description" : "Category of a Point of Interest (POI)."
      },
      "Quay" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Non-formal id provided by J-S, see `swissLocationId`.",
            "example" : "8507000_12"
          },
          "swissLocationId" : {
            "type" : "string",
            "description" : "Quay SLOID, if known (within Switzerland), related to `name`.Swiss location id (SLOID) from DiDok. More on [Service Points (DiDok) API](https://developer.sbb.ch/apis/servicepoints/documentation). Depending on the context of the response, it might be an SLOID of the Quay itself or its departure/arrival track or even a section of a track.",
            "example" : "ch:1:sloid:7000:55:49"
          },
          "name" : {
            "type" : "string",
            "description" : "Quay name as displayed at a `StopPlace`, therefore special case like '12/13' is possible if decided dynamically at arrival or departure of the vehicle.",
            "example" : "12"
          },
          "parentId" : {
            "type" : "string",
            "description" : "Id of the parent `Quay` (aka Transmodel `ZONE` or `STOP PLACE COMPONENT`), if any, modelling subzone / superzone relation. Useful to determine if 2 quays are on the same physical platform. Use it only for comparison, not for display, and not on long term comparison (may change over time). Only given for `StopPlaceDetailed`.",
            "example" : "8507000_12/13"
          }
        },
        "description" : "A `Quay` is the **place to board or alight a concrete vehicle by passengers**, aka **passenger-platform** for **train (de:Gleis)**, or **bus stand (de:Kante)** or **ship pier (de:Steg)**, related to a `ServiceProduct::vehicleMode`.",
        "example" : 13
      },
      "ScheduledStopPoint" : {
        "required" : [ "delayUndefined", "forAlighting", "forBoarding", "occupancyFirstClass", "occupancySecondClass", "place", "requestStop" ],
        "type" : "object",
        "properties" : {
          "place" : {
            "$ref" : "#/components/schemas/StopPlace"
          },
          "forBoarding" : {
            "type" : "boolean",
            "description" : "Boarding (de:einsteigen) at a StopPlace on a PTRide;. Relates to **`departure`**, `stopStatus` and `accessibilityBoardingAlighting`, see [Routing-Basics](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/RoutingBasics.md)."
          },
          "forAlighting" : {
            "type" : "boolean",
            "description" : "Alighting (de:aussteigen) at a StopPlace on a PTRide. Relates to **`arrival`**, `stopStatus` and `accessibilityBoardingAlighting`, see [Routing-Basics](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/RoutingBasics.md)."
          },
          "accessibilityBoardingAlighting" : {
            "$ref" : "#/components/schemas/AccessibilityBoardingAlighting"
          },
          "stopStatus" : {
            "type" : "string",
            "description" : "Status at ScheduledStopPlace on a PTRide.This is is useful when iterating from stop to stop getting appropriate state symbols (de:Perlenschnur), see [Routing-Basics](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/RoutingBasics.md).<br>x-extensible-enum: [PLANNED,CANCELLED,BEGIN_PARTIAL_CANCELLATION,END_PARTIAL_CANCELLATION,NOT_SERVICED,UNPLANNED]"
          },
          "stopStatusFormatted" : {
            "type" : "string",
            "description" : "Speakable description about related `stopStatus` enum, if any."
          },
          "requestStop" : {
            "type" : "boolean",
            "description" : "Passenger needs to call for a vehicle stop (aka OJP `RequestStop`, resp. de:Halt auf Verlangen).",
            "default" : false
          },
          "arrival" : {
            "$ref" : "#/components/schemas/StopCall"
          },
          "departure" : {
            "$ref" : "#/components/schemas/StopCall"
          },
          "delayUndefined" : {
            "type" : "boolean",
            "description" : "true: After a very long delay at either `arrival` or `departure` (also see related `StopCall::delayText`), according to SBB business rules. Typically blocks the whole journey or at least the ending part of a journey (like locomotive break at 3rd stop until the very last stop).",
            "default" : false
          },
          "routeIndex" : {
            "type" : "integer",
            "description" : "Route index on this `ServiceJourney` (aka OJP order). Usually starting from 0 or 1 and incrementing by 1. However if the route index value jumps:\n - it is most likely that the journey was rerouted\n - or being a virtual Stop",
            "format" : "int32"
          },
          "occupancyFirstClass" : {
            "type" : "string",
            "description" : "Occupancy in 1st class (average) at StopPlace on a PTRideLeg.<br>x-extensible-enum: [UNKNOWN,LOW,MEDIUM,HIGH]"
          },
          "occupancySecondClass" : {
            "type" : "string",
            "description" : "Occupancy in 2nd class (average) at StopPlace on a PTRideLeg.<br>x-extensible-enum: [UNKNOWN,LOW,MEDIUM,HIGH]"
          },
          "exitSide" : {
            "type" : "string",
            "description" : "Exit side at this stop in direction of journey (null if unknown or irrelevant for e.g. in a Bus or on a Bicycle).<br>x-extensible-enum: [LEFT,RIGHT]",
            "example" : "LEFT"
          },
          "rank" : {
            "type" : "integer",
            "description" : "Rank of importance based on intermediate ScheduledStopPoint priority and distance within a (partial) ServiceJourney. SBB KI rule based on display-info to find relevant intermediate stops to present on a visual stationboard (de:Perronanzeiger).Origin and destination of departure/arrival have always rank=null. Depends on /v3/departures or /v3/arrivals includeRank=true",
            "format" : "int32"
          }
        },
        "description" : "Passenger relevant stop-point on a `ServiceJourney`. Some properties may further by distinguished on either `arrival` and/or `departure StopCall` aspects."
      },
      "ServiceJourneyAffected" : {
        "required" : [ "operatingDaysMatched", "situationMessageIds" ],
        "type" : "object",
        "properties" : {
          "serviceProduct" : {
            "$ref" : "#/components/schemas/ServiceProduct"
          },
          "operatingDay" : {
            "type" : "string",
            "description" : "Concrete operating-day (aka service-day).",
            "format" : "date"
          },
          "firstStopPoint" : {
            "$ref" : "#/components/schemas/ScheduledStopPoint"
          },
          "lastStopPoint" : {
            "$ref" : "#/components/schemas/ScheduledStopPoint"
          },
          "firstMatchStopPoint" : {
            "$ref" : "#/components/schemas/ScheduledStopPoint"
          },
          "lastMatchStopPoint" : {
            "$ref" : "#/components/schemas/ScheduledStopPoint"
          },
          "situationMessageIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Identity of `PTSituationMessage::id` (aka HIM ID)."
            }
          },
          "operatingDaysMatched" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Concrete operating-days within this yearly `OperatingPeriod` depending on the following use cases:\n- `name=Trip` in the context of `Trip::operatingPeriods`: all service-days of the `Trip`.\n- `name=ServiceJourney` in the context of `ServiceJourney::operatingPeriods`: all service-days of the related `ServiceProduct`.\n- `name=StopPlace` in the context of `ServiceCalendar::operatingPeriods` the planning-interval within this yearly `OperatingPeriod`.",
              "format" : "date"
            }
          }
        },
        "description" : "Affected `ServiceJourney`."
      },
      "ServiceJourneyAffectedResponse" : {
        "required" : [ "serviceJourneys" ],
        "type" : "object",
        "properties" : {
          "serviceJourneys" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceJourneyAffected"
            }
          }
        },
        "description" : "Contains a list of `ServiceJourneyAffected`'s."
      },
      "StopCall" : {
        "required" : [ "quayChanged" ],
        "type" : "object",
        "properties" : {
          "timeAimed" : {
            "type" : "string",
            "description" : "Date/time ([ISO-8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) UTC with time-numoffset (like '+02:00')) **planned**, relates to `timeRt` (might be null for e.g. in virtual stops).",
            "format" : "date-time",
            "example" : "2023-04-18T14:55:00+01:00"
          },
          "timeRt" : {
            "type" : "string",
            "description" : "Date/time ([ISO-8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) UTC with time-numoffset (like '+02:00')) in **realtime** (oversteers related `timeAimed`!).",
            "format" : "date-time"
          },
          "delayText" : {
            "type" : "string",
            "description" : "Formatted passenger message about the delay (may also relate to `ScheduledStopPoint::delayUndefined`) in the role of this call according to SBB business rules.",
            "example" : "ca. +5'"
          },
          "quayAimed" : {
            "$ref" : "#/components/schemas/Quay"
          },
          "quayRt" : {
            "$ref" : "#/components/schemas/Quay"
          },
          "quayChanged" : {
            "type" : "boolean",
            "description" : "Related to `quayAimed` and `quayRt`.**false** even if the related `StopCall::quayRt` is set, this is not considered a realtime change (acc. to SBB busines rules); **true** real `*QuayRt` change, also see `ServiceAlteration::quayChangedFormatted`.",
            "default" : false
          },
          "quayFormatted" : {
            "type" : "string",
            "description" : "**Currently given on `departure StopCall`**. Principally same as related `quayAimed` resp. its `Quay::name` but in case of wing-trains (de:Flügelzüge) specified with **direction specific boarding-sections**.<br>(For e.g. 'Bern to Zweisimmen' with a split of train-composition at Spiez where customers might reach the wrong destination if they board the wrong car!)",
            "example" : "12CD"
          },
          "trainStopAssignment" : {
            "$ref" : "#/components/schemas/TrainStopAssignment"
          },
          "navigationPathAssignment" : {
            "$ref" : "#/components/schemas/NavigationPathAssignment"
          }
        },
        "description" : "Passing a `ScheduledStopPoint` on a `ServiceJourney` may have two 'views': one for arrival and one for departure aspects (aka OJP LegAlight::StopPoint, LegBoard::StopPoint; NeTeX Call (which is a VIEW on a `ScheduledStopPoint`)."
      },
      "StopPlace" : {
        "required" : [ "id", "name", "tariffBorder", "type", "vehicleModes" ],
        "type" : "object",
        "description" : "A place (de:Haltestelle) comprising one or more areas where vehicles may stop and where passengers may board or leave vehicles or prepare their trip. The name is given in regional language only.<br>Inherited from `Place`.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Place"
        }, {
          "type" : "object",
          "properties" : {
            "tariffBorder" : {
              "type" : "boolean",
              "description" : "Boundary for fare calculation resp. whether the **stop represents a tariff border between Switzerland and a neighbouring country**, where _true_ is based on a NOVA Tariff-BorderPoint (and must not be missunderstand by [UIC borderpoints](https://uic.org/support-activities/it/article/border-points)."
            },
            "weighting" : {
              "type" : "integer",
              "description" : "The higher the traffic load/importance the higher the value, null if unknown.",
              "format" : "int32",
              "example" : 30170
            },
            "vehicleModes" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/VehicleMode"
              }
            },
            "links" : {
              "$ref" : "#/components/schemas/Links"
            }
          }
        } ]
      },
      "Train" : {
        "required" : [ "components" ],
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Direction label, relates to `CompoundTrain::operationalOrientation`, if known. SBB UIs usually suppress the direction if only ONE `Train` is given in `CompoundTrain`.",
            "example" : "Burgdorf"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrainComponent"
            }
          }
        },
        "description" : "A vehicle-type composed of physical `TrainElement's` in a certain order, i.e. of wagons (aka car, coach) assembled together. Multiple `Train's` (aka wing-train or de:Flügelzug) may be coupled or decoupled in separate self-propelled units within a `CompoundTrain` on its journey."
      },
      "TrainComponent" : {
        "required" : [ "attributesAdvertised", "closed", "displayNoPassageIcon", "element", "nextPassage", "occupancy", "previousPassage" ],
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label on the `TrainElement`, typically a number visible by passenger close to the boarding door.",
            "example" : "7"
          },
          "occupancy" : {
            "type" : "string",
            "description" : "Occupancy prognosed on a daily basis (not a realtime fact, overall 1st and/or 2nd class).<br>x-extensible-enum: [LOW,MEDIUM,HIGH,UNKNOWN]",
            "example" : "MEDIUM",
            "default" : "UNKNOWN"
          },
          "previousPassage" : {
            "type" : "boolean",
            "description" : "Determines if a passenger may pass (de: Durchgang) to the previous car within formation."
          },
          "nextPassage" : {
            "type" : "boolean",
            "description" : "Determines if a passenger may pass (de: Durchgang) to the next car within the formation."
          },
          "displayNoPassageIcon" : {
            "type" : "boolean",
            "description" : "true: icon for no passage should be displayed between this car and the next one (from left to right)."
          },
          "closed" : {
            "type" : "boolean",
            "description" : "true: For unknown reasons the car is not usable for passengers: false: Open or unknown."
          },
          "restaurantAttended" : {
            "type" : "boolean",
            "description" : "true: the restaurant is attended, false: the restaurant is not attended, null: no restaurant on this car"
          },
          "element" : {
            "$ref" : "#/components/schemas/TrainElement"
          },
          "boardingPosition" : {
            "$ref" : "#/components/schemas/BoardingPosition"
          },
          "attributesAdvertised" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Attributes advertised on this particular `TrainComponent`.",
              "example" : "[RESERVED_BY_GROUP]"
            }
          }
        },
        "description" : "An elementary component of a `Train` as an instance of a correspondent `TrainElement` on a concrete `ServiceJourney`, where specific values at each `ScheduledStopPoint` for this unique formation on an operation-day, may have its dynamic state (like section or exitSide)."
      },
      "TrainElement" : {
        "required" : [ "attributes" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Aka car-UIC, which is potentially mapped to beacons installed. `/v3/vehicles/by-vehicle/{vehicleId}` may detect a `Train` composing a `TrainElement` (mainly for SBB operated `VehicleMode` TRAIN) is on its way within a certain `ServiceJourney` (null means not present).",
            "example" : "938525010246"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of car (where a 'CAR' may be self-propelled in case of a combined passenger-car/locomotive (de:Triebwagen)): <br>x-extensible-enum:  ['FA','WR','CC','WL','CAR','LOC','UNKNOWN']"
          },
          "passengerClass" : {
            "type" : "string",
            "description" : "Passenger-class ('1' or '2') of the car, if known.<br>x-extensible-enum: "
          },
          "attributes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Attributes of the car (see `LegendItemV3` for description).",
              "example" : "[BZ]"
            }
          },
          "deckPlan" : {
            "$ref" : "#/components/schemas/DeckPlan"
          }
        },
        "description" : "An elementary component of a `Train` (for e.g. a wagon/car/locomotive or in general 'carriage') with rather permanent properties, see `TrainComponent` for its instance on a concrete journey."
      },
      "TrainStopAssignment" : {
        "required" : [ "compoundTrain" ],
        "type" : "object",
        "properties" : {
          "compoundTrain" : {
            "$ref" : "#/components/schemas/CompoundTrain"
          }
        },
        "description" : "The association of a `TrainComponent` at a `ScheduledStopPoint` with a specific `StopPlace` and also possibly a `Quay` and `BoardingPosition`."
      },
      "AffectedJourneysAtStopPlacesRequestBody" : {
        "required" : [ "dateTimeIntervals", "stopPlaceIds" ],
        "type" : "object",
        "properties" : {
          "stopPlaceIds" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Crossing `StopPlace's` by matching `DatedVehicleJourney's`, related to `dateTimeIntervals`.",
              "example" : "8507000"
            }
          },
          "dateTimeIntervals" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DateTimeInterval"
            }
          },
          "affectedLineReference" : {
            "$ref" : "#/components/schemas/AffectedLineReference"
          },
          "serviceProductLineId" : {
            "type" : "string",
            "description" : "Matching `ServiceProduct::lineId`, may represent a kind of overall journeys of a certain `ServiceProduct::line`, see related `affectedLineReference`."
          },
          "includeTransportModes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          },
          "stopPointMatchMode" : {
            "$ref" : "#/components/schemas/StopPointModeEnum"
          }
        },
        "description" : "Request parameters (POST body)."
      },
      "AccessibilityEnum" : {
        "type" : "string",
        "description" : "Accessibility (de:BFR/BAIM) for better handicap support using vehicles. If available relevant on first (boarding) and last (alighting) ScheduledStopPoint per PTRideLeg. Impacts `ScheduledStopPoint::accessibilityBoardingAlighting`.<br>x-extensible-enum:  see enum values.<br>`ServiceJourney::notices` will get an entry of `type=INFO, key=RN` if available, its `Notice::value` is relevant for Postauto AG (PAG) operations-reference.",
        "enum" : [ "ALL", "ALL_TRANSFER_CRITICAL_HINT", "BOARDING_ALIGHTING_SELF", "BOARDING_ALIGHTING_BY_CREW", "BOARDING_ALIGHTING_BY_NOTIFICATION", "BOARDING_ALIGHTING_SHUTTLE_TRANSPORT", "NONE" ],
        "default" : "ALL"
      },
      "AlternateMatchEnum" : {
        "type" : "string",
        "description" : "Post-filter to adjust cancelled/alternate 1:1 Trip cases per response (de:Ausfall/Ersatz) according to SBB BR, where other Trip's remain as is.<br>x-extensible-enum: \n- IRRELEVANT: no adaption\n- BOTH: as IRRELEVANT but some Note's will be cloned from cancelled to 1:1 alternate Trip\n- ALTERNATE_ONLY: suppresses cancelled 1:1 Trip's if matched with alternates\n- CANCELLED_ONLY: suppress exactly matching 1:1 alternates",
        "enum" : [ "IRRELEVANT", "BOTH", "ALTERNATE_ONLY", "CANCELLED_ONLY" ],
        "default" : "IRRELEVANT"
      },
      "NoticeAttributeEnum" : {
        "type" : "string",
        "description" : "Searchable `Notice's` values for type=ATTRIBUTE. Relates to `ServiceJourney::notices`.<br>x-extensible-enum: \n- `TripsByOriginAndDestinationPostBody::includeNoticeAttributes`: all values supported and also applied in related `vias` except COUCHETTE/SLEEPING_CAR\n- `ServiceCalendarByOriginAndDestinationRequestBody::includeNoticeAttributes`: only 'BIKE_TRANSPORT' supported yet",
        "enum" : [ "GROUPS_ADMITTED", "BIKE_TRANSPORT", "COUCHETTE", "SLEEPING_CAR", "EXCLUDE_TILTING_TRAIN" ]
      },
      "OccupancyAverageEnum" : {
        "type" : "string",
        "description" : "Find trips with average occupancy (or better, by means emptier) per passenger-class in Public Transportation vehicle.<br>x-extensible-enum: ",
        "enum" : [ "ALL", "FIRST_LOW", "FIRST_MEDIUM", "FIRST_HIGH", "SECOND_LOW", "SECOND_MEDIUM", "SECOND_HIGH" ],
        "default" : "ALL"
      },
      "PTViaNoChangeAtReference" : {
        "required" : [ "stopPlaceId" ],
        "type" : "object",
        "properties" : {
          "stopPlaceId" : {
            "type" : "string",
            "description" : "StopPlace::id where Vehicle must NOT be changed.",
            "example" : "8506000"
          },
          "status" : {
            "type" : "string",
            "description" : "Status to force transfer-behaviour at a `StopPlace` (whether a StopPlace is meta is defined by SBB Data-Management).<br>x-extensible-enum: ",
            "enum" : [ "NO_TRANSFER_META_STOPPLACE", "NO_TRANSFER" ],
            "default" : "NO_TRANSFER_META_STOPPLACE"
          }
        },
        "description" : "Specificy to prevent transferring Vehicle's at certain `StopPlace` on `Trip`. Can be useful to avoid certain places (for e.g. not handicap capable enough)."
      },
      "PTViaNotReference" : {
        "required" : [ "stopPlaceId" ],
        "type" : "object",
        "properties" : {
          "stopPlaceId" : {
            "type" : "string",
            "description" : "StopPlace::id NOT to be passed as via.",
            "example" : "8503000"
          },
          "status" : {
            "type" : "string",
            "description" : "No pass through status.<br>x-extensible-enum: ",
            "enum" : [ "NO_PASS_THROUGH_META_STOPPLACE", "NO_PASS_THROUGH" ],
            "default" : "NO_PASS_THROUGH_META_STOPPLACE"
          }
        },
        "description" : "Specificy to prevent routing by a certain `StopPlace` on a `Trip`, by means such a place should not be on the Trip whether as a transferring nor intermediate stop."
      },
      "PTViaReference" : {
        "required" : [ "stopPlaceId" ],
        "type" : "object",
        "properties" : {
          "stopPlaceId" : {
            "type" : "string",
            "description" : "`StopPlace::id` to be passed as via.",
            "example" : "8507000"
          },
          "status" : {
            "type" : "string",
            "description" : "Boarding/alighting-status at via `StopPlace`.<br>x-extensible-enum: ",
            "enum" : [ "BOARDING_ALIGHTING_NECESSARY", "BOARDING_NOT_NECESSARY", "ALIGHTING_NOT_NECESSARY", "BOARDING_ALIGHTING_NOT_NECESSARY" ],
            "default" : "BOARDING_ALIGHTING_NECESSARY"
          },
          "transportModes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The modes are relevant until the next Via. Optionally restrict to a requestable set of SBB specific TransportMode's (aka OJP PTMode). The set is relevant for any vehicle-journey (`DatedVehicleJourney`, `PTRideLeg`, ..). Relates to `ServiceProduct::vehicleMode` and `::vehicleSubModes`.\n- Default: non-restricted (null or empty-list), by means all TransportMode's are searched.\n- If some choice is made, other TransportMode's are excluded implicitely.\n- To get TRAIN (VehicleMode::id) only, add: [HIGH_SPEED_TRAIN,INTERCITY,INTERREGIO,REGIO,URBAN_TRAIN,SPECIAL_TRAIN]\n>- Be aware that TRAMWAY also searches for METRO (not distinguished it here further!)\n- Also there is no exact possibility to distinguish more precisely between CABLEWAY_GONDOLA_CHAIRLIFT_FUNICULAR at search time<br><br>x-extensible-enum: ",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          },
          "waittime" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Minimum waiting time to be spent at via StopPlace [min.]. Some additional minutes might be added by underlying router (aka OJP dwellTime).",
            "format" : "int32"
          },
          "direct" : {
            "type" : "boolean",
            "description" : "true: Via section has to be direct (relates to ChangeBehaviour::maxChanges); false: might be direct or not.",
            "default" : false
          },
          "couchette" : {
            "type" : "boolean",
            "description" : "true: Via section should include couchette Car.",
            "default" : false
          },
          "sleepingCar" : {
            "type" : "boolean",
            "description" : "true: Via section should include sleeping car.",
            "default" : false
          }
        },
        "description" : "Specification and behaviour of via StopPlace (aka OJP TripViaStructure).\n- TripsByOriginAndDestinationPostBody: all filters supported\n- ServiceCalendarByOriginAndDestinationRequestBody: only `stopPlaceId` and `transportModes` supported yet"
      },
      "RealtimeModeEnum" : {
        "type" : "string",
        "description" : "<br>x-extensible-enum: \n- `REALTIME` potentially planned and RT **including non-rideable** (like cancelled)\n- `REALTIME_RIDEABLE` as `REALTIME` but **excluding non-rideable**\n- `OFF` **planned only**",
        "enum" : [ "REALTIME", "REALTIME_RIDEABLE", "OFF" ],
        "default" : "REALTIME"
      },
      "TripMobilityFilter" : {
        "type" : "object",
        "properties" : {
          "maxTransfers" : {
            "maximum" : 11,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Max. number of Vehicle changes. The parameter is relevant between origin and destination or between origin and ptVias[0] if any among all PTRideLeg's.",
            "format" : "int32",
            "default" : 11
          },
          "walkSpeed" : {
            "type" : "integer",
            "description" : "Walking speed when changing Vehicles: 100% means default speed, 200% doubles it and below 100% will reduce changing time below SBB recommendation.\n- If the calculation does not result in full minutes, it is rounded using 'round half up' method.\n- See `Trip::fastTransfer` for time risky changes.",
            "format" : "int32",
            "default" : 100
          },
          "additionalTransferTime" : {
            "type" : "integer",
            "description" : "Additional time [in min.] on top of default transfer time when changing Vehicle's.",
            "format" : "int32",
            "default" : 0
          },
          "minTransferTime" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Minimum change time [in min.] when changing transport-products. There is no constant default, depends on SBB defined changing time at specific STATION.",
            "format" : "int32"
          },
          "maxTransferTime" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Maximum change time at stop in minutes. In realtimeMode=FULL only planned time is considered (by means not guaranteed if dateTimeRt is given).",
            "format" : "int32"
          }
        },
        "description" : "Parameters to restrict the transfer options - particularly for interchanging PTRideLeg's by passenger (de: Individuelles Umsteigeverhalten).\n- TripsByOriginAndDestinationPostBody: all filters supported\n- ServiceCalendarByOriginAndDestinationRequestBody: only `maxTransfers` supported yet"
      },
      "TripsIntervalByOriginAndDestinationRequestBody" : {
        "required" : [ "destination", "origin" ],
        "type" : "object",
        "properties" : {
          "origin" : {
            "type" : "string",
            "description" : "Starting point of the trip at origin (departure). See v3 **PlaceReference** as `StopPlace` only in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
            "example" : "8503000"
          },
          "destination" : {
            "type" : "string",
            "description" : "Ending point of the trip at destination (arrival). See **PlaceReference** as `StopPlace` only in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
            "example" : "[7.435194,46.945679]"
          },
          "date" : {
            "type" : "string",
            "description" : "(Local) date at either origin related to `time`, defaults to TODAY.",
            "format" : "date",
            "example" : "2023-04-18"
          },
          "time" : {
            "type" : "string",
            "description" : "Local time at either origin related to `date`, defaults to NOW (seconds will be ignored).",
            "format" : "time",
            "example" : "13:07"
          },
          "occupancyAverage" : {
            "$ref" : "#/components/schemas/OccupancyAverageEnum"
          },
          "mobilityFilter" : {
            "$ref" : "#/components/schemas/TripMobilityFilter"
          },
          "vias" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PTViaReference"
            }
          },
          "viasNot" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PTViaNotReference"
            }
          },
          "viasNoTransfer" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PTViaNoChangeAtReference"
            }
          },
          "realtimeMode" : {
            "$ref" : "#/components/schemas/RealtimeModeEnum"
          },
          "pagingCursor" : {
            "type" : "string",
            "description" : "Based on a returned `TripResponse::pagingCursor`, `previous` or `next` connections **reusing the very same search-parameters** can be retrieved by scrolling pagination mechanisme, see `Trip::pagingChecksum`)."
          },
          "limit" : {
            "type" : "integer",
            "description" : "Maximum number of results to be returned, related to parameter `duration` and may reduce or expand `limit` settings.",
            "format" : "int32",
            "default" : 20
          },
          "duration" : {
            "maximum" : 1439,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Interval duration [min.] (0..1439) to consider. Relates to parameter `limit`, which will limit results within the duration.",
            "format" : "int32",
            "default" : 60
          },
          "includeAccessibility" : {
            "$ref" : "#/components/schemas/AccessibilityEnum"
          },
          "includeAlternateMatch" : {
            "$ref" : "#/components/schemas/AlternateMatchEnum"
          },
          "includeNoticeAttributes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoticeAttributeEnum"
            }
          },
          "includeTransportModes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          },
          "includeSummary" : {
            "type" : "boolean",
            "description" : "Create some summary facts about each Trip (useful for UI overviews).<br>This parameter has an impact on performance and/or response volume, set wisely!",
            "default" : false
          },
          "includeIntermediateStops" : {
            "type" : "string",
            "description" : "Whether the `PTRideLeg's` should include intermediate stops (between the passenger's board and alight in `ServiceJourney::stopPoints`).<br>x-extensible-enum:  [ALL,NONE,BOARDING_ALIGHTING] where ALL is BOARDING_ALIGHTING plus virtual stops.",
            "enum" : [ "ALL", "BOARDING_ALIGHTING", "NONE" ],
            "default" : "ALL"
          }
        },
        "description" : "Request parameters (POST body)."
      },
      "AccessEnd" : {
        "required" : [ "place", "timeAimed" ],
        "type" : "object",
        "properties" : {
          "place" : {
            "$ref" : "#/components/schemas/Place"
          },
          "timeAimed" : {
            "type" : "string",
            "description" : "Date/time ([ISO-8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) UTC with time-numoffset (like '+02:00')) planned, relates to `AccessLeg::start/::end` whether departure or arrival time.",
            "format" : "date-time",
            "example" : "2023-04-18T14:55:00+01:00"
          }
        },
        "description" : "Stop point on an `AccessLeg`."
      },
      "AccessLeg" : {
        "required" : [ "end", "id", "mode", "start", "type" ],
        "type" : "object",
        "description" : "Footpath or road access to/from a StopPlace at one end:\n- and typically an Address/PointOfInterest on the other end. May occur at the beginning or end of a Trip (aka OJP ContinuousLeg)- or in rare cases StopPlace as well (for Meta-Station footpath like main-station to any of its bus edges).<br>Inherited from `Leg`.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Leg"
        }, {
          "type" : "object",
          "properties" : {
            "start" : {
              "$ref" : "#/components/schemas/AccessEnd"
            },
            "end" : {
              "$ref" : "#/components/schemas/AccessEnd"
            }
          }
        } ]
      },
      "AffectedEdge" : {
        "required" : [ "direction" ],
        "type" : "object",
        "properties" : {
          "iconPosition" : {
            "$ref" : "#/components/schemas/Point"
          },
          "spatialProjection" : {
            "$ref" : "#/components/schemas/LineString"
          },
          "direction" : {
            "type" : "string",
            "description" : "Direction a vehicle is going to on the affected edge where `PTSituationMessage` applies, relates to `spatialProjection`.<br>x-extensible-enum: [UNKNOWN,STRAIGHT,OPPOSITE,BIDIRECTIONAL]",
            "example" : "BIDIRECTIONAL"
          }
        },
        "description" : "Geometrical polyline related to a `PTSituation::affectedScope`."
      },
      "AffectedRegion" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of region (by underlying system HIM)."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of region in underlying system (HIM) terminology, see related `nameFormatted` for a more speaking value, like:<br>- BVI1: CH_WEST\n- BVI2: CH_MID\n- BVI3: CH_TICINO\n- BVI4: CH_ZURICH\n- BVI5: CH_EAST\n- CSTRI1: GERMANY\n- CSTRI2: AUSTRIA\n- CSTRI3: ITALY\n- CSTRI4: FRANCE\n",
            "example" : "BVI2"
          },
          "nameFormatted" : {
            "type" : "string",
            "description" : "Speaking equivalent value if known for related `name` of the region, like:<br>- CH_WEST: BVI1\n- CH_MID: BVI2\n- CH_TICINO: BVI3\n- CH_ZURICH: BVI4\n- CH_EAST: BVI5\n- GERMANY: CSTRI1\n- AUSTRIA: CSTRI2\n- ITALY: CSTRI3\n- FRANCE: CSTRI4\n",
            "example" : "CH_ZURICH"
          },
          "iconPosition" : {
            "$ref" : "#/components/schemas/Point"
          },
          "spatialProjection" : {
            "$ref" : "#/components/schemas/LineString"
          },
          "geofence" : {
            "$ref" : "#/components/schemas/GeofenceCircle"
          }
        },
        "description" : "Region-Information related to a `PTSituation::affectedScope`."
      },
      "AlternativeModeLeg" : {
        "required" : [ "id", "mode", "type" ],
        "type" : "object",
        "description" : "Movement of a user (passenger, driver) using an ALTERNATIVE MODE OF OPERATION from one PLACE to another and that is not an `AccessLeg` nor a `PTConnectionLeg`.<br>Inherited from `Leg`.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Leg"
        } ]
      },
      "ArchiveConnectionReliability" : {
        "required" : [ "alternative", "original" ],
        "type" : "object",
        "properties" : {
          "original" : {
            "type" : "string",
            "description" : "Reliability of the connection itself regarding its realtime status including cancellations, delays etc. to the get to the destination in time.<br>x-extensible-enum: [UNKNOWN,GUARANTEED,HIGH,LOW,ABORTIVE]",
            "default" : "UNKNOWN"
          },
          "alternative" : {
            "type" : "string",
            "description" : "Reliability of an alternative connection to the original connection regarding its realtime status including cancellations, delays etc.<br>x-extensible-enum: [UNKNOWN,GUARANTEED,HIGH,LOW,ABORTIVE]"
          }
        },
        "description" : "Reliability of the connection or potential alternative connections **in the past** that will indicate the likelihood of getting the user to the requested destination in time (given by `Archive API /v3/archive/{archiveDate}/trips` only)."
      },
      "Audience" : {
        "required" : [ "type", "urls" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "<br>x-extensible-enum:  see `AudienceEnum`.",
            "example" : "B2C_TEXT"
          },
          "urls" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudienceLink"
            }
          },
          "validFromDate" : {
            "type" : "string",
            "description" : "Valid-from date, to be combined with time.",
            "format" : "date",
            "example" : "2022-08-30"
          },
          "validFromTime" : {
            "type" : "string",
            "description" : "Valid-from time, to be combined with date.",
            "format" : "time-local",
            "example" : "08:45"
          },
          "validToDate" : {
            "type" : "string",
            "description" : "Valid-to date, to be combined with time.",
            "format" : "date",
            "example" : "2022-09-06"
          },
          "validToTime" : {
            "type" : "string",
            "description" : "Valid-to time, to be combined with date.",
            "format" : "time-local",
            "example" : "17:15"
          }
        },
        "description" : "Audience (like enduser channels, operator-employees, ..) to be informed (aka: de:Publikationskanäle)."
      },
      "AudienceLink" : {
        "required" : [ "url" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Text describing the content in the link. ",
            "example" : "Trains replaced by buses"
          },
          "url" : {
            "type" : "string",
            "description" : "Download link. ",
            "example" : "https://fahrplant.sbb.ch/him-download/1516778102098_0229-0304_REN_AfficheA4BY-PRMA.pdf"
          }
        },
        "description" : "Named links."
      },
      "ConnectionEnd" : {
        "required" : [ "place", "timeAimed" ],
        "type" : "object",
        "properties" : {
          "place" : {
            "$ref" : "#/components/schemas/StopPlace"
          },
          "timeAimed" : {
            "type" : "string",
            "description" : "Date/time ([ISO-8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) UTC with time-numoffset (like '+02:00')) planned, relates to `AccessLeg::start/::end` whether departure or arrival time.",
            "format" : "date-time",
            "example" : "2023-04-18T14:55:00+01:00"
          }
        },
        "description" : "Stop point on a `PTConnectionLeg`."
      },
      "Direction" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "StopPlace::name or any direction-name.",
            "example" : "Basel SBB"
          },
          "routeIndexFrom" : {
            "type" : "integer",
            "description" : "From relevant StopPoint::routeIndex (might be given for JourneyDetail::directions).",
            "format" : "int32"
          },
          "routeIndexTo" : {
            "type" : "integer",
            "description" : "To relevant StopPoint::routeIndex (might be given for JourneyDetail::directions).",
            "format" : "int32"
          }
        },
        "description" : "Direction of Vehicle (typically shown on Vehicle-display or Display at Quay)."
      },
      "EcoBalance" : {
        "required" : [ "co2Car", "co2Train", "primeCar", "primeTrain" ],
        "type" : "object",
        "properties" : {
          "co2Train" : {
            "minimum" : 0,
            "type" : "number",
            "description" : "CO2 emission by train [kg].",
            "format" : "double"
          },
          "co2Car" : {
            "minimum" : 0,
            "type" : "number",
            "description" : "CO2 emission by car [kg].",
            "format" : "double"
          },
          "primeTrain" : {
            "minimum" : 0,
            "type" : "number",
            "description" : "PRIME emission by train, calculated [l petrol].",
            "format" : "double"
          },
          "primeCar" : {
            "minimum" : 0,
            "type" : "number",
            "description" : "PRIME emission by car, calculated [l petrol].",
            "format" : "double"
          },
          "durationTrain" : {
            "minimum" : 0,
            "type" : "string",
            "description" : "Travelling [duration](https://www.w3.org/TR/xmlschema11-2/#duration) by train.",
            "example" : "P1DT2H4M"
          },
          "durationCar" : {
            "minimum" : 0,
            "type" : "string",
            "description" : "Travelling [duration](https://www.w3.org/TR/xmlschema11-2/#duration) by car.",
            "example" : "P1DT2H4M"
          }
        },
        "description" : "Environmental coefficients to compare train and car transport."
      },
      "GeofenceCircle" : {
        "type" : "object",
        "properties" : {
          "centroid" : {
            "$ref" : "#/components/schemas/Point"
          },
          "radius" : {
            "type" : "integer",
            "description" : "Maximum radius [m] (de:Umkreis).",
            "format" : "int32"
          }
        },
        "description" : "Geofence expressed by a circle."
      },
      "Leg" : {
        "required" : [ "id", "mode", "type" ],
        "type" : "object",
        "properties" : {
          "distance" : {
            "type" : "integer",
            "description" : "Total distance for Leg (in meter).",
            "format" : "int32"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique Index ordered within Trip (may be casted to Integer for local indexing).",
            "example" : "1"
          },
          "duration" : {
            "type" : "string",
            "description" : "[duration](https://www.w3.org/TR/xmlschema11-2/#duration)"
          },
          "mode" : {
            "type" : "string",
            "description" : "Mode of the Leg"
          },
          "type" : {
            "type" : "string",
            "description" : "**Inheritance discriminator to proper Subclass** (technical field required by [OpenApi 3 Discriminator](https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/)) makes deserialization at consumer side easier."
          }
        },
        "description" : "**Abstract Superclass** of concrete inherited sub-classes such as **`PTRideLeg`, `AccessLeg`, `PTConnectionLeg`, `AlternateModeLeg`** (aka OJP TripLeg)**, `PersonalLeg`**.",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "LineString" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type as per GeoJSON, always constant _LineString_.",
            "readOnly" : true,
            "default" : "LineString"
          },
          "coordinates" : {
            "minItems" : 2,
            "type" : "array",
            "description" : "List of coordinates as [longitude, latitude] resp. easting/northing.",
            "example" : [ [ 7.4385, 46.9488 ], [ 7.9363, 46.915 ], [ 7.936, 46.802 ] ],
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double"
              }
            }
          }
        },
        "description" : "LineString in [GeoJSON](https://datatracker.ietf.org/doc/html/rfc7946) format."
      },
      "Notice" : {
        "required" : [ "advertised", "name", "priority", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "2 letter key. **Derived from MERITS codes** for e.g. UIC Code 916-1 'reservation system code', though they are specified by SBB Data-Mgmt.",
            "example" : "RM"
          },
          "text" : {
            "$ref" : "#/components/schemas/LinkedText"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of Notice. <br>x-extensible-enum: [ATTRIBUTE,INFO]",
            "example" : "ATTRIBUTE"
          },
          "priority" : {
            "type" : "integer",
            "description" : "A lower priority value means a higher importance (default=100).",
            "format" : "int32"
          },
          "routeIndexFrom" : {
            "type" : "integer",
            "description" : "Relates to `ScheduledStop::routeIndex` where this note is valid from.",
            "format" : "int32"
          },
          "routeIndexTo" : {
            "type" : "integer",
            "description" : "Relates to `ScheduledStop::routeIndex` where this note is valid to.",
            "format" : "int32"
          },
          "advertised" : {
            "type" : "boolean",
            "description" : "Hint whether a passenger should see such a `Notice` being advertised (aka Transmodel NOTICE::canBeAdvertised).<br>Be aware if **false**: Data resulting out of this MUST NOT be presented to enduser (for e.g. SBB channels), set wisely!",
            "default" : false
          }
        },
        "description" : "Additional information on operating Vehicle. The information may be usable for passenger. Relates to `includeNoticeAttributes`."
      },
      "OperatingPeriod" : {
        "required" : [ "name", "operatingDays" ],
        "type" : "object",
        "properties" : {
          "daysRegularFormatted" : {
            "type" : "string",
            "description" : "Only set in context of a `ServiceJourney::operatingPeriods`. **Regular service-days a `ServiceProduct` operates** by scheduled plan within the same `OperatingPeriod`.<br>(Translated according to Accept-Language.)",
            "example" : "täglich"
          },
          "daysIrregularFormatted" : {
            "type" : "string",
            "description" : "Only set in context of a `ServiceJourney::operatingPeriods`. **Irregular service-days (or excpetions to regular days) a `ServiceProduct` operates** by scheduled plan within the same `OperatingPeriod`.<br>(Translated according to Accept-Language.)",
            "example" : "nicht 24., 25. Mär, 7., 8. Apr"
          },
          "operatingDays" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Concrete operating-days within this yearly `OperatingPeriod` depending on the following use cases:\n- `name=Trip` in the context of `Trip::operatingPeriods`: all service-days of the `Trip`.\n- `name=ServiceJourney` in the context of `ServiceJourney::operatingPeriods`: all service-days of the related `ServiceProduct`.\n- `name=StopPlace` in the context of `ServiceCalendar::operatingPeriods` the planning-interval within this yearly `OperatingPeriod`.",
              "format" : "date"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of attached type having this operating period, like `Trip`, `StopPlace` or `ServiceJourney` (just an informational value).",
            "example" : "Trip"
          },
          "shortName" : {
            "type" : "string",
            "description" : "Related to `name=StopPlace` for corresponding data-poolId.",
            "example" : "gabo"
          },
          "routeIndexFrom" : {
            "type" : "integer",
            "description" : "In the context of `ServiceJourney` relates to the first `ScheduledStop::routeIndex` where given `operatingDays` are valid, null if unknown.",
            "format" : "int32",
            "example" : 3
          },
          "routeIndexTo" : {
            "type" : "integer",
            "description" : "In the context of `ServiceJourney` relates to the last `ScheduledStop::routeIndex` where `operatingDays` are valid, null if unknown.",
            "format" : "int32",
            "example" : 7
          }
        },
        "description" : "A **continuous interval of time** making up a timetable frame **of 1 year**, typically starting around 2nd Sunday of December."
      },
      "PTConnectionLeg" : {
        "required" : [ "end", "id", "mode", "notices", "start", "type" ],
        "type" : "object",
        "description" : "Passenger transfer between 2 StopPlace's (typically when the underlying router does not know how to perform the interchange in detail, aka OJP TransferLeg).<br>Inherited from `Leg`.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Leg"
        }, {
          "type" : "object",
          "properties" : {
            "start" : {
              "$ref" : "#/components/schemas/ConnectionEnd"
            },
            "end" : {
              "$ref" : "#/components/schemas/ConnectionEnd"
            },
            "notices" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Notice"
              }
            }
          }
        } ]
      },
      "PTRideLeg" : {
        "required" : [ "id", "mode", "serviceJourney", "type" ],
        "type" : "object",
        "description" : "Public-Transportation Leg (aka OJP TimedLeg).<br>Inherited from `Leg`.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Leg"
        }, {
          "type" : "object",
          "properties" : {
            "serviceJourney" : {
              "$ref" : "#/components/schemas/ServiceJourney"
            },
            "groupReservationStatus" : {
              "type" : "string",
              "description" : "Denotes if reservations are possible for groups on this specific `Trip`. Only given if parameter 'includeGroupReservation' is requested.<br>x-extensible-enum: [see [CAPRE ReservationDemandResponse::status](https://developer.sbb.ch/apis/capre/documentation),UNKNOWN] where `UNKNOWN` is an additional state by J-S, if requests to CAPRE fail."
            },
            "paginationCursor" : {
              "$ref" : "#/components/schemas/PaginationCursor"
            },
            "trainStopAssignmentHint" : {
              "$ref" : "#/components/schemas/TrainStopAssignmentHint"
            }
          }
        } ]
      },
      "PTSituation" : {
        "required" : [ "broadcastMessages" ],
        "type" : "object",
        "properties" : {
          "cause" : {
            "type" : "string",
            "description" : "A classification of what caused the situation (aka HIM category), values see `SituationCauseEnum`.<br>x-extensible-enum: ",
            "example" : "DISTURBANCE"
          },
          "affectedScope" : {
            "$ref" : "#/components/schemas/PTSituationAffectedScope"
          },
          "broadcastMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PTSituationMessage"
            }
          }
        },
        "description" : "A disruption (fort e.g. an incident or a deviation (aka de:Störungs-, Ereignismeldung)) affecting planned PT `ServiceProduct's` in certain edges and/or regions."
      },
      "PTSituationAffectedScope" : {
        "required" : [ "edges", "operatingDays", "regions", "vehicleModes" ],
        "type" : "object",
        "properties" : {
          "vehicleModes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleMode"
            }
          },
          "stopPointFrom" : {
            "$ref" : "#/components/schemas/ScheduledStopPoint"
          },
          "stopPointTo" : {
            "$ref" : "#/components/schemas/ScheduledStopPoint"
          },
          "operatingDays" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Service-days where `PTSituation` is relevant, relates to `PTSituationMessage::distributionPeriod`.",
              "format" : "date"
            }
          },
          "edges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AffectedEdge"
            }
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AffectedRegion"
            }
          }
        },
        "description" : "An extent directly involved in the PT situation such as a set of `ServiceJourney` or `StopPlace`."
      },
      "PTSituationMessage" : {
        "required" : [ "audiences", "detail", "detailShort", "id", "priority", "title" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Identity of message (aka HIM ID).",
            "example" : "x944292"
          },
          "alternateId" : {
            "type" : "string",
            "description" : "Alternate identity of message (aka HIM externalID). This may contain values set by 'Via' service and therefore relate to RCS-ALEA ID useful for Liveticker, if given.",
            "example" : "2195004195693"
          },
          "priority" : {
            "type" : "integer",
            "description" : "Priority rank (the smaller the higher): low = 80, medium = 60, high = 40, de:Grossereignis = 20",
            "format" : "int32",
            "example" : 80
          },
          "title" : {
            "type" : "string",
            "description" : "Heading of message formatted according to SBB business rule (aka HIM head)",
            "example" : "Einschränkungen im Bahnverkehr: Bern"
          },
          "detail" : {
            "type" : "string",
            "description" : "Complete Footer/text of message formatted according to SBB business rule (HTML tags like BR(eak) are possible). Scoped for browser based UIs (aka HIM text).",
            "example" : "Grund: Ausserordentliche Bauarbeiten.<br>Dauer der Einschränkung: unbestimmt.<br>Die SBB wird so schnell wie möglich weiter informieren."
          },
          "detailShort" : {
            "type" : "string",
            "description" : "Abbreviated Footer/text of message formatted according to SBB business rule (HTML tags like BR(eak) are possible). Scoped for App UIs.",
            "example" : "Der Bahnverkehr im Bahnhof Bern ist beeinträchtigt."
          },
          "distributionPeriod" : {
            "$ref" : "#/components/schemas/PublicationWindow"
          },
          "audiences" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Audience"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        },
        "description" : "A public transportation situation broadcast message affecting the planned PT operation (source HIM, aki Siri::PtSituation).<br>Situations might be caused by a disruption (like an incident, construction site, deviation etc) and typically relate to some area (geofence) and passing `ServiceProduct` resp. concrete `ServiceJourney's`."
      },
      "PaginationCursor" : {
        "type" : "object",
        "properties" : {
          "previous" : {
            "type" : "string",
            "description" : "Previous-context."
          },
          "next" : {
            "type" : "string",
            "description" : "Next-context."
          }
        },
        "description" : "Pagination-cursor for next/previous of the same. By means in a Trip context earlier/later."
      },
      "PersonalLeg" : {
        "required" : [ "id", "mode", "type" ],
        "type" : "object",
        "description" : "Movement of a user from one `Place` to another, where the `Trip` is made entirely by personal means (for e.g. private car), and neither of the endpoints is a `ScheduledStopPoint` or vehicle meeting point.<br>Inherited from `Leg`.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Leg"
        } ]
      },
      "PublicationWindow" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "description" : "Local start date of situation (related to `startTime`).",
            "format" : "date",
            "example" : "2023-04-18"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Local start time of situation (related to `startDate`).",
            "format" : "time-local",
            "example" : "14:27"
          },
          "endDate" : {
            "type" : "string",
            "description" : "Local end date of situation (related to `endTime`).",
            "format" : "date"
          },
          "endTime" : {
            "type" : "string",
            "description" : "Local end time of situation (related to `endDate`).",
            "format" : "time-local"
          },
          "dailyStartingAt" : {
            "type" : "string",
            "description" : "Situation starting daily at time within this publication window.",
            "format" : "time-local"
          },
          "dailyDuration" : {
            "type" : "string",
            "description" : "Situation [duration](https://www.w3.org/TR/xmlschema11-2/#duration) within this publication window.",
            "example" : "PT23H59M0S"
          }
        },
        "description" : "A period during which the situation should be published."
      },
      "ServiceAlteration" : {
        "required" : [ "cancelled", "partiallyCancelled", "reachable", "redirected" ],
        "type" : "object",
        "properties" : {
          "cancelled" : {
            "type" : "boolean",
            "description" : "true: Journey is `cancelled` (de:Ausfall), default=false.",
            "default" : false
          },
          "cancelledFormatted" : {
            "type" : "string",
            "description" : "If `cancelled`, enduser cancellation info.<br>(Translated according to Accept-Language.)",
            "example" : "Ausfall"
          },
          "partiallyCancelled" : {
            "type" : "boolean",
            "description" : "true: Journey is partially cancelled (de:Teilausfall) at beginning or end, default=false.",
            "default" : false
          },
          "partiallyCancelledFormatted" : {
            "type" : "string",
            "description" : "If `partiallyCancelled`, enduser info.<br>(Translated according to Accept-Language.)",
            "example" : "Ausfall"
          },
          "reachable" : {
            "type" : "boolean",
            "description" : "true: vehicle (`ServiceProduct`) change connection from `PTRideLeg` to `PTRideLeg` is possible (de: Anschluss kann gehalten werden, see `Trip::status::valid`); false: de:nicht mehr erreichbare Fahrt",
            "default" : true
          },
          "reachableFormatted" : {
            "type" : "string",
            "description" : "Transport-product change from Leg to Leg info according to SBB business rules. Relates to reachable.",
            "example" : "Your connecting train will be waiting, please change trains immediately."
          },
          "redirected" : {
            "type" : "boolean",
            "description" : "true: journey is redirected (aka OJP deviation).",
            "default" : false
          },
          "redirectedFormatted" : {
            "type" : "string",
            "description" : "Text intended for passengers about a planned stop being skipped, relates to `redirected`.<br>(Translated according to Accept-Language.)",
            "example" : "This vehicle is not stopping at all stations."
          },
          "unplannedStopPointsFormatted" : {
            "type" : "string",
            "description" : "Text intended for passengers about an additional non-planned stop at a station.<br>(Translated according to Accept-Language.)",
            "example" : "This vehicle is making exceptional stops. This can lead to increased travel time."
          },
          "delayFormatted" : {
            "type" : "string",
            "description" : "Enduser text, saying whether there is a delay on PTRideLeg (referring to first/last Stop).<br>(Translated according to Accept-Language.)",
            "example" : "Delay"
          },
          "quayChangedFormatted" : {
            "type" : "string",
            "description" : "Enduser text, saying whether there is a `Quay` change on `ServiceJourney` (typically referring to first and/or last `ScheduledStopPoint` on a `PTRideLeg`), which indicates the passengers to be careful at boarding/alighting.<br>(Translated according to Accept-Language.)",
            "example" : "Gleisänderung"
          }
        },
        "description" : "Status (realtime changes) to a `ServiceJourney` and might impact planned routing."
      },
      "ServiceJourney" : {
        "required" : [ "directions", "id", "notices", "operatingPeriods", "serviceAlteration", "serviceProducts", "situations", "stopPoints" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Underlying system specific unique identifier representing a concrete (partial) route for a specific vehicle and time. Be aware this is just a temporary id and may change daily! Additionally check for `notices` with `Notice::type=INFO`, `name=JY`, `text=<SwissJourneyId>` for a more standardized permanent [Swiss Journey-ID (SJYID)](https://transportdatamanagement.ch/content/uploads/2021/05/SwissJourneyID_DE_1_2.pdf)Data resulting out of this MUST NOT be presented to enduser (for e.g. SBB channels), set wisely! within a planning period.",
            "example" : "1|17166|0|85|18032019"
          },
          "stopPoints" : {
            "minItems" : 2,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledStopPoint"
            }
          },
          "serviceProducts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceProduct"
            }
          },
          "serviceAlteration" : {
            "$ref" : "#/components/schemas/ServiceAlteration"
          },
          "notices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Notice"
            }
          },
          "situations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PTSituation"
            }
          },
          "operatingPeriods" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OperatingPeriod"
            }
          },
          "quayTypeName" : {
            "type" : "string",
            "description" : "Depending on a train, ship or whatever Vehicle there is a specific terminology for its appropriate quay-name. Since all `stopPoints` are passed by the same Vehicle this translation is usable for all `ScheduledStopPoint::*Quay*` contained by this `ServiceJourney`. See related `quayTypeShortName` for an abbreviated translation.<br>(Translated according to Accept-Language.)",
            "example" : "Gleis"
          },
          "quayTypeShortName" : {
            "type" : "string",
            "description" : "Abbreviation for related `quayTypeName`.<br>(Translated according to Accept-Language.)",
            "example" : "Gl."
          },
          "directions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Direction"
            }
          },
          "spatialProjection" : {
            "$ref" : "#/components/schemas/LineString"
          }
        },
        "description" : "A passenger carrying vehicle journey for one specified operation day."
      },
      "TrainStopAssignmentHint" : {
        "required" : [ "compoundTrainChanges" ],
        "type" : "object",
        "properties" : {
          "departureAvailable" : {
            "type" : "boolean",
            "description" : "`CompoundTrain` is currently available at the `PTRideLeg` origin stop."
          },
          "arrivalAvailable" : {
            "type" : "boolean",
            "description" : "`CompoundTrain` is currently available at the `PTRideLeg` destination stop."
          },
          "compoundTrainChangesTitle" : {
            "type" : "string",
            "description" : "Related to `compoundTrainChanges`, and given only if any at all. Useful for sub-grouping by UIs.<br>(Translated according to Accept-Language.)"
          },
          "compoundTrainChanges" : {
            "type" : "array",
            "description" : "Known realtime changes as given by `CompoundTrain::trainChanges` (aka formation- or composition-changes), if any at **boarding stop** (changes at alighting are not contained).<br>(Translated according to Accept-Language.)",
            "items" : {
              "type" : "string",
              "description" : "Known realtime changes as given by `CompoundTrain::trainChanges` (aka formation- or composition-changes), if any at **boarding stop** (changes at alighting are not contained).<br>(Translated according to Accept-Language.)"
            }
          },
          "containsChanges" : {
            "type" : "boolean",
            "description" : "@Deprecated use `compoundTrainChanges` is not empty instead!",
            "deprecated" : true
          }
        },
        "description" : "Hints which `TrainStopAssignment's` of `PTRideLeg` are potentially available for first `StopCall::departure` or last `StopCall::arrival`. Needs &includeTrainStopAssignments=NONE"
      },
      "Trip" : {
        "required" : [ "fastTransfer", "id", "legs", "operatingPeriods", "status", "transfers" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "TripContext to reconstruct this Trip."
          },
          "legs" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Leg"
            }
          },
          "status" : {
            "$ref" : "#/components/schemas/TripStatus"
          },
          "fastTransfer" : {
            "type" : "boolean",
            "description" : "Relates to `TripMobilityFilter::walkSpeed`, if transfers below 100% were enforced, such Trip's are marked as `fastTransfer` by means passenger needs to hurry to get next vehicle because transfer time is lower than recommended at a StopPlace."
          },
          "transfers" : {
            "type" : "integer",
            "description" : "Number of interchanges (de:Umstiege) [greater or equal 0].",
            "format" : "int32"
          },
          "duration" : {
            "type" : "string",
            "description" : "The [duration](https://www.w3.org/TR/xmlschema11-2/#duration) of the whole trip. The value may be null, if `Trip` is not rideable (for e.g. cancelled).",
            "example" : "P1DT2H4M"
          },
          "pagingChecksum" : {
            "type" : "string",
            "description" : "Checksum of the trip to filter same results on client side after scroll requests. Relates to `TripResponse::paginationCursor`.",
            "example" : "fa02b99f_3"
          },
          "searchHint" : {
            "type" : "string",
            "description" : "A hint/explanation is given if Trip was not found by a direct (first) search. In such a case origin/destination might not match exactly to request parameters.<br>(Translated according to Accept-Language.)",
            "example" : "Unfortunately, a connection for the desired origin and/or destination could not be found. We recommend the following alternative connections (please note origin/destination)."
          },
          "operatingPeriods" : {
            "type" : "array",
            "description" : "Operating days of 'same journey' within planned yearly operating-period though multiple entries are possible (for e.g. `Operator` change or different daysRegular/daysIrregular). Given for `Trip's` containing `PTRideLeg's`. Set includeOperatingDays for concrete `OperatingPeriod::operatingDays` if needed.",
            "items" : {
              "$ref" : "#/components/schemas/OperatingPeriod"
            }
          },
          "ecoBalance" : {
            "$ref" : "#/components/schemas/EcoBalance"
          },
          "archiveConnectionReliability" : {
            "$ref" : "#/components/schemas/ArchiveConnectionReliability"
          },
          "summary" : {
            "$ref" : "#/components/schemas/TripSummary"
          }
        },
        "description" : "A customer journey describing the movement of a passenger from one Place of any sort to another. A Trip may consist of one or more consecutive Leg's having some common characteristics."
      },
      "TripResponse" : {
        "required" : [ "trips" ],
        "type" : "object",
        "properties" : {
          "trips" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Trip"
            }
          },
          "paginationCursor" : {
            "$ref" : "#/components/schemas/PaginationCursor"
          },
          "serviceProductAdapted" : {
            "type" : "boolean",
            "description" : "Set for `v3/trips/{id}` only, otherwise set to null because irrelevant. **100% correctness cannot be guaranteed if `TripResponse::serviceProductAdapted` is true, do validate found `Trip` whether it might be what you are looking for!**\n- If request parameter `retryFuzzy`=true and direct resolving of `Trip::id` failed and `ServiceProduct::number` tolerant re-search found an alternate match, this flag will be true.\n- Otherwise if `retryFuzzy`=false or resolved initially by `id` this flag will be false."
          }
        },
        "description" : "Contains a list of Trip's matching the search-criteria."
      },
      "TripStatus" : {
        "required" : [ "alternative", "cancelled", "delayed", "delayedUnknown", "notServicedStopPoints", "partiallyCancelled", "quayChanged", "reachable", "unplannedStopPoints", "valid" ],
        "type" : "object",
        "properties" : {
          "alternative" : {
            "type" : "boolean",
            "description" : "false: Planned connection; true: Realtime alternative",
            "default" : false
          },
          "alternativeFormatted" : {
            "type" : "string",
            "description" : "Text intended for passengers about an alternative Trip, relates to `alternative`.<br>(Translated according to Accept-Language.)",
            "example" : "Alternative Verbindung aufgrund der aktuellen Betriebslage. Bitte prüfen Sie diese kurz vor Reisebeginn nochmals auf Änderungen."
          },
          "valid" : {
            "type" : "boolean",
            "description" : "true: Trip is possible to ride based on the current realtime situation (related to `Trip::serviceCalendar`, `PTRideLeg::reachable`, etc); false: **Fatal resp. not rideable as a 'whole' Trip' anymore** (aka OJP infeasible, ODSM invalid). Important: if this valid toggles from true to false, the passenger might not be able to perform his Trip, by means individual re-planning might be necessary.",
            "default" : true
          },
          "cancelled" : {
            "type" : "boolean",
            "description" : "`PTRideLeg` cancelled (de:Ausfall), relates to `cancelledFormatted`.",
            "default" : false
          },
          "cancelledFormatted" : {
            "type" : "string",
            "description" : "If `cancelled` or `partiallyCancelled` is true, enduser info about `Trip`.<br>(Translated according to Accept-Language.)",
            "example" : "Diese Verbindung fällt aus."
          },
          "partiallyCancelled" : {
            "type" : "boolean",
            "description" : "`PTRideLeg` partially cancelled (de:Teilausfall), relates to `cancelledFormatted`.",
            "default" : false
          },
          "quayChanged" : {
            "type" : "boolean",
            "description" : "Contains at least one platform change (de:Gleis-/Kante-/Steg-Änderung) on any `PTRideLeg`.",
            "default" : false
          },
          "delayed" : {
            "type" : "boolean",
            "description" : "Contains at least one delay (de:Verspätung) on any `PTRideLeg`.",
            "default" : false
          },
          "delayedUnknown" : {
            "type" : "boolean",
            "description" : "Contains at least one unknown delay (de:Unbestimmte Verspätung) on any `PTRideLeg`.",
            "default" : false
          },
          "reachable" : {
            "type" : "boolean",
            "description" : "If not true, changing `PTRideLeg's` is not guaranteed (de:Anschluss gehalten).",
            "default" : true
          },
          "notServicedStopPoints" : {
            "type" : "boolean",
            "description" : "Contains at least one `StopPlace` which is not serviced (de:ausserordentliche Durchfahrt) on any `PTRideLeg`. Releates to `ScheduledStopPoint::stopStatus==NOT_SERVICED`.",
            "default" : false
          },
          "unplannedStopPoints" : {
            "type" : "boolean",
            "description" : "true: contains additional `StopPlace` resp. `ScheduledStopPoint` (de:ausserordentlicher Halt). Releates to `ScheduledStopPoint::stopStatus==UNPLANNED` and `ServiceAlteration::unplannedStopPointsFormatted` (aka OJP Unplanned).",
            "default" : false
          },
          "mobilityRestrictedTransferCritical" : {
            "type" : "boolean",
            "description" : "Hint whether at least one vehicle transfer is critical for passengers with a handicap, related to `includeAccessibility` other than `ALL` and `PTRideLeg::navigationPathAssignment` (otherwise null)."
          }
        },
        "description" : "Realtime overall status of a `Trip` (depends on `PTRideLeg::serviceJourney` status)."
      },
      "TripSummary" : {
        "required" : [ "serviceProducts" ],
        "type" : "object",
        "properties" : {
          "firstStopPlace" : {
            "$ref" : "#/components/schemas/ScheduledStopPoint"
          },
          "lastStopPlace" : {
            "$ref" : "#/components/schemas/ScheduledStopPoint"
          },
          "occupancyFirstClassMax" : {
            "type" : "string",
            "description" : "Highest occupancyAverage on any PTRideLeg::origin in 1st class.<br>x-extensible-enum: [UNKNOWN,LOW,MEDIUM,HIGH]"
          },
          "occupancySecondClassMax" : {
            "type" : "string",
            "description" : "Highest occupancy on any PTRideLeg::origin in 2nd class.<br>x-extensible-enum: [UNKNOWN,LOW,MEDIUM,HIGH]"
          },
          "boardingAlightingAccessibility" : {
            "type" : "string",
            "description" : "@Deprecated use `accessibilityBoardingAlighting` instead to get NO_HINT as well!<br>x-extensible-enum: [BOARDING_ALIGHTING_SELF,BOARDING_ALIGHTING_BY_CREW,BOARDING_ALIGHTING_BY_NOTIFICATION,BOARDING_ALIGHTING_NOT_POSSIBLE]",
            "deprecated" : true
          },
          "accessibilityBoardingAlighting" : {
            "$ref" : "#/components/schemas/AccessibilityBoardingAlighting"
          },
          "serviceProducts" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "`ServiceProduct::name's` as displayable strings.",
              "example" : "[IC 1 756]"
            }
          }
        },
        "description" : "Summary of most relevant aspects of the given Trip and its PTRideLeg's. (Aka OJP TripSummaryStructure.)"
      },
      "DatedVehicleJourneyReference" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Set the complete name as returned by `ServiceProduct`, see [ServiceProductReference](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md#serviceproductreference) for proper format.",
            "example" : "IC 1 753"
          },
          "start" : {
            "$ref" : "#/components/schemas/ScheduledStopPointReference"
          },
          "end" : {
            "$ref" : "#/components/schemas/ScheduledStopPointReference"
          },
          "operatorNumber" : {
            "type" : "string",
            "description" : "The `ServiceProduct::operator::id` for e.g. '000011' as returned by J-S.",
            "example" : "000011"
          },
          "operatingDay" : {
            "type" : "string",
            "description" : "Operating-day of the `ServiceJourney`.",
            "format" : "date"
          }
        },
        "description" : "Reference to a `DatedVehicleJourney` (aka OJP DatedJourneyRef). See [complex JSON parameter **DatedVehicleJourneyReference**](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md#datedvehiclejourneyreference)"
      },
      "OptimisationMethod" : {
        "type" : "object",
        "properties" : {
          "numberOfResultsBefore" : {
            "maximum" : 6,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Indicate the minimum number of search results returned before related dateTime.<br>This parameter has an impact on performance and/or response volume, set wisely!",
            "format" : "int32",
            "default" : 0
          },
          "numberOfResultsAfter" : {
            "maximum" : 6,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Indicate the minimum number of search results returned after related dateTime.<br>This parameter has an impact on performance and/or response volume, set wisely!",
            "format" : "int32",
            "default" : 5
          }
        },
        "description" : "Configure the search algorithm influencing Trip search results."
      },
      "ScheduledStopPointReference" : {
        "required" : [ "dateTime", "stopPlaceId" ],
        "type" : "object",
        "properties" : {
          "stopPlaceId" : {
            "type" : "string",
            "description" : "`StopPlace::id` value related to `dateTime`.",
            "example" : "8507000"
          },
          "dateTime" : {
            "type" : "string",
            "description" : "Departure or arrival date/time ([ISO-8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) UTC with time-numoffset (like '+02:00')) at `stopPlaceId`.",
            "format" : "date-time",
            "example" : "2023-04-18T14:55:00+01:00"
          }
        },
        "description" : "ScheduledStopPoint reference to a StopPlace (PlaceReference) with a departure or arrival dateTime, see [ScheduledStopPointReference](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md#scheduledstoppointreference)."
      },
      "TrainStopAssignmentsEnum" : {
        "type" : "string",
        "description" : "Whether `PTRideLeg's` should include `CompoundTrain's`(aka formation, composition). However, `CompoundTrain's` at any `ScheduledStopPoint` on the `ServiceJourney` may be loaded separately by `/v3/vehicle-journeys/by-stoppoints`.\nPossible values:\n- NONE none at all, though a `PTRideLeg::trainStopAssignmentHint` is always given.\n- ORIGIN  `TrainStopAssignment's` are added to first (departure) `ScheduledStopPoint` of each `PTRideLeg` \n- ORIGIN_DESTINATION `TrainStopAssignment's` are added to first (departure) and last (arrival) `ScheduledStopPoint` of each `PTRideLeg` having a `TrainStopAssignment` resp. a `CompoundTrain`.",
        "enum" : [ "NONE", "ORIGIN", "ORIGIN_DESTINATION" ],
        "default" : "NONE"
      },
      "TripsByOriginAndDestinationRequestBody" : {
        "required" : [ "destination", "origin" ],
        "type" : "object",
        "properties" : {
          "origin" : {
            "type" : "string",
            "description" : "Starting point of the trip at origin (departure). See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
            "example" : "8503000"
          },
          "destination" : {
            "type" : "string",
            "description" : "Ending point of the trip at destination (arrival). See **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
            "example" : "[7.435194,46.945679]"
          },
          "originRadius" : {
            "type" : "integer",
            "description" : "Tolerated walk distance (radius [m]) at `Place` origin (departure). Default is 1500",
            "format" : "int32",
            "example" : 800
          },
          "destinationRadius" : {
            "type" : "integer",
            "description" : "Tolerated walk distance (radius [m]) at `Place` destination (arrival). Default is 1500",
            "format" : "int32",
            "example" : 1500
          },
          "forArrival" : {
            "type" : "boolean",
            "description" : "Search for arriving (true) or departing (false) trips.",
            "default" : false
          },
          "date" : {
            "type" : "string",
            "description" : "(Local) date at either origin (`forArrival`=false) or destination (`forArrival`=true) related to `time`, defaults to TODAY.",
            "format" : "date",
            "example" : "2023-04-18"
          },
          "time" : {
            "type" : "string",
            "description" : "Local time at either origin (`forArrival`=false) or destination (`forArrival`=true) related to `date`, defaults to NOW (seconds will be ignored).",
            "format" : "time",
            "example" : "13:07"
          },
          "occupancyAverage" : {
            "$ref" : "#/components/schemas/OccupancyAverageEnum"
          },
          "mobilityFilter" : {
            "$ref" : "#/components/schemas/TripMobilityFilter"
          },
          "vias" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PTViaReference"
            }
          },
          "viasNot" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PTViaNotReference"
            }
          },
          "viasNoTransfer" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PTViaNoChangeAtReference"
            }
          },
          "realtimeMode" : {
            "$ref" : "#/components/schemas/RealtimeModeEnum"
          },
          "pagingCursor" : {
            "type" : "string",
            "description" : "Based on a returned `TripResponse::pagingCursor`, `previous` or `next` connections **reusing the very same search-parameters** can be retrieved by scrolling pagination mechanisme, see `Trip::pagingChecksum`)."
          },
          "optimisationMethod" : {
            "$ref" : "#/components/schemas/OptimisationMethod"
          },
          "includeAccessibility" : {
            "$ref" : "#/components/schemas/AccessibilityEnum"
          },
          "includeAlternateMatch" : {
            "$ref" : "#/components/schemas/AlternateMatchEnum"
          },
          "includeNoticeAttributes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoticeAttributeEnum"
            }
          },
          "includeEconomic" : {
            "type" : "boolean",
            "description" : "Consider additional connections by Bus or S-Bahn leading to destination as well (de:'Zusätzliche Alternativverbindungen', 'Mehrdimensionale Suche', 'Preiswerte Suche').<br>This parameter has an impact on performance and/or response volume, set wisely!",
            "default" : false
          },
          "includeUnsharp" : {
            "type" : "boolean",
            "description" : "Consider alternative stations origin/destination (de: Erweiterte Anzeige).",
            "default" : false
          },
          "includeEarlier" : {
            "type" : "boolean",
            "description" : "Consider earlier leaving connections, even if arrival is later.",
            "default" : false
          },
          "includeEcologyComparison" : {
            "type" : "string",
            "description" : "Create Trip::EcoBalance (C02, ..) per Trip. DEFAULT is based on SBB default car eco-params.<br>x-extensible-enum: ",
            "enum" : [ "NONE", "DEFAULT" ],
            "default" : "NONE"
          },
          "includeTransportModes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          },
          "includeOperatingDays" : {
            "type" : "boolean",
            "description" : "`Trip::operatingPeriods` will always be returned if it is a **repeatable planned Trip over the period**. To enforce concrete planned dates in `OperatingPeriod::operatingDays`set `includeOperatingDays=true` (PTRideLeg::serviceJourney::operationPeriods will remain empty, because whole Trip is of interest).<br>This parameter has an impact on performance and/or response volume, set wisely!",
            "default" : false
          },
          "includeRouteProjection" : {
            "type" : "boolean",
            "description" : "With or without a plottable polyline for each vehicle-journey (if available).<br>This parameter has an impact on performance and/or response volume, set wisely!",
            "default" : false
          },
          "includeGroupReservation" : {
            "type" : "string",
            "description" : "Relates to `PTRideLeg::groupReservationStatus`. Include the status for group-reservation possibilities (source CAPRE).<br>Format 'x:y' which means to check reservation status for number of x passenger in first class and y passengers in second class.<br>Needs specific GRANT rights, do not specify unless you have them!<br>This parameter has an impact on performance and/or response volume, set wisely! `ServiceJourney::notices` will get an entry of `type=INFO, key=RN` if available, its `Notice::value` is relevant for Postauto AG (PAG) operations-reference.",
            "example" : "5:7"
          },
          "includeSummary" : {
            "type" : "boolean",
            "description" : "Create some summary facts about each Trip (useful for UI overviews).<br>This parameter has an impact on performance and/or response volume, set wisely!",
            "default" : false
          },
          "includeIntermediateStops" : {
            "type" : "string",
            "description" : "Whether the `PTRideLeg's` should include intermediate stops (between the passenger's board and alight in `ServiceJourney::stopPoints`).<br>x-extensible-enum:  [ALL,NONE,BOARDING_ALIGHTING] where ALL is BOARDING_ALIGHTING plus virtual stops.",
            "enum" : [ "ALL", "BOARDING_ALIGHTING", "NONE" ],
            "default" : "ALL"
          },
          "includeTrainStopAssignments" : {
            "$ref" : "#/components/schemas/TrainStopAssignmentsEnum"
          },
          "excludeDatedVehicleJourneys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DatedVehicleJourneyReference"
            }
          },
          "excludeFootpathAtOriginAndDestination" : {
            "type" : "boolean",
            "description" : "In case of `StopPlace` to `StopPlace` at origin and/or destination set true to prevent `AccessLeg's` at beginning or end.",
            "default" : false
          }
        },
        "description" : "Request parameters (POST body). OJP passive instance requires Stop UIC like '850700' whereas active instance enforces 'OJP:STOP:SBB:8507000|Bern'."
      },
      "TripsByLegRequestBody" : {
        "required" : [ "destination", "ptRideLegReference" ],
        "type" : "object",
        "properties" : {
          "ptRideLegReference" : {
            "$ref" : "#/components/schemas/DatedVehicleJourneyReference"
          },
          "destination" : {
            "type" : "string",
            "description" : "Final destination **`StopPlace`** of the planned Trip, relates to current position in `ptRideLegReference`. See [**PlaceReference**](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md#placereference)",
            "example" : "8507000"
          },
          "date" : {
            "type" : "string",
            "description" : "Current date of passenger on `ptRideLegReference` related to `time`, defaults to TODAY.",
            "format" : "date",
            "example" : "2023-04-18"
          },
          "time" : {
            "type" : "string",
            "description" : "Current (local) time of passenger on `ptRideLegReference` related to `date`, defaults to NOW.",
            "format" : "time",
            "example" : "13:07"
          },
          "transferStopPoint" : {
            "$ref" : "#/components/schemas/ScheduledStopPointReference"
          },
          "transferStopPointAtArrival" : {
            "type" : "boolean",
            "description" : "Relates to `transferStopPoint::dateTime`. Distinguishes between arrival or departure dateTime at `transferStopPoint`.",
            "default" : false
          },
          "operators" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Operators involved on Line. Three variants are supported, see **OperatorReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)\n1) OperatorReference-Object with type='TEXT' as given in [OpenTransportData.swiss 'Business organisation' in 'GO-Liste.csv' field 'BEZEICHNUNG_DE'](https://opentransportdata.swiss/de/dataset/goch) or in returned Operator::name\n2) OperatorReference-Object with type='NUMBER' as given in [OpenTransportData.swiss 'Business organisation' in 'GO-Liste.csv' field 'NUMMER'](https://opentransportdata.swiss/de/dataset/goch)\n3) as 1) but just Operator::name String (without JSON Object)",
              "example" : "Schweizerische Bundesbahnen SBB"
            }
          },
          "vias" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PTViaReference"
            }
          },
          "realtimeMode" : {
            "$ref" : "#/components/schemas/RealtimeModeEnum"
          },
          "limit" : {
            "type" : "integer",
            "description" : "Maximum number of results to be returned, related to parameter `duration` and may reduce or expand `limit` settings.",
            "format" : "int32",
            "default" : 10
          },
          "duration" : {
            "maximum" : 1439,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Duration of interval in minutes. Choose wisely, in most cases next 120min are sufficient!<br>This parameter has an impact on performance and/or response volume, set wisely!",
            "format" : "int32",
            "default" : 60
          },
          "includeTransportModes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          },
          "excludeDatedVehicleJourneys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DatedVehicleJourneyReference"
            }
          }
        },
        "description" : "Request parameters (POST body)."
      },
      "ServiceCalendarByOriginAndDestinationRequestBody" : {
        "required" : [ "daysInWeek", "destination", "fromDate", "fromTime", "origin", "toDate", "toTime" ],
        "type" : "object",
        "properties" : {
          "origin" : {
            "type" : "string",
            "description" : "Starting `StopPlace` of the trip at origin (departure). See v3 **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
            "example" : "8503000"
          },
          "destination" : {
            "type" : "string",
            "description" : "Ending `StopPlace` of the trip at destination (arrival). See **PlaceReference** in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)",
            "example" : "[7.435194,46.945679]"
          },
          "mobilityFilter" : {
            "$ref" : "#/components/schemas/TripMobilityFilter"
          },
          "vias" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PTViaReference"
            }
          },
          "fromDate" : {
            "type" : "string",
            "description" : "Interval begin date for timetable, related to `origin` timezone.",
            "format" : "date",
            "example" : "2023-01-18"
          },
          "fromTime" : {
            "type" : "string",
            "description" : "Interval begin time (HH:mm), related to `fromDate`.",
            "format" : "time",
            "example" : "10:15"
          },
          "toDate" : {
            "type" : "string",
            "description" : "Interval end date, related to `fromDate` and `origin`.",
            "format" : "date",
            "example" : "2023-04-30"
          },
          "toTime" : {
            "type" : "string",
            "description" : "Interval end time (HH:mm), related to `toDate`.",
            "format" : "time",
            "example" : "11:45"
          },
          "fromTimeReturn" : {
            "type" : "string",
            "description" : "Interval begin time (HH:mm), related to `fromDate` and `destination`. If returnFrom/To are both given, returning trip timetable is generated additionally.",
            "format" : "time",
            "example" : "18:00"
          },
          "toTimeReturn" : {
            "type" : "string",
            "description" : "Return end time (HH:mm), related to `fromTimeReturn`.",
            "format" : "time",
            "example" : "20:15"
          },
          "daysInWeek" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Days for timetable or null for whole week, between related to `fromDate/-Time` and `toDate/-Time`..",
              "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
            }
          },
          "generatedContent" : {
            "type" : "string",
            "description" : "Optimize `Trip's` being printed into the PDF timetable: <br>x-extensible-enum: [COMPLETE,STANDARD], where:\n- COMPLETE: verbose, by means all found Trip's\n- STANDARD: only a reasonable selection of all Trip's (minimized content)",
            "default" : "COMPLETE"
          },
          "includeNoticeAttributes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoticeAttributeEnum"
            }
          },
          "includeTransportModes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportModeEnum"
            }
          }
        },
        "description" : "Request parameters (POST body)."
      },
      "ServiceCalendarByOriginAndDestinationDownloadResponse" : {
        "type" : "object",
        "properties" : {
          "pollId" : {
            "type" : "string",
            "description" : "Id to further poll until related `downloadUrl` is provided, might take a few seconds.)",
            "example" : "https://p2w.sbb.hafas.cloud/bin/tb/query-p2w.exe/fny?tb2json=1&id=yhi6.6g62.kxsn.gcwx"
          },
          "downloadUrl" : {
            "type" : "string",
            "description" : "Link to **download specific timetable (PDF)** (independent of J-S and may be done by any enduser).",
            "example" : "https://p2w.sbb.hafas.cloud/bin/tb/query-p2w.exe/GeneveZuerich_hb.pdf?pathinfo=/dn&dwn=t9/t9i2ugw2kxcjxuwg_1_1.pdf"
          }
        },
        "description" : "Contains either pollId if PDF is still being generated or final PDF download URL for enduser."
      },
      "ExtXmlResponse" : {
        "required" : [ "conId", "identNr", "seqNr", "xmlHandle", "xmlId" ],
        "type" : "object",
        "properties" : {
          "locale" : {
            "type" : "string",
            "description" : "@Deprecated IRRELEVANT (just set to 'de' for Swagger2 Client compliance, but there is no translation in response)",
            "deprecated" : true
          },
          "xmlHandle" : {
            "type" : "string"
          },
          "xmlId" : {
            "type" : "string"
          },
          "identNr" : {
            "type" : "string"
          },
          "seqNr" : {
            "type" : "string"
          },
          "conId" : {
            "type" : "string"
          }
        },
        "description" : "Response with a handle to be used with Hafas::extXML API.",
        "deprecated" : true
      },
      "ExtXmlBody" : {
        "required" : [ "date", "reconstructionContext", "stopBehaviour" ],
        "type" : "object",
        "properties" : {
          "documentLanguage" : {
            "type" : "string",
            "description" : "Supported languages (translations).",
            "enum" : [ "DE", "FR", "IT", "EN" ]
          },
          "reconstructionContext" : {
            "type" : "string",
            "description" : "Trip::reconstructionContext of the journey.",
            "example" : "T%24A%3D1%40O%3DBern%40X%3D7439122%40Y%3D46948825%40L%3D8507000%40a%3D128%40%24A%3D1%40O%3DZ%C3%BCrich+HB%40X%3D8540193%40Y%3D47378177%40L%3D8503000%40a%3D128%40%24201803021632%24201803021728%24IC+1++++%24%241%24"
          },
          "stopBehaviour" : {
            "type" : "string",
            "description" : "Stop behaviour of trip considering boarding and alighting.",
            "enum" : [ "ORIGIN_DESTINATION_ONLY", "REAL_BOARDING_ALIGHTING", "ALL_BOARDING_ALIGHTING" ]
          },
          "date" : {
            "type" : "string",
            "description" : "Date of reconstruction.",
            "format" : "date",
            "example" : "2023-04-18"
          },
          "dateZoneId" : {
            "type" : "string",
            "description" : "@Deprecated Irrelevant",
            "deprecated" : true
          },
          "polyline" : {
            "type" : "boolean",
            "description" : "Set to true if de:Streckenverlaufskarte must be prepared.<br>This parameter has an impact on performance and/or response volume, set wisely!"
          }
        },
        "description" : "Request parameters (POST body).",
        "deprecated" : true
      },
      "DatedVehicleJourney" : {
        "required" : [ "serviceJourney" ],
        "type" : "object",
        "properties" : {
          "serviceJourney" : {
            "$ref" : "#/components/schemas/ServiceJourney"
          }
        },
        "description" : "A particular journey of a vehicle on a particular operatingday including all modifications possibly decided by the control staff. Complete route of public transport service (de:Zuglauf)."
      },
      "TrainStopAssignmentResponse" : {
        "required" : [ "trainStopAssignments" ],
        "type" : "object",
        "properties" : {
          "trainStopAssignments" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/TrainStopAssignment"
            },
            "description" : "Map<String (PlaceReference), `TrainStopAssignment`> each containing a `CompoundTrain` per requested stop-point. See v3 `PlaceReference` in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)."
          }
        },
        "description" : "Contains a list of `TrainStopAssignment's`, matching the given stops, if known."
      },
      "DatedVehicleJourneyResponse" : {
        "required" : [ "datedVehicleJourneys" ],
        "type" : "object",
        "properties" : {
          "datedVehicleJourneys" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DatedVehicleJourney"
            }
          }
        },
        "description" : "Contains a list of DatedVehicleJourney's matching the search-criteria."
      },
      "Departure" : {
        "required" : [ "serviceJourney" ],
        "type" : "object",
        "properties" : {
          "serviceJourney" : {
            "$ref" : "#/components/schemas/ServiceJourney"
          }
        },
        "description" : "Departure view of a kind of partial `DatedVehicleJourney` from a specific stop-point towards its final destination or direction."
      },
      "DepartureResponse" : {
        "required" : [ "departures" ],
        "type" : "object",
        "properties" : {
          "departures" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Departure"
            }
          }
        },
        "description" : "Contains a list of Departure's matching the search-criterias."
      },
      "ArrivalResponse" : {
        "required" : [ "arrivals" ],
        "type" : "object",
        "properties" : {
          "arrivals" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ArrivalV3"
            }
          }
        },
        "description" : "Contains a list of Arrival's matching the search-criterias."
      },
      "ArrivalV3" : {
        "required" : [ "serviceJourney" ],
        "type" : "object",
        "properties" : {
          "serviceJourney" : {
            "$ref" : "#/components/schemas/ServiceJourney"
          }
        },
        "description" : "Arrival view of a kind of partial DatedVehicleJourney from a specific stop (typically very origin) towards the desired arrival stop-point."
      },
      "TripSubscriptionStatusResponse" : {
        "required" : [ "status", "technicalId", "tripId" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Subscription status like 'ACTIVE' (monitoring on), 'EXPIRED' (monitoring obsolete), .."
          },
          "tripId" : {
            "type" : "string",
            "description" : "Original subscribed tripId `v3/Trip::id` (format Hafas raw reconstructionContext URL encoded but compatible with `/v3/trips/{id}`).",
            "example" : "%C2%AC%C2%B6BAIM%C2%B6t%C2%AC%C2%B6HKI%C2%B6T%24A%3D1%40O%3DGen%C3%A8ve%40X%3D6142455%40Y%3D46210209%40u%3D0%40L%3D8501008%40a%3D128%40%24A%3D1%40O%3DFribourg%2FFreiburg%40X%3D7151045%40Y%3D46803146%40u%3D0%40L%3D8504100%40a%3D128%40%24202204081242%24202204081403%24IC+1++++%24%241%24%24%24%24%C2%B6KC%C2%B6%23VE%230%23CF%23100%23CA%230%23CM%230%23SICT%231%23%C2%B6KCC%C2%B6%23VE%230%23ERG%231%23HIN%230%23ECK%23172122%7C172122%7C172203%7C172203%7C0%7C0%7C165%7C172093%7C1%7C-2147479534%7C0%23"
          },
          "technicalId" : {
            "type" : "string",
            "description" : "Internally generated Id trailing `Subscription::id` (useful in case of technical support)."
          }
        },
        "description" : "Infos about the `Trip` subscription-status."
      },
      "OperatingPeriodSubscription" : {
        "required" : [ "name", "operatingDays" ],
        "type" : "object",
        "properties" : {
          "operatingDays" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "date"
            }
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "HCSS ServiceDays."
      },
      "PTRideLegSubscription" : {
        "required" : [ "serviceJourney" ],
        "type" : "object",
        "properties" : {
          "serviceJourney" : {
            "$ref" : "#/components/schemas/ServiceJourneySubscription"
          }
        },
        "description" : "HCSS ConnectionInfo."
      },
      "QuaySubscription" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ScheduledStopPointSubscription" : {
        "type" : "object",
        "properties" : {
          "place" : {
            "$ref" : "#/components/schemas/StopPlaceSubscription"
          },
          "arrival" : {
            "$ref" : "#/components/schemas/StopCallSubscription"
          },
          "departure" : {
            "$ref" : "#/components/schemas/StopCallSubscription"
          }
        }
      },
      "ServiceJourneySubscription" : {
        "required" : [ "serviceProducts", "stopPoints" ],
        "type" : "object",
        "properties" : {
          "stopPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledStopPointSubscription"
            }
          },
          "serviceProducts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceProductSubscription"
            }
          }
        }
      },
      "ServiceProductSubscription" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "lineOrNumber" : {
            "type" : "string"
          },
          "vehicleSubModeShortName" : {
            "type" : "string",
            "deprecated" : true
          }
        }
      },
      "StopCallSubscription" : {
        "type" : "object",
        "properties" : {
          "quayAimed" : {
            "$ref" : "#/components/schemas/QuaySubscription"
          }
        }
      },
      "StopPlaceSubscription" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Subscription" : {
        "required" : [ "id", "status", "userId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "<userId>@<HCSS-TechnicalId>",
            "example" : "CEP_CAPRE:550e8400-e29b-11d4-a716-446655440000@69644"
          },
          "externalId" : {
            "type" : "string",
            "description" : "External reference ID defined (and used) by the client."
          },
          "userId" : {
            "type" : "string",
            "description" : "HCCS userId at subscription, resp. <Kafka-Topic-name>:<UUID>.",
            "example" : "J_S_TOPIC_1:80376b7d-15ac-4ccf-833c-ea951115b30d"
          },
          "status" : {
            "type" : "string",
            "description" : "Subscription status like 'ACTIVE' (monitoring on), 'EXPIRED' (monitoring obsolete), .."
          },
          "hysteresis" : {
            "$ref" : "#/components/schemas/Hysteresis"
          }
        },
        "description" : "All details about subscription (like `Trip` HCCS subscriptionId)."
      },
      "TripSubscription" : {
        "required" : [ "legs", "monitorFlags", "operatingPeriods", "tripId" ],
        "type" : "object",
        "properties" : {
          "tripId" : {
            "type" : "string",
            "description" : "Original subscribed tripId `v3/Trip::id` (format Hafas raw reconstructionContext URL encoded but compatible with `/v3/trips/{id}`).",
            "example" : "%C2%AC%C2%B6BAIM%C2%B6t%C2%AC%C2%B6HKI%C2%B6T%24A%3D1%40O%3DGen%C3%A8ve%40X%3D6142455%40Y%3D46210209%40u%3D0%40L%3D8501008%40a%3D128%40%24A%3D1%40O%3DFribourg%2FFreiburg%40X%3D7151045%40Y%3D46803146%40u%3D0%40L%3D8504100%40a%3D128%40%24202204081242%24202204081403%24IC+1++++%24%241%24%24%24%24%C2%B6KC%C2%B6%23VE%230%23CF%23100%23CA%230%23CM%230%23SICT%231%23%C2%B6KCC%C2%B6%23VE%230%23ERG%231%23HIN%230%23ECK%23172122%7C172122%7C172203%7C172203%7C0%7C0%7C165%7C172093%7C1%7C-2147479534%7C0%23"
          },
          "operatingPeriods" : {
            "type" : "array",
            "description" : "HCSS ServiceDays.",
            "items" : {
              "$ref" : "#/components/schemas/OperatingPeriodSubscription"
            }
          },
          "legs" : {
            "type" : "array",
            "description" : "HCSS ConnectionInfo.",
            "items" : {
              "$ref" : "#/components/schemas/PTRideLegSubscription"
            }
          },
          "monitorFlags" : {
            "type" : "array",
            "description" : "Type of events that should be / are monitored.<br>- AF: Arrival times at the destination station of Consections\n- CF: Flag, if changing is possible\n- DF: Departure times at the start station of Consections\n- DV: Departure and Arrival delays\n- OF: Status of operation e.g. does the train operate or not\n- PF: Platform changes at departure and arrival station\n- ANSF: Guaranteed connection monitoring. Fetcher and corresponding feeder trip will be monitored\n- ALLATTRF: Monitor all attribute changes\n- REQATTRF: Monitor attributes included in the request filter (only monitor attributes relevant to the feasibility of a connection)\n- FTF: Freetext changes\n- FTFS: Spontanous freetext changes\n- FTFP: Planned freetext changes\n- INCOMP: Incompatible type - possible, if older and newer clients use the same HCSS\n- ARR: Arrival of train\n- DEP: Departure of train\n- DEP_NO_RT: Train should have left but no message received\n- SDF: Changes to service density frequency\n- RF: Changed routes in private transport sections\n- FF: Monitor changed (train-)formations\n- PLANF: Monitor changes in plan data like changed times, names, rideability\n- TRF Monitor time triggered events (server-defined rules like (train-)change reminders)\n- NDF Monitor notable delays (server defined specific delay values with special impacts)\n- WF: Weather-Flag: monitor weather changes",
            "items" : {
              "type" : "string",
              "description" : "Type of events that should be / are monitored.<br>- AF: Arrival times at the destination station of Consections\n- CF: Flag, if changing is possible\n- DF: Departure times at the start station of Consections\n- DV: Departure and Arrival delays\n- OF: Status of operation e.g. does the train operate or not\n- PF: Platform changes at departure and arrival station\n- ANSF: Guaranteed connection monitoring. Fetcher and corresponding feeder trip will be monitored\n- ALLATTRF: Monitor all attribute changes\n- REQATTRF: Monitor attributes included in the request filter (only monitor attributes relevant to the feasibility of a connection)\n- FTF: Freetext changes\n- FTFS: Spontanous freetext changes\n- FTFP: Planned freetext changes\n- INCOMP: Incompatible type - possible, if older and newer clients use the same HCSS\n- ARR: Arrival of train\n- DEP: Departure of train\n- DEP_NO_RT: Train should have left but no message received\n- SDF: Changes to service density frequency\n- RF: Changed routes in private transport sections\n- FF: Monitor changed (train-)formations\n- PLANF: Monitor changes in plan data like changed times, names, rideability\n- TRF Monitor time triggered events (server-defined rules like (train-)change reminders)\n- NDF Monitor notable delays (server defined specific delay values with special impacts)\n- WF: Weather-Flag: monitor weather changes"
            }
          },
          "data" : {
            "type" : "string",
            "description" : "Additional data which should be stored for that subscription, will be returned when client asked for subscription details. The server does not interpret this field. Warning: Do not write too much data in this field as messages might get too large for network communication."
          },
          "noticesPositive" : {
            "type" : "string",
            "description" : "Wanted attributes for the whole connection (e.g. has toilet); notifications can be send in case these attributes are deactivated."
          },
          "noticesNegative" : {
            "type" : "string",
            "description" : "Not wanted attributes (e.g. smoking allowed); notifications can be sent in case these attributes are activated."
          }
        },
        "description" : "Details about a previously subscribed `Trip` (aka HCCS ServiceSubscription)."
      },
      "TripSubscriptionDetailsResponse" : {
        "required" : [ "subscription", "tripSubscription" ],
        "type" : "object",
        "properties" : {
          "subscription" : {
            "$ref" : "#/components/schemas/Subscription"
          },
          "tripSubscription" : {
            "$ref" : "#/components/schemas/TripSubscription"
          },
          "passengersCount" : {
            "type" : "integer",
            "description" : "This special feature is designed for the staff of operators, and is available on request. With this parameter the staff is able to submit the number of affected passengers, e.g. for waiting for interchanges.",
            "format" : "int32"
          }
        },
        "description" : "More details about a subscribed `Trip`."
      },
      "VehicleModeEnum" : {
        "type" : "string",
        "description" : "Enum whose values can be extended, thus default case should be foreseen wenn parsing the response (in Java, avoid `valueOf`, prefer `switch` with the value's name and define a default). You may become unexpected values if your client is out-of-sync. ",
        "enum" : [ "TRAIN", "BUS", "CHAIRLIFT", "COG_RAILWAY", "GONDOLA", "METRO", "SHIP", "CABLEWAY", "TRAMWAY", "ELEVATOR", "PLANE", "TAXI" ]
      },
      "StopPlaceDetailed" : {
        "required" : [ "classification", "id", "members", "name", "quays", "tariffBorder", "tariffZones", "type", "vehicleModes" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "**Inheritance discriminator to proper Subclass** (technical field required by [OpenApi 3 Discriminator](https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/)) makes deserialization at consumer side easier."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique id referable by underlying system(s)."
          },
          "name" : {
            "type" : "string",
            "description" : "Unique non-translated name of Place."
          },
          "swissLocationId" : {
            "type" : "string",
            "description" : "Swiss location id (SLOID) from DiDok. More on [Service Points (DiDok) API](https://developer.sbb.ch/apis/servicepoints/documentation).",
            "example" : "ch:1:sloid:16161"
          },
          "province" : {
            "type" : "string",
            "description" : "In CH this represents the 'district' name.",
            "example" : "Bern-Mitteland"
          },
          "canton" : {
            "type" : "string",
            "description" : "In CH this represents the 'canton' abbreviation.",
            "example" : "BE"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The two uppercase character of ISO 3166 code, mostly similar to lowercase IANA identifier (source: DiDok geographic-based _isoCountryCode_).",
            "example" : "CH"
          },
          "centroid" : {
            "$ref" : "#/components/schemas/Point"
          },
          "operator" : {
            "$ref" : "#/components/schemas/Operator"
          },
          "distanceToSearchPosition" : {
            "type" : "integer",
            "description" : "Specifies the distance in [m] to the given coordinates in request. (Only set for `v3/places/by-coordinates*`).",
            "format" : "int32"
          },
          "tariffBorder" : {
            "type" : "boolean",
            "description" : "Boundary for fare calculation resp. whether the **stop represents a tariff border between Switzerland and a neighbouring country**, where _true_ is based on a NOVA Tariff-BorderPoint (and must not be missunderstand by [UIC borderpoints](https://uic.org/support-activities/it/article/border-points)."
          },
          "tariffZones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TariffZone"
            }
          },
          "weighting" : {
            "type" : "integer",
            "description" : "The higher the traffic load/importance the higher the value, null if unknown.",
            "format" : "int32",
            "example" : 30170
          },
          "vehicleModes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleMode"
            }
          },
          "quays" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Quay"
            }
          },
          "classification" : {
            "type" : "string",
            "description" : "A classification for a StopPlace:<br>x-extensible-enum: [SIMPLE, COMPLEX, ZONED, VIRTUAL] as in `StopPlaceClassification`\n- `SIMPLE` just a non-grouped stop (typically for a concrete VehicleMode)\n- `COMPLEX` a grouped concrete StopPlace (typically shared among different operators like Bern)\n- `ZONED` a grouped topographically extended Stop (typically not ONE concrete StopPlace but a set of them like Paris)\n- `VIRTUAL` a touristic non-real edge-point like 'Bahn-2000-Strecke' (has never leader or members)",
            "example" : "SIMPLE"
          },
          "leader" : {
            "type" : "string",
            "description" : "Pointer to `StopPlace` which acts as leader of this COMPLEX or ZONED, if so.",
            "example" : "198"
          },
          "members" : {
            "type" : "array",
            "description" : "Contains members of this `StopPlace` of either type COMPLEX or ZONED, if any.",
            "items" : {
              "type" : "string",
              "description" : "Contains members of this `StopPlace` of either type COMPLEX or ZONED, if any."
            }
          }
        },
        "description" : "A place (de:Haltestelle) comprising one or more areas where vehicles may stop and where passengers may board or leave vehicles or prepare their trip. The name is given in regional language only.<br>Inherited from `Place`.<br>Inherited from `Place`."
      },
      "StopPlaceDetailedResponse" : {
        "required" : [ "stopPlaces" ],
        "type" : "object",
        "properties" : {
          "stopPlaces" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StopPlaceDetailed"
            }
          }
        },
        "description" : "Response containing matching `StopPlaceDetailed`, which are `StopPlace`s with further details (see `StopPlace::links::detail`)."
      },
      "TariffZone" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "URI of Network Alliance (de:Verbund, resp. NOVA Alliance)",
            "example" : "https://lod.opentransportdata.swiss/alliance/leman-pass"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of Network Alliance (de:Verbund, resp. NOVA Alliance::label)",
            "example" : "Léman Pass"
          }
        },
        "description" : "NOVA Tariff-group (source 'VERBUNDLISTE.CSV')."
      },
      "AudienceEnum" : {
        "type" : "string",
        "description" : "Enum whose values can be extended, thus default case should be foreseen wenn parsing the response (in Java, avoid `valueOf`, prefer `switch` with the value's name and define a default). You may become unexpected values if your client is out-of-sync. ",
        "enum" : [ "B2C_TEXT", "B2C_MAP", "B2C_TIMETABLE", "B2E_TEXT", "B2E_MAP" ],
        "default" : "B2C_TEXT"
      },
      "SituationResponse" : {
        "required" : [ "situations" ],
        "type" : "object",
        "properties" : {
          "situations" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PTSituation"
            }
          }
        },
        "description" : "Contains a list of situation-messages (source HIM, aka Siri::SituationsStructure)."
      },
      "SituationCauseEnum" : {
        "type" : "string",
        "enum" : [ "INFORMATION", "CONSTRUCTION_SITE", "DISTURBANCE", "DELAY", "TRAIN_REPLACEMENT_BY_BUS", "END_MESSAGE", "VOCAL_ANNOUNCEMENT_ON_VEHICLE" ]
      },
      "ServiceCalendar" : {
        "required" : [ "name", "operatingPeriods" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Informational reference name.<br>(Translated according to Accept-Language.)",
            "example" : "CH Fahrplan (SBB)"
          },
          "operatingPeriods" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OperatingPeriod"
            }
          }
        },
        "description" : "Available planned journey calendar to span the whole time range covered by underlying systems for various Journey-Planner data."
      },
      "PlaceResponse" : {
        "required" : [ "places" ],
        "type" : "object",
        "properties" : {
          "places" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Place"
            }
          }
        },
        "description" : "Response container of a Place-request."
      },
      "Equipment" : {
        "required" : [ "classification", "id" ],
        "type" : "object",
        "properties" : {
          "classification" : {
            "$ref" : "#/components/schemas/EquipmentType"
          },
          "id" : {
            "type" : "string",
            "description" : "Id from a technical point of view, should not be interpreted!",
            "example" : "rtzwbgndjdes"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the equipment, translated if possible. Not always filled up, in contrary to the `classification's` name<br>(Translated according to Accept-Language.)",
            "example" : "Wi-Fi, Kreuzlingen"
          }
        },
        "description" : "An equipment can be either physically installed or immaterial such as a service to travellers."
      },
      "EquipmentType" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the equipment type:<br>x-extensible-enum: [WIFI] as in `EquipmentTypeEnum`\n* `WIFI` free internet connection through Wi-Fi",
            "example" : "WIFI"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the equipment type, translated.<br>(Translated according to Accept-Language.)",
            "example" : "Wi-Fi"
          },
          "corporateIdentityIcon" : {
            "type" : "string",
            "description" : "Icon-identifier to represent the equipment. See [SBB pictograms](https://digital.sbb.ch/de/brand_elemente/piktogramme)",
            "example" : "WLAN"
          }
        },
        "description" : "TYPE OF EQUIPMENT in Transmodel, referenced as a classification of an `Equipment`."
      },
      "FacilityForInfoPortalResponse" : {
        "type" : "object",
        "properties" : {
          "postalAddress" : {
            "$ref" : "#/components/schemas/PostalAddress"
          },
          "connectionHint" : {
            "type" : "string"
          },
          "equipments" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Equipment"
            }
          },
          "stopPlaces" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaceRefByNameWithDistance"
            }
          }
        },
        "description" : "A facility as for InfoPortal. Temporary solution before it goes to a PlaceService. Name is temporary!"
      },
      "PlaceRefByNameWithDistance" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Unique non-translated resp. local name of StopPlace.",
            "example" : "Konstanz"
          },
          "distance" : {
            "type" : "integer",
            "description" : "Specifies the distance in [m] from the parent element.",
            "format" : "int32",
            "example" : 2000
          }
        },
        "description" : "A reference to a stop-place with its distance from the context (parent element). Name is temporary!"
      },
      "PostalAddress" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Main line of the address = name or company.",
            "example" : "SBB AG"
          },
          "complement" : {
            "type" : "string",
            "description" : "Name's complement, typically company's service.",
            "example" : "Reisezentrum"
          },
          "postOfficeBox" : {
            "type" : "string",
            "example" : "1837"
          },
          "addressLine1" : {
            "type" : "string",
            "description" : "Main address line, typically the street.",
            "example" : "Bahnhofstrasse"
          },
          "houseNumber" : {
            "type" : "string",
            "description" : "House number completing the `addressLine1`.",
            "example" : "12"
          },
          "postCode" : {
            "type" : "string",
            "description" : "Postal code of the town",
            "example" : "8280"
          },
          "town" : {
            "type" : "string",
            "description" : "Town or city",
            "example" : "Kreuzlingen"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The two uppercase character of ISO 3166 code, mostly similar to lowercase IANA identifier (source: DiDok geographic-based _isoCountryCode_).",
            "example" : "CH"
          }
        },
        "description" : "Postal Address (source INSA)."
      },
      "EquipmentTypeEnum" : {
        "type" : "string",
        "description" : "Values described in `EquipmentType::id`. Enum whose values can be extended, thus default case should be foreseen wenn parsing the response (in Java, avoid `valueOf`, prefer `switch` with the value's name and define a default). You may become unexpected values if your client is out-of-sync. ",
        "enum" : [ "WIFI" ]
      },
      "GroupReservationStatusEnum" : {
        "type" : "string",
        "description" : "Enum whose values can be extended, thus default case should be foreseen wenn parsing the response (in Java, avoid `valueOf`, prefer `switch` with the value's name and define a default). You may become unexpected values if your client is out-of-sync. ",
        "enum" : [ "EMPTY", "CONFIRMED", "OK", "IGNORED", "REQUEST_MADE", "REQUEST_POSSIBLE", "BROKEN", "REJECTED", "CANCELED", "LOCKED_FOR_GROUPS", "UNKNOWN" ]
      },
      "InheritanceResponse" : {
        "type" : "object",
        "properties" : {
          "dummyAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "dummyPointOfInterest" : {
            "$ref" : "#/components/schemas/PointOfInterest"
          },
          "dummyPTRideLeg" : {
            "$ref" : "#/components/schemas/PTRideLeg"
          },
          "dummyAccessLeg" : {
            "$ref" : "#/components/schemas/AccessLeg"
          },
          "dummyPTConnectionLeg" : {
            "$ref" : "#/components/schemas/PTConnectionLeg"
          },
          "dummyAlternativeModeLeg" : {
            "$ref" : "#/components/schemas/AlternativeModeLeg"
          },
          "dummyPersonalLeg" : {
            "$ref" : "#/components/schemas/PersonalLeg"
          },
          "dummyAudienceEnum" : {
            "$ref" : "#/components/schemas/AudienceEnum"
          },
          "dummyGroupReservationStatusEnum" : {
            "$ref" : "#/components/schemas/GroupReservationStatusEnum"
          },
          "dummyStopPlaceClassification" : {
            "$ref" : "#/components/schemas/StopPlaceClassification"
          },
          "dummyEquipmentTypeEnum" : {
            "$ref" : "#/components/schemas/EquipmentTypeEnum"
          }
        },
        "description" : "OpenApi patch to enforce generation of all dummy-property classes.",
        "deprecated" : true
      },
      "StopPlaceClassification" : {
        "type" : "string",
        "description" : "Enum whose values can be extended, thus default case should be foreseen wenn parsing the response (in Java, avoid `valueOf`, prefer `switch` with the value's name and define a default). You may become unexpected values if your client is out-of-sync. Meaning of each value is explained in `StopPlaceDetailed::classification`",
        "enum" : [ "SIMPLE", "COMPLEX", "ZONED", "VIRTUAL" ]
      },
      "CircleGeofence" : {
        "required" : [ "center" ],
        "type" : "object",
        "properties" : {
          "center" : {
            "$ref" : "#/components/schemas/CoordinatesWGS84"
          },
          "radiusMin" : {
            "type" : "integer",
            "description" : "@Deprecated If minRadius [m] is unset or zero, it is described as circle.",
            "format" : "int32",
            "deprecated" : true
          },
          "radiusMax" : {
            "type" : "integer",
            "description" : "Maximum radius [m].",
            "format" : "int32"
          }
        },
        "description" : "Geofence expressed by a circle."
      },
      "ConnectionReliability" : {
        "type" : "object",
        "properties" : {
          "original" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "GUARANTEED", "HIGH", "LOW", "ABORTIVE" ]
          },
          "alternative" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "GUARANTEED", "HIGH", "LOW", "ABORTIVE" ]
          }
        },
        "description" : "Archive API Timemachine only: Validation of trip in the past."
      },
      "CoordinatesWGS84" : {
        "type" : "object",
        "properties" : {
          "longitude" : {
            "type" : "number",
            "deprecated" : true
          },
          "latitude" : {
            "type" : "number",
            "deprecated" : true
          },
          "latitudeDecimalDegrees" : {
            "type" : "number",
            "format" : "double"
          },
          "longitudeDecimalDegrees" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "description" : "World Geodetic System 1984 (WGS 84) coordinates (latitude: specifies the north–south position of a point on the earth's surface; longitude: specifies the east-west position of a point on the earth's surface). For e.g. Bern CH (lat=46.947974,lon=7.447447)."
      },
      "FormationAlert" : {
        "required" : [ "formationChangesAtOrigin", "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Title for any formation-changes (useful for sub-grouping of formationChanges).<br>(Translated according to Accept-Language.)"
          },
          "formationChangesAtOrigin" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Rt formation-changes at origin (empty-list if none).<br>(Translated according to Accept-Language.)"
            }
          }
        },
        "description" : "Contains any Formation rt infos (such as changed wagons, ..) on PUBLIC_TRANSPORTATION LegV2. Depends on v2/trips parameter trainFormationType."
      },
      "HimMessageV2" : {
        "required" : [ "channels", "edges", "formattedFooter", "formattedFooterShort", "formattedHeader", "id", "priority", "regions" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Identity of message (aka HIM id).",
            "example" : "x944292"
          },
          "category" : {
            "type" : "string",
            "description" : "Represents disruption type for HIM messages.",
            "example" : "DISTURBANCE",
            "enum" : [ "INFORMATION", "CONSTRUCTION_SITE", "DISTURBANCE", "DELAY", "TRAIN_REPLACEMENT_BY_BUS", "END_MESSAGE" ]
          },
          "priority" : {
            "type" : "integer",
            "description" : "Priority rank (the smaller the higher): low = 80, medium = 60, high = 40, de:Grossereignis = 20",
            "format" : "int32",
            "example" : 80
          },
          "formattedHeader" : {
            "type" : "string",
            "description" : "Heading of message formatted according to SBB business rule: affectedProducts, from/to, head, lead"
          },
          "formattedFooter" : {
            "type" : "string",
            "description" : "Complete Footer/text of message formatted according to SBB business rule (HTML tags like BR(eak) are possible). Scoped for browser based UIs."
          },
          "formattedFooterShort" : {
            "type" : "string",
            "description" : "Short Footer/text of message formatted according to SBB business rule (HTML tags like BR(eak) are possible). Scoped for App UIs."
          },
          "validFromStop" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "validFromStopName" : {
            "type" : "string",
            "description" : "@Deprecated use validFromStop::name",
            "deprecated" : true
          },
          "validToStop" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "validToStopName" : {
            "type" : "string",
            "description" : "@Deprecated use validToStop::name",
            "deprecated" : true
          },
          "routeIndexFrom" : {
            "type" : "integer",
            "description" : "@Deprecated Use `validFromStop::routeIndex` instead. First stop/station where this message is valid. See the Stops list in the JourneyDetail response for this leg to get more details about this stop/station.",
            "format" : "int32",
            "deprecated" : true
          },
          "routeIndexTo" : {
            "type" : "integer",
            "description" : "@Deprecated Use `validToStop::routeIndex` instead. Last stop/station where this message is valid. See the Stops list in the JourneyDetail response for this leg to get more details about this stop/station.",
            "format" : "int32",
            "deprecated" : true
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "startDate" : {
            "type" : "string",
            "description" : "Start date of event (related to `startTime`).",
            "format" : "date"
          },
          "endTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "endDate" : {
            "type" : "string",
            "description" : "End date of event (related to `endTime`).",
            "format" : "date"
          },
          "startText" : {
            "type" : "string",
            "description" : "@Deprecated Descriptive text for start of event period.",
            "deprecated" : true
          },
          "endText" : {
            "type" : "string",
            "description" : "@Deprecated Descriptive text for end of event period.",
            "deprecated" : true
          },
          "dailyStartingAt" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "dailyDuration" : {
            "type" : "string",
            "description" : "Message event period [duration](https://www.w3.org/TR/xmlschema11-2/#duration) starting at dailyStartingAt for dailyDuration amount of time.",
            "example" : "P1DT2H4M"
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageChannelType"
            }
          },
          "serviceDays" : {
            "$ref" : "#/components/schemas/ServiceDaysV2"
          },
          "edges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageEdge"
            }
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageRegion"
            }
          },
          "transportProducts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportProductV2"
            }
          }
        },
        "description" : "A disruption (for e.g. an incident or a deviation (aka de:Störungs-, Ereignismeldung)) affecting planned PT `TransportProductV2` in certain edges and/or regions."
      },
      "HimSummary" : {
        "required" : [ "constructionSite", "delay", "disturbance", "endMessage", "information", "trainReplacement" ],
        "type" : "object",
        "properties" : {
          "information" : {
            "type" : "boolean",
            "description" : "Contains INFORMATION message(s)."
          },
          "constructionSite" : {
            "type" : "boolean",
            "description" : "Contains CONSTRUCTION_SITE message(s)."
          },
          "disturbance" : {
            "type" : "boolean",
            "description" : "Contains DISTURBANCE (disruption) message(s)."
          },
          "delay" : {
            "type" : "boolean",
            "description" : "Contains delay message(s)."
          },
          "trainReplacement" : {
            "type" : "boolean",
            "description" : "Contains train-replacement message(s)."
          },
          "endMessage" : {
            "type" : "boolean",
            "description" : "Contains END-MESSAGE message(s)."
          }
        },
        "description" : "Trip overall him info."
      },
      "LegV2" : {
        "required" : [ "attributes", "cancelled", "duration", "index", "infos", "messages", "partiallyCancelled", "reachable", "redirected", "serviceDays", "stops", "transportProducts", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of leg indicates what kind of transportation is implicated (supported by SBB: PUBLIC_JOURNEY, FOOTPATH, TRANSFER, CAR_ROUTE).",
            "enum" : [ "PUBLIC_JOURNEY", "FOOTPATH", "TRANSFER", "BIKE_ROUTE", "CAR_ROUTE", "PARK_RIDE", "TAXI", "CHECKIN", "CHECKOUT", "TELE_TAXI" ]
          },
          "stops" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StopV2"
            }
          },
          "transportProducts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportProductV2"
            }
          },
          "serviceDays" : {
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/ServiceDaysV2"
            }
          },
          "duration" : {
            "type" : "string",
            "description" : "The [duration](https://www.w3.org/TR/xmlschema11-2/#duration) leg::origin to leg::destination in realtime. If a Leg is not rideable (for e.g. cancelled), the value may be ZERO.",
            "example" : "P1DT2H4M"
          },
          "distance" : {
            "type" : "integer",
            "description" : "Distance for this leg in meter.",
            "format" : "int32"
          },
          "direction" : {
            "type" : "string",
            "description" : "Direction information correlating to Vehicle or Perron display. Typically the last stop-point of the associated line, though for operational or commercial reasons, the direction can also be a stop-over if the passengers are to be published a destination that makes sense in relation to their place of departure."
          },
          "journeyStatus" : {
            "type" : "string",
            "description" : "@Deprecated Contains the status of the journey. Given for LegType.PUBLIC_JOURNEY only.",
            "deprecated" : true,
            "enum" : [ "PLANNED", "ADDITIONAL", "REPLACEMENT", "SPECIAL" ]
          },
          "journeyReference" : {
            "type" : "string",
            "description" : "Underlying system specific unique identifier representing a concrete (partial) route for a specific vehicle and time. Be aware this is just a temporary id and may change daily! (Required for LegType.PUBLIC_JOURNEY.)",
            "example" : "1|17166|0|85|18032019"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HimMessageV2"
            }
          },
          "cancelled" : {
            "type" : "boolean",
            "description" : "true: Journey is `cancelled` (de:Ausfall), default=false."
          },
          "cancelledFormatted" : {
            "type" : "string",
            "description" : "If `cancelled`, enduser cancellation info.<br>(Translated according to Accept-Language.)",
            "example" : "Ausfall"
          },
          "partiallyCancelled" : {
            "type" : "boolean",
            "description" : "true: Journey is partially cancelled (de:Teilausfall) at beginning or end, default=false."
          },
          "partiallyCancelledFormatted" : {
            "type" : "string",
            "description" : "If `partiallyCancelled`, enduser info.<br>(Translated according to Accept-Language.)",
            "example" : "Ausfall"
          },
          "reachable" : {
            "type" : "boolean",
            "description" : "true: transport-product change from Leg to Leg is reachable (de: Anschluss kann gehalten werden, see TripV2::valid); false: de:nicht mehr erreichbare Fahrt"
          },
          "reachableFormatted" : {
            "type" : "string",
            "description" : "Transport-product change from Leg to Leg info according to SBB business rules. Relates to reachable.<br>(Translated according to Accept-Language.)",
            "example" : "Your connecting train will be waiting, please change trains immediately."
          },
          "redirected" : {
            "type" : "boolean",
            "description" : "true: journey is redirected"
          },
          "redirectedFormatted" : {
            "type" : "string",
            "description" : "Text intended for passengers about a planned stop being skipped, relates to `redirected`.<br>(Translated according to Accept-Language.)",
            "example" : "This vehicle is not stopping at all stations."
          },
          "unplannedStopsFormatted" : {
            "type" : "string",
            "description" : "Text intended for passengers about an additional non-planned stop at a station.<br>(Translated according to Accept-Language.)",
            "example" : "This vehicle is making exceptional stops. This can lead to increased travel time."
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "infos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "formationHint" : {
            "type" : "string",
            "description" : "Just a hint whether a Formation is available for this Leg. Set trainFormationType=ORIGIN_DESTINATION to force this info and call v2/trips/trainFormation afterwards only if flags signal availability of a formation to reduce unnecessary requests.",
            "enum" : [ "NONE", "ORIGIN", "ORIGIN_FORMATION_CHANGE", "DESTINATION", "DESTINATION_FORMATION_CHANGE", "BOTH", "BOTH_FORMATION_CHANGE" ]
          },
          "formationAlert" : {
            "$ref" : "#/components/schemas/FormationAlert"
          },
          "index" : {
            "type" : "integer",
            "description" : "Leg's are ordered within its Trip riding sequence starting from 0 and incrementing by 1.",
            "format" : "int32"
          },
          "polylineFormatted" : {
            "type" : "string",
            "description" : "String list of WGS84 coordinates in `latitude,longitude|..` pairs' (J-S v2 proprietary representation and vice versa to GeoJSON lon/lat order!!!) and represents a de:Streckenverlauf. Depends on polyline=true.",
            "example" : "46.44,7.99|47.234,7.956|.."
          },
          "delayedFormatted" : {
            "type" : "string",
            "description" : "Enduser text, saying whether there is a delay on Leg (referring to first/last Stop).<br>(Translated according to Accept-Language.)",
            "example" : "Delay"
          },
          "platformChangedFormatted" : {
            "type" : "string",
            "description" : "Enduser text, saying whether there is a platform change on Leg (referring to first and/or last Stop on leg), which indicates the passengers to check carefully at boarding/alighting.<br>(Translated according to Accept-Language.)",
            "example" : "Gleisänderung"
          },
          "groupReservationStatus" : {
            "type" : "string",
            "description" : "Denotes if reservations are possible for groups on this specific trip. Set only if enforced by related param `includeGroupReservation`.",
            "enum" : [ "EMPTY", "CONFIRMED", "OK", "IGNORED", "REQUEST_MADE", "REQUEST_POSSIBLE", "BROKEN", "REJECTED", "CANCELED", "LOCKED_FOR_GROUPS", "TIMETABLE_DATA_NOT_MATCH", "UNKNOWN" ]
          },
          "paginationCursor" : {
            "$ref" : "#/components/schemas/PaginationCursor"
          }
        },
        "description" : "A trip consists of [1..*] legs, where a leg represents a part of the travelling route (for e.g. from A to B) with the same type of transportation (typically by public transportation or by foot)."
      },
      "LocalTime" : {
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nano" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Message event period starting at time daily.",
        "example" : "13:07"
      },
      "MessageChannelType" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "enum" : [ "MESSAGELIST_CUSTOMER", "MAP_CUSTOMER", "TIMETABLE", "MESSAGELIST_SALE", "MAP_SALE" ]
          },
          "urls" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlLinkType"
            }
          },
          "validFromTime" : {
            "type" : "string"
          },
          "validFromDate" : {
            "type" : "string"
          },
          "validToTime" : {
            "type" : "string"
          },
          "validToDate" : {
            "type" : "string"
          }
        },
        "description" : "Audience (like enduser channels, operator-employees, ..) to be informed (aka: de:Publikationskanäle). Make sure to inform the proper target-users."
      },
      "MessageEdge" : {
        "required" : [ "direction", "polylineFormatted" ],
        "type" : "object",
        "properties" : {
          "iconCoordinates" : {
            "$ref" : "#/components/schemas/CoordinatesWGS84"
          },
          "polylineFormatted" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "String list of WGS84 coordinates in `latitude,longitude|..` pairs' (J-S v2 proprietary representation and vice versa to GeoJSON lon/lat order!!!) and represents a de:Streckenverlauf.",
              "example" : "46.44,7.99|47.234,7.956|.."
            }
          },
          "direction" : {
            "type" : "string",
            "description" : "Direction a vehicle is going to on the affected edge where HIM message applies, relates to `polylineFormatted`.",
            "enum" : [ "UNKNOWN", "STRAIGHT", "OPPOSITE", "BIDIRECTIONAL" ]
          }
        },
        "description" : "Edge related to HIM-Message."
      },
      "MessageRegion" : {
        "required" : [ "polylineFormatted" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of region.",
            "example" : "BVI2"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of region.",
            "example" : "BVI 2"
          },
          "polylineFormatted" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "String list of WGS84 coordinates in `latitude,longitude|..` pairs' (J-S v2 proprietary representation and vice versa to GeoJSON lon/lat order!!!) and represents a de:Streckenverlauf.",
              "example" : "46.44,7.99|47.234,7.956|.."
            }
          },
          "iconCoordinates" : {
            "$ref" : "#/components/schemas/CoordinatesWGS84"
          },
          "geofence" : {
            "$ref" : "#/components/schemas/CircleGeofence"
          }
        },
        "description" : "Region-Information."
      },
      "Note" : {
        "required" : [ "key", "priority" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "An identifier of this note (two letter combination further identifying the #value of the note)."
          },
          "value" : {
            "type" : "string",
            "description" : "Speaking fully formatted value relating to key. <br>(Translated according to Accept-Language.)"
          },
          "priority" : {
            "type" : "integer",
            "description" : "A lower priority value means a higher importance (default=100).",
            "format" : "int32"
          },
          "routeIndexFrom" : {
            "type" : "integer",
            "description" : "Relates to Stop::routeIndex where this note is valid from.",
            "format" : "int32"
          },
          "routeIndexTo" : {
            "type" : "integer",
            "description" : "Relates to Stop::routeIndex where this note is valid to.",
            "format" : "int32"
          },
          "valueFormattable" : {
            "$ref" : "#/components/schemas/NoteValue"
          }
        },
        "description" : "Some objects have additional notes (like car-attributes, customer-infos, ..)."
      },
      "NoteValue" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "type" : "string"
          },
          "arguments" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "description" : "Only set if related value has linkable data like EMAIL,PHONE,URL (which is also the sort-order) to fill in or annotate by UI functionality, to make args navigable for e.g. open a browser for a website. See v3 **Notice** (::text) in [complex parameter](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/JSON-Objects.md)"
      },
      "ServiceDaysV2" : {
        "required" : [ "operatingDays" ],
        "type" : "object",
        "properties" : {
          "daysRegular" : {
            "type" : "string",
            "description" : "Regular service-days the related transport-product operates on a rather 'repeatable' scheduled plan.<br>(Translated according to Accept-Language.)",
            "example" : "täglich"
          },
          "daysIrregular" : {
            "type" : "string",
            "description" : "Irregular service-days or exceptions to daysRegular.<br>(Translated according to Accept-Language.)",
            "example" : "nicht 24., 25. Mär, 7., 8. Apr"
          },
          "operatingDays" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Effective operating-days for the period (depending on scope). Set includeOperatingDays=true explicitely in requests to get data if relevant, otherwise empty-list is returned for volume reasons.)",
              "format" : "date"
            }
          },
          "routeIndexFrom" : {
            "type" : "integer",
            "description" : "Related to Stop::routeIndex.",
            "format" : "int32"
          },
          "routeIndexTo" : {
            "type" : "integer",
            "description" : "Related to Stop::routeIndex.",
            "format" : "int32"
          }
        },
        "description" : "Service-period of a transport-product in regular schedule. Given for a yearly journey-planning period (see /info)."
      },
      "StopV2" : {
        "required" : [ "arrivalPlatformChanged", "avgOccupancyFirstClass", "avgOccupancySecondClass", "boardingAlightingStatus", "delayUndefined", "departurePlatformChanged", "name", "notServiced", "requestStop", "stopStatus", "type", "uicOrId" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Origin and Destination: STATION, ADDRESS or POI; STATION: any stop between Origin and Destination",
            "enum" : [ "STATION", "ADDRESS", "POI" ]
          },
          "uicOrId" : {
            "type" : "string",
            "description" : "Unique identifier of STATION (case uic) or ADDRESS/POI (case id)."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of STATION (locale naming, non- translated)."
          },
          "coordinates" : {
            "$ref" : "#/components/schemas/CoordinatesWGS84"
          },
          "cantonCH" : {
            "type" : "string",
            "description" : "Canton abbreviation for locations within Switzerland.",
            "example" : "BE"
          },
          "routeIndex" : {
            "type" : "integer",
            "description" : "Route index of a stop/station in a journey-segment (depends on StopBehaviour). Usually starting from 0 or 1 and incrementing by 1. However if the route index value jumps:\n- it is most likely that the journey was rerouted\n- or a virtual Stop",
            "format" : "int32"
          },
          "arrivalPrognosisType" : {
            "type" : "string",
            "description" : "Provides the type of the prognosis like if it was reported by an external provider or calculated or corrected by the system. Related to arrival date/time.",
            "enum" : [ "PROGNOSED", "MANUAL", "REPORTED", "CORRECTED", "CALCULATED" ]
          },
          "departurePrognosisType" : {
            "type" : "string",
            "description" : "Provides the type of the prognosis like if it was reported by an external provider or calculated or corrected by the system. Related to departure date/time.",
            "enum" : [ "PROGNOSED", "MANUAL", "REPORTED", "CORRECTED", "CALCULATED" ]
          },
          "stopStatus" : {
            "type" : "string",
            "description" : "Status at stop if STATION (like on plan, cancelled, partially cancelled). Null if ADDRESS or POI.\nThis is is useful when iterating from stop to stop getting appropriate state symbols (de:Perlenschnur), see [Routing-Basics](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/RoutingBasics.md).",
            "enum" : [ "PLANNED", "CANCELLED", "BEGIN_PARTIAL_CANCELLATION", "END_PARTIAL_CANCELLATION", "NOT_SERVICED", "UNPLANNED" ]
          },
          "boardingAlightingStatus" : {
            "type" : "string",
            "description" : "Boarding (de:einsteigen) and alighting (de:aussteigen) status for this Stop; see [Routing-Basics](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/RoutingBasics.md)",
            "enum" : [ "BOARDING", "ALIGHTING", "BOARDING_ALIGHTING", "IRRELEVANT", "NONE" ]
          },
          "boarding" : {
            "type" : "boolean",
            "description" : "@Deprecated use boardingAlightingStatus exclusively",
            "deprecated" : true
          },
          "boardingRt" : {
            "type" : "boolean",
            "description" : "@Deprecated use boardingAlightingStatus exclusively",
            "deprecated" : true
          },
          "alighting" : {
            "type" : "boolean",
            "description" : "@Deprecated use boardingAlightingStatus exclusively",
            "deprecated" : true
          },
          "alightingRt" : {
            "type" : "boolean",
            "description" : "@Deprecated use boardingAlightingStatus exclusively",
            "deprecated" : true
          },
          "virtual" : {
            "type" : "boolean",
            "description" : "@Deprecated Use boardingAlightingStatus exclusively.",
            "deprecated" : true
          },
          "notServiced" : {
            "type" : "boolean",
            "description" : "@Deprecated Check StopStatus.NOT_SERVICED instead.",
            "deprecated" : true
          },
          "requestStop" : {
            "type" : "boolean",
            "description" : "Passenger needs to call for a vehicle stop (aka OJP `RequestStop`, resp. de:Halt auf Verlangen)."
          },
          "arrivalTrack" : {
            "type" : "string",
            "description" : "Arriving platform planned.",
            "example" : "12A"
          },
          "arrivalTrackRt" : {
            "type" : "string",
            "description" : "Arriving platform in realtime (oversteers arrivalTrack!). Whether this means a realtime change or just more detailed information has to be checked in related arrivalPlatformChanged!",
            "example" : "7"
          },
          "arrivalPlatformChanged" : {
            "type" : "boolean",
            "description" : "Related to arrivalTrackRt and arrivalTrack. **false** even if the rt track is set, this is not considered a realtime change (acc. to SBB busines rules); **true** real track change (typically drawn red in SBB UIs)."
          },
          "departureTrack" : {
            "type" : "string",
            "description" : "Departing platform planned.",
            "example" : "12"
          },
          "departureTrackFormatted" : {
            "type" : "string",
            "description" : "Principally same as departingTrack but with direction specific boarding-sections. Useful for e.g. in wing-trains (de:Flügelzug) such as Bern-Zweisimmen with a split of partial compositions at Spiez where customers might reach the wrong destination if they board the wrong boarding car. For end-customer-info prefer this value to display in UIs.",
            "example" : "12CD"
          },
          "departureTrackRt" : {
            "type" : "string",
            "description" : "Departing platform in realtime (oversteers departureTrack!). Whether this means a realtime change or just more detailed information has to be checked in related departurePlatformChanged!",
            "example" : "7"
          },
          "departurePlatformChanged" : {
            "type" : "boolean",
            "description" : "Related to departureTrackRt and departureTrack. **false** even if the rt track is set, this is not considered a realtime change (acc. to SBB busines rules); **true** real track change (typically drawn red in SBB UIs)."
          },
          "unplanned" : {
            "type" : "boolean",
            "description" : "@Deprecated use stopStatus exclusively",
            "deprecated" : true
          },
          "cancelled" : {
            "type" : "boolean",
            "description" : "@Deprecated use stopStatus exclusively",
            "deprecated" : true
          },
          "arrivalDateTime" : {
            "type" : "string",
            "description" : "Arrival date/time ([ISO-8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) UTC with time-numoffset (like '+02:00')) planned.",
            "format" : "date-time",
            "example" : "2023-04-18T14:55:00+01:00"
          },
          "arrivalDateTimeRt" : {
            "type" : "string",
            "description" : "Arrival date/time ([ISO-8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) UTC with time-numoffset (like '+02:00')) in realtime (oversteers `arrivalDateTime`!).",
            "format" : "date-time"
          },
          "arrivalDelayText" : {
            "type" : "string",
            "description" : "Formatted end-user message about delay at arrival, according to SBB business rules."
          },
          "departureDateTime" : {
            "type" : "string",
            "description" : "Departure date/time ([ISO-8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) UTC with time-numoffset (like '+02:00')) planned.",
            "format" : "date-time",
            "example" : "2023-04-18T14:55:00+01:00"
          },
          "departureDateTimeRt" : {
            "type" : "string",
            "description" : "Departure date/time ([ISO-8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) UTC with time-numoffset (like '+02:00')) in realtime (oversteers `departureDateTime`!).",
            "format" : "date-time"
          },
          "departureDelayText" : {
            "type" : "string",
            "description" : "Realtime delay message at departure. Formatted to display for end-user according to SBB business rules."
          },
          "delayUndefined" : {
            "type" : "boolean",
            "description" : "true: After a long amount of delay, according to SBB business rules (useful for channel to present the appropriate symbol)."
          },
          "avgOccupancyFirstClass" : {
            "type" : "string",
            "description" : "1st class de:Belegung (average)",
            "enum" : [ "UNKNOWN", "LOW", "MEDIUM", "HIGH" ]
          },
          "avgOccupancySecondClass" : {
            "type" : "string",
            "description" : "2nd class de:Belegung (average)",
            "enum" : [ "UNKNOWN", "LOW", "MEDIUM", "HIGH" ]
          },
          "accessibility" : {
            "uniqueItems" : true,
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "type" : "string",
              "description" : "@Deprecated use accessibilityMostRelevant - there is never more than one!",
              "deprecated" : true,
              "enum" : [ "ALL", "BOARDING_ALIGHTING_SELF", "BOARDING_ALIGHTING_BY_CREW", "BOARDING_ALIGHTING_BY_NOTIFICATION", "BOARDING_ALIGHTING_SHUTTLE_TRANSPORT", "BOARDING_ALIGHTING_NOT_POSSIBLE", "BOARDING_NEEDS_INFONOTE", "BOARDING_NEEDS_RESERVATIONNOTE" ]
            }
          },
          "accessibilityMostRelevant" : {
            "type" : "string",
            "description" : "The most relevant accessibility restriction for handicaped people out of #accessibility (according to SBB business rules).",
            "example" : "BOARDING_ALIGHTING_SELF",
            "enum" : [ "ALL", "BOARDING_ALIGHTING_SELF", "BOARDING_ALIGHTING_BY_CREW", "BOARDING_ALIGHTING_BY_NOTIFICATION", "BOARDING_ALIGHTING_SHUTTLE_TRANSPORT", "BOARDING_ALIGHTING_NOT_POSSIBLE", "BOARDING_NEEDS_INFONOTE", "BOARDING_NEEDS_RESERVATIONNOTE" ]
          },
          "exitSide" : {
            "type" : "string",
            "description" : "Exit side within a vehicle at a Stop (for e.g. car of train-formation) in relation to driving/forward direction.",
            "example" : "LEFT",
            "enum" : [ "LEFT", "RIGHT", "UNKNOWN" ]
          },
          "rank" : {
            "type" : "integer",
            "description" : "Rank of importance based on intermediate stop priority and distance within a (partial) JourneyDetail. SBB KI rule based on display-info to find relevant intermediate stops to present on a visual stationboard (de:Perronanzeiger). Origin and destination of departure/arrival have always rank=null. Depends on /v2/departures or /v2/arrivals includeRank=true",
            "format" : "int32"
          },
          "tariffBorderPoint" : {
            "type" : "boolean",
            "description" : "true: Stop::uic represents a NOVA Tariff-BorderPoint; false: no NOVA TariffBorderPoint; null unknown/irrelevant"
          }
        },
        "description" : "A stop represents a specific location (typically a STATION) of a leg or a complete journey-detail of a transport-product (aka v3.ScheduledStopPoint, OJP StopPoint)."
      },
      "TransportProductV2" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Usually displayed name for a travelling end-user.",
            "example" : "IC 1 753"
          },
          "numberFormatted" : {
            "type" : "string",
            "description" : "Either as number or suppressed by BR. Display by B2C enduser channels to not bother passengers with TU internal number.",
            "example" : "753"
          },
          "number" : {
            "type" : "string",
            "description" : "Unique per operating day (CH until 04:00) and name (where 'IC 1' can run several times per day in either of opposite directions).",
            "example" : "753"
          },
          "line" : {
            "type" : "string",
            "description" : "Usually referring to a specific physical route (JourneyDetail where direction is either way). If this value is missing, it is probably a _single-journey (de:Einzelfahrt)_.",
            "example" : "1"
          },
          "lineReference" : {
            "type" : "string",
            "description" : "External line-reference (e.g. relevant for Postauto AG), relates to `line`.",
            "example" : "R_547_000801_0883"
          },
          "category" : {
            "type" : "string",
            "description" : "@Deprecated Use other more speaking category* properties! Category of transport-product (class managed by SBB Data-Mgmt).",
            "example" : "INTERREGIO",
            "deprecated" : true,
            "enum" : [ "ICE_EN_CNL_CIS_ES_MET_NZ_PEN_TGV_THA_X2", "EUROCITY_INTERCITY_ICN_INTERCITYNIGHT_SUPERCITY", "INTERREGIO", "FASTTRAIN_REGIOEXPRESS", "SHIP_FERRY_STEAMER", "URBANRAILWAY_STADTEXPRESS_SEMIFASTTRAIN_OMNIBUSTRAIN", "BUS_COACH_TAXI", "CABLEWAY_FUNICULAR_GONDOLALIFT_CHAIRLIFT", "METRO_MOTORAILTRAIN_SPECIALTRAIN_URLAUBSEXPRESS", "TRAMWAY" ]
          },
          "categoryCode" : {
            "type" : "integer",
            "description" : "@Deprecated Corresponding numeric value of category (no use unless you deal with Hafas directly).",
            "format" : "int32",
            "example" : 2,
            "deprecated" : true
          },
          "categoryShortForm" : {
            "type" : "string",
            "description" : "Short, displayable name of category.",
            "example" : "IC"
          },
          "categoryLongForm" : {
            "type" : "string",
            "description" : "Long, displayable name of category.",
            "example" : "InterCity"
          },
          "operatorName" : {
            "type" : "string",
            "description" : "Fullname of responsible operator (translatable), relates to operatorNumber. This value matches with [OpenTransportData.swiss GoList field 'BEZEICHNUNG_DE'](https://opentransportdata.swiss/de/dataset/goch)<br>(Translated according to Accept-Language.)",
            "example" : "Schweizerische Bundesbahnen SBB"
          },
          "operatorShortName" : {
            "type" : "string",
            "description" : "Abbreviation of operator (translatable), relates to operatorName. This value might differ from OpenTransportData.swiss abbreviation (there are 3 different versions, J-S supports 3-digit abbreviation).<br>(Translated according to Accept-Language.)",
            "example" : "SBB"
          },
          "operatorNumber" : {
            "type" : "string",
            "description" : "DiDok/INFO+/Plabe related operator-number (typically Integer for CH managed codes, however some TU's like in foreign countries might return String expressions like '80___'), relates to operatorName.\nNOVA does not accept trimmed numbers!",
            "example" : "000011"
          },
          "routeIndexFrom" : {
            "type" : "integer",
            "description" : "Defines the first stop/station where this product is valid.",
            "format" : "int32",
            "example" : 3
          },
          "routeIndexTo" : {
            "type" : "integer",
            "description" : "Defines the last stop/station where this product is valid.",
            "format" : "int32",
            "example" : 7
          },
          "trackTranslation" : {
            "type" : "string",
            "description" : "Depending on a train, ship or whatever product there is specific terminology for its appropriate track.<br>(Translated according to Accept-Language.)",
            "example" : "de:Gleis, fr:Voie"
          },
          "trackTranslationShort" : {
            "type" : "string",
            "description" : "Abbreviation for trackTranslation.<br>(Translated according to Accept-Language.)",
            "example" : "de:Gl."
          },
          "vehicleType" : {
            "type" : "string",
            "description" : "v580 type (de:Gattung). SBB knows BUS, TRAMWAY (including METRO), BOAT, CABLEWAY (~v580) and TRAIN, other types are rather future use, see [v580 de:Verkehrsmittelkategorien (aka Transmodel or OJP/Siri `VehicleMode`)](https://github.com/SchweizerischeBundesbahnen/journey-service/blob/master/TransportMode.md).",
            "example" : "TRAIN",
            "enum" : [ "TRAIN", "BUS", "TRAMWAY", "BOAT", "FUNICULAR", "CABLEWAY", "CHAIRLIFT", "METRO", "COG_RAILWAY", "TAXI", "LIFT", "AIRPLANE" ]
          },
          "vehicleIconName" : {
            "type" : "string",
            "description" : "v580 type (de:Gattung) icon-name according to SBB Corporate-Identity, relates to `vehicleType` (see [Preview Produktion - L00 SVG Sprites - blue icons suffix for e.g. Train 'SBB_oev_b_t02'](https://previewserver.sbb.ch/#/project/SBBCH).",
            "example" : "SBB_oev_b_t02"
          }
        },
        "description" : "Kind of a speaking identifier of a travelling product, like a concrete SBB operated train between Bern-Zürich at 14:34, for eg. 'IR 16 2177'.\nThe TransportProduct relates to StopBehaviour request params, where 'ORIGIN_DESTINATION_ONLY' returns [0..1] transport-product (related to origin) typically without routeIndices, where other values of StopBehaviour may return several transport-products with given routeIndices segments."
      },
      "TripSummaryV2" : {
        "required" : [ "additionalRide", "cancelled", "delayed", "destination", "destinationLastStation", "infosRt", "maxOccupancyFirstClass", "maxOccupancySecondClass", "notServicedStop", "origin", "originFirstStation", "partiallyCancelled", "platformChanged", "reachable", "transportProducts", "unknownDelayed", "unplannedStop" ],
        "type" : "object",
        "properties" : {
          "origin" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "destination" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "originFirstStation" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "destinationLastStation" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "transportProducts" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "TransportProducts as displayable strings.",
              "example" : "IC 1 756,.."
            }
          },
          "maxOccupancyFirstClass" : {
            "type" : "string",
            "description" : "Highest occupancyAverage on any Leg::origin in 1st class over all PTRideLeg's.",
            "enum" : [ "UNKNOWN", "LOW", "MEDIUM", "HIGH" ]
          },
          "maxOccupancySecondClass" : {
            "type" : "string",
            "description" : "Highest occupancy on any Leg::origin in 2nd class.",
            "enum" : [ "UNKNOWN", "LOW", "MEDIUM", "HIGH" ]
          },
          "cancelled" : {
            "type" : "boolean",
            "description" : "de:Ausfall"
          },
          "partiallyCancelled" : {
            "type" : "boolean",
            "description" : "de:Teilausfall"
          },
          "notServicedStop" : {
            "type" : "boolean",
            "description" : "Contains a `StopV2` which is not serviced (de:ausserordentliche Durchfahrt)."
          },
          "platformChanged" : {
            "type" : "boolean",
            "description" : "de:Gleisänderung"
          },
          "delayed" : {
            "type" : "boolean",
            "description" : "de:Verspätung"
          },
          "reachable" : {
            "type" : "boolean",
            "description" : "de:Anschluss gehalten"
          },
          "additionalRide" : {
            "type" : "boolean",
            "description" : "@Deprecated use TripV2::isAlternative",
            "deprecated" : true
          },
          "unplannedStop" : {
            "type" : "boolean",
            "description" : "de:Zusätzlicher Halt"
          },
          "unknownDelayed" : {
            "type" : "boolean",
            "description" : "de:Unbestimmte Verspätung"
          },
          "infosRt" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "@Deprecated Meanwhile UI Business-Rules have changed, will not be provided by v3! Realtime end-user translated messages describing kinds of possible realtime changes within a Trip.",
              "deprecated" : true
            },
            "description" : "@Deprecated Meanwhile UI Business-Rules have changed, will not be provided by v3! Realtime end-user translated messages describing kinds of possible realtime changes within a Trip.",
            "deprecated" : true
          },
          "infosHim" : {
            "$ref" : "#/components/schemas/HimSummary"
          }
        },
        "description" : "Most important facts of a Trip (useful for a quick overview)."
      },
      "TripV2" : {
        "required" : [ "alternative", "individualChangeTime", "legs", "serviceDays", "transfers", "valid" ],
        "type" : "object",
        "properties" : {
          "reconstructionContext" : {
            "type" : "string",
            "description" : "`TripV2::reconstructionContext` or `v3.Trip::id` is a temporary TripContext describing a concrete rideable and priceable journey (and not to be understood as a guaranteed ID which might be cached forever)! Therefore proper reconstruction is not guaranteed (realtime aspects, lacking service-days in the future, ..)!"
          },
          "duration" : {
            "type" : "string",
            "description" : "The [duration](https://www.w3.org/TR/xmlschema11-2/#duration) of the whole trip. The value may be null, if trip is not rideable (for e.g. cancelled).",
            "example" : "P1DT2H4M"
          },
          "transfers" : {
            "type" : "integer",
            "description" : "Number of interchanges (de:Umstiege) [greater or equal 0].",
            "format" : "int32"
          },
          "ecoBalance" : {
            "$ref" : "#/components/schemas/EcoBalance"
          },
          "alternative" : {
            "type" : "boolean",
            "description" : "false: Planned connection; true: Realtime alternative"
          },
          "valid" : {
            "type" : "boolean",
            "description" : "true: Trip is still possible to ride based on the current realtime situation (related to TripV2::serviceDays, LegV2::reachable); false: not rideable as a 'whole' Trip' anymore.Important: if this valid toggles from true to false, the passenger might not be able to perform his Trip, by means re-planning options might occur."
          },
          "individualChangeTime" : {
            "type" : "boolean",
            "description" : "true: Trip is based on individual change times; false: not (default)"
          },
          "legs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegV2"
            }
          },
          "serviceDays" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceDaysV2"
            }
          },
          "scrollCheckSum" : {
            "type" : "string",
            "description" : "Checksum of the trip to filter same results on client side after scroll requests.",
            "example" : "fa02b99f_3"
          },
          "searchHint" : {
            "type" : "string",
            "description" : "A translated hint/explanation is given if Trip was not found by a direct (first) search. In such a case origin/destination might not match exactly to request parameters.<br>(Translated according to Accept-Language.)",
            "example" : "Unfortunately, a connection for the desired origin and/or destination could not be found. We recommend the following alternative connections (please note origin/destination)."
          },
          "summary" : {
            "$ref" : "#/components/schemas/TripSummaryV2"
          },
          "archivedConnectionReliability" : {
            "$ref" : "#/components/schemas/ConnectionReliability"
          },
          "swissNational" : {
            "type" : "boolean",
            "description" : "@Deprecated IRRELEVANT not supported anymore and always false!",
            "deprecated" : true
          }
        },
        "description" : "Represents a specific trip from A to B routing over [0..*] via's."
      },
      "UrlLinkType" : {
        "required" : [ "url" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "JsonResponse" : {
        "type" : "object"
      },
      "EcoBalanceDetail" : {
        "required" : [ "co2", "co2ElectricVehicle", "co2InOperation", "destination", "nmvoc", "nox", "origin", "particulateMatterEmission10", "particulateMatterEmission2_5", "prime", "primeInOperation", "ubp06" ],
        "type" : "object",
        "properties" : {
          "origin" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "destination" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "duration" : {
            "type" : "string",
            "description" : "Overall travelling [duration](https://www.w3.org/TR/xmlschema11-2/#duration).",
            "example" : "P1DT2H4M"
          },
          "potentialWorkingDuration" : {
            "type" : "string",
            "description" : "Potential available travelling [duration](https://www.w3.org/TR/xmlschema11-2/#duration) where passenger may sit back and relax.",
            "example" : "P1DT2H4M"
          },
          "co2" : {
            "type" : "number",
            "description" : "CO2 emission [kg].",
            "format" : "double"
          },
          "co2InOperation" : {
            "type" : "number",
            "description" : "CO2 emission in operation [kg].",
            "format" : "double"
          },
          "co2ElectricVehicle" : {
            "type" : "number",
            "description" : "CO2 emission in for electric vehicles [g].",
            "format" : "double"
          },
          "prime" : {
            "type" : "number",
            "description" : "PRIME emission calculated [l petrol].",
            "format" : "double"
          },
          "primeInOperation" : {
            "type" : "number",
            "description" : "PRIME emission calculated [l petrol].",
            "format" : "double"
          },
          "particulateMatterEmission10" : {
            "type" : "number",
            "description" : "Particulate matter emission (PM10) in [g].\nThis value includes possible particulate matter emissions occurring when generating the energy used for the vehicle during the trip. For example, electric cars will still have a non-zero particulate matter emission although the vehicle doesn't emit anything but the electric energy used by the vehicle might be generated from coal power plants and those created emissions during energy generation.",
            "format" : "double"
          },
          "particulateMatterEmission2_5" : {
            "type" : "number",
            "description" : "Particulate matter emission (PM2.5) in [g].\nThis value includes possible particulate matter emissions occurring when generating the energy used for the vehicle during the trip. For example, electric cars will still have a non-zero particulate matter emission although the vehicle doesn't emit anything but the electric energy used by the vehicle might be generated from coal power plants and those created emissions during energy generation.",
            "format" : "double"
          },
          "nmvoc" : {
            "type" : "number",
            "description" : "NMVOC emission [g]",
            "format" : "double"
          },
          "nox" : {
            "type" : "number",
            "description" : "NOX emission [g]",
            "format" : "double"
          },
          "ubp06" : {
            "type" : "number",
            "description" : "Environmental impact points 06",
            "format" : "double"
          }
        },
        "description" : "Environmental emission coefficients occurring when generating the energy used for the vehicle during the trip."
      },
      "EcoMap" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/EcoBalanceDetail"
        },
        "description" : "Response-Object Map(EcoBalanceDetailMapKey, EcoBalanceDetail)."
      },
      "Car" : {
        "required" : [ "attributes", "closed", "displayNoPassage", "nextPassage", "occupancy", "previousPassage", "type", "unattended" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of the car in the formation (e.g. Locomotive, Restaurant or Couchette).<br>x-extensible-enum: ",
            "enum" : [ "LOK", "CAR", "FA", "FZ", "WR", "CC", "WL", "SL", "UNKNOWN" ]
          },
          "number" : {
            "type" : "string",
            "description" : "Number of the car within a formation (this number can be seen by passengers on a car for e.g. next to the door)."
          },
          "carUic" : {
            "type" : "string",
            "description" : "The carUic of the car. With this information you can calculate with the carUic from a beacon, where you are inside a trainformation. This information is not always present (null means not present)."
          },
          "class" : {
            "type" : "string",
            "description" : "Passenger class (first or second) of the car.<br>x-extensible-enum: ",
            "enum" : [ "1", "2", "12" ]
          },
          "occupancy" : {
            "type" : "string",
            "description" : "Prognosed occupancy of the car (overall 1st and/or 2nd class).<br>x-extensible-enum: [UNKNOWN,LOW,MEDIUM,HIGH]",
            "enum" : [ "UNKNOWN", "LOW", "MEDIUM", "HIGH" ]
          },
          "attributes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Attributes of the car."
            }
          },
          "destination" : {
            "type" : "string",
            "description" : "Each `Car::destination` with a value (set once per **TrainGroup** on the leading car) represents a distinguished set of cars going to the very same direction. If no destination is set, by means all `Car's` belong to the same Traingroup and therefore have the same direction (destination is omitted by SBB Business Rule). If given (more than once), the formation represents a wing-train (de:Flügelzug) where each Traingroup is heading to a different direction."
          },
          "closed" : {
            "type" : "boolean",
            "description" : "true: For unknown reasons the car is not usable for passengers: false: Open or unknown."
          },
          "unattended" : {
            "type" : "boolean",
            "description" : "true: the restaurant is not attend and therefore not open. The car is still usable for passengers, false: restaurant is open"
          },
          "previousPassage" : {
            "type" : "boolean",
            "description" : "Determines if a passenger may pass (de: Durchgang) to the previous car within formation."
          },
          "nextPassage" : {
            "type" : "boolean",
            "description" : "Determines if a passenger may pass (de: Durchgang) to the next car within the formation."
          },
          "modelType" : {
            "type" : "string",
            "description" : "Specific parameter from Ceres which describes vehicle's of a train-formation (aka de: zbpType, FahrzeugType gemäss Zugbildungsplan (ZBP), s. [CERES Glossar](https://confluence.sbb.ch/pages/viewpage.action?spaceKey=CAROS&title=CERES+Glossar)",
            "example" : "RABDe(ICN)"
          },
          "displayNoPassage" : {
            "type" : "boolean",
            "description" : "true: icon for no passage should be displayed between this car and the next one (from left to right)"
          }
        },
        "description" : "Single wagon of a transport-product (aka Transmodel 'TRAIN ELEMENT')."
      },
      "Info" : {
        "required" : [ "formationChanges", "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Speaking, translated title (for e.g. to be used by a formation-change overview DropDownBox)."
          },
          "formationChanges" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "List of formation-changes (for e.g. 'Wagon restaurant is closed')."
            }
          }
        },
        "description" : "Concrete realtime formation-changes."
      },
      "LegendItem" : {
        "required" : [ "id", "refersTo", "text" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Identifier if item, related to refersTo. 2 digit Note::key attribute or '-' if related to a code.",
            "example" : "WR"
          },
          "text" : {
            "type" : "string",
            "description" : "Describing and translated legend-text."
          },
          "refersTo" : {
            "type" : "string",
            "description" : "Type of legend description, either 'TYPE' or 'CODE'.",
            "example" : "TYPE"
          }
        },
        "description" : "Item in the legend describing car-attributes or -codes."
      },
      "Section" : {
        "required" : [ "cars", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the section. Empty string is possible if no clear name is known.",
            "example" : "A"
          },
          "cars" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Car"
            }
          }
        },
        "description" : "One of many Section (de:Sektor) of the platform."
      },
      "StopFormation" : {
        "required" : [ "leavingDirection", "legendItems", "sections", "stationName" ],
        "type" : "object",
        "properties" : {
          "stationName" : {
            "type" : "string",
            "description" : "`StopV2::name` or `v3.StopPlace::name` with snapshot of concrete formation (aka Train-Composition) at this `ScheduledStopPoint`.",
            "example" : "Zürich HB"
          },
          "sections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Section"
            }
          },
          "legendItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegendItem"
            }
          },
          "leavingDirection" : {
            "type" : "string",
            "description" : "Direction in which the train leaves in relation to sections at platform.",
            "example" : "LEFT",
            "enum" : [ "RIGHT", "LEFT" ]
          },
          "info" : {
            "$ref" : "#/components/schemas/Info"
          }
        },
        "description" : "Composition of a train resp. its cars at a specific stop related to platform sections (aka Transmodel 'COMPOUND TRAIN' or 'TRAIN')."
      },
      "TrainFormation" : {
        "type" : "object",
        "properties" : {
          "originFormation" : {
            "$ref" : "#/components/schemas/StopFormation"
          },
          "destinationFormation" : {
            "$ref" : "#/components/schemas/StopFormation"
          }
        },
        "description" : "Structure containing Formations at `Leg::origin` and `Leg::destination`."
      },
      "LocationIdentity" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "STATION", "ADDRESS", "POI" ]
          }
        },
        "description" : "In a group of zoned stations (relates to stationType STATION_ZONED) the zonedMember represents the other siblings (empty for other stationType)."
      },
      "NetworkZone" : {
        "required" : [ "code", "name", "ownerCode", "ownerName", "plan" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of Network (de:Verbund).",
            "example" : "Léman Pass"
          },
          "code" : {
            "type" : "integer",
            "description" : "The zoneCode of NetworkZone.",
            "format" : "int32",
            "example" : 10
          },
          "plan" : {
            "type" : "string",
            "description" : "Zone plan of tariff zone.",
            "example" : "Léman Pass Abo & Billett"
          },
          "ownerName" : {
            "type" : "string",
            "description" : "Owner name of tariff zone. (NOVA: 'ZONENOWNER)",
            "example" : "Léman Pass"
          },
          "ownerCode" : {
            "type" : "integer",
            "description" : "Zone owner code of tariff zone.",
            "format" : "int32",
            "example" : 419
          }
        },
        "description" : "NOVA Tariff-group (source 'VERBUNDLISTE.CSV')."
      },
      "Perron" : {
        "required" : [ "name", "tracks" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of Perron. For example '1' or 'RBS1' "
          },
          "tracks" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Tracks on Perron. For example ['1','2']"
            }
          }
        },
        "description" : "Perron (physical platform) at Station."
      },
      "Station" : {
        "required" : [ "complexMembers", "countryCode", "name", "perronToTracks", "stationType", "tracks", "uic", "vehicleTypes", "zonedMembers" ],
        "type" : "object",
        "properties" : {
          "uic" : {
            "type" : "string",
            "description" : "Unique UIC code of station (source DiDok).",
            "example" : "8503000"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "Country of location (ISO 3166, 2-digits, source: DiDok organisational-based).",
            "example" : "CH"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of station (given in translation of local area).",
            "example" : "Zürich HB"
          },
          "type" : {
            "type" : "string",
            "description" : "@Deprecated use stationType.",
            "deprecated" : true,
            "enum" : [ "STATION", "STATION_COMPLEX", "STATION_ZONED", "STATION_VIRTUAL" ]
          },
          "stationType" : {
            "type" : "string",
            "description" : "The type of the location.\nSTATION represents a simple station (typically one physical location with one operator)\nSTATION_COMPLEX represents a more complex station (typically with multiple operators and/or aggregated buildings)\nSTATION_ZONED represents a set of STATION and/or STATION_COMPLEX (typically several stations in an agglomeration perimeter).",
            "example" : "STATION_COMPLEX",
            "enum" : [ "STATION", "STATION_COMPLEX", "STATION_ZONED", "STATION_VIRTUAL" ]
          },
          "coordinatesWGS84" : {
            "$ref" : "#/components/schemas/CoordinatesWGS84"
          },
          "latitude" : {
            "type" : "string",
            "description" : "@Deprecated use `coordinatesWGS84`.",
            "deprecated" : true
          },
          "longitude" : {
            "type" : "string",
            "description" : "@Deprecated use `coordinatesWGS84`.",
            "deprecated" : true
          },
          "weight" : {
            "type" : "integer",
            "description" : "Weight (traffic load/importance the higher the value) at station, null if unknown. E.g. Zürich HB has weight 30170.",
            "format" : "int32",
            "example" : 30170
          },
          "vehicleTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "List of the vehicle-types supported at this Station. This is a best guess calculated by known planned routes, by means in reality this set might differ.",
              "enum" : [ "TRAIN", "BUS", "TRAMWAY", "BOAT", "FUNICULAR", "CABLEWAY", "CHAIRLIFT", "METRO", "COG_RAILWAY", "TAXI", "LIFT", "AIRPLANE" ]
            }
          },
          "complexLeader" : {
            "$ref" : "#/components/schemas/LocationIdentity"
          },
          "complexMembers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationIdentity"
            }
          },
          "zonedMembers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationIdentity"
            }
          },
          "tracks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "List of tracks available at this station."
            }
          },
          "perronToTracks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Perron"
            }
          },
          "networkZones" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetworkZone"
            }
          },
          "tariffBorderPoint" : {
            "type" : "boolean",
            "description" : "true: Stop::uic represents a NOVA TariffBorderPoint; false: no NOVA TariffBorderPoint; null unknown/irrelevant"
          }
        },
        "description" : "Station represents a LocationType::STATION (de:Haltestelle)."
      },
      "StationsPage" : {
        "required" : [ "nextPageAvailable", "stations" ],
        "type" : "object",
        "properties" : {
          "stations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Station"
            }
          },
          "nextPageAvailable" : {
            "type" : "boolean",
            "description" : "True if there is a succeeding page of station-entries."
          }
        },
        "description" : "Paged subset of all STATIONs according to its page-index."
      },
      "DirectionV2" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "StopV2::name or any direction-name."
          },
          "routeIndexFrom" : {
            "type" : "integer",
            "description" : "From relevant StopV2::routeIndex (might be given for JourneyDetail::directions).",
            "format" : "int32"
          },
          "routeIndexTo" : {
            "type" : "integer",
            "description" : "To relevant StopV2::routeIndex (might be given for JourneyDetail::directions).",
            "format" : "int32"
          }
        },
        "description" : "Relates to (next) Direction given on KIB/Display at Track or transport-product display."
      },
      "JourneyDetail" : {
        "required" : [ "attributes", "cancelled", "directions", "himMessages", "journeyReference", "journeyStatus", "partiallyCancelled", "reachable", "redirected", "serviceDays", "stops", "transportProducts" ],
        "type" : "object",
        "properties" : {
          "stops" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StopV2"
            }
          },
          "journeyStatus" : {
            "type" : "string",
            "description" : "Contains the status of the journey.",
            "enum" : [ "PLANNED", "ADDITIONAL", "REPLACEMENT", "SPECIAL" ]
          },
          "directions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DirectionV2"
            }
          },
          "transportProducts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportProductV2"
            }
          },
          "himMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HimMessageV2"
            }
          },
          "journeyReference" : {
            "type" : "string",
            "description" : "Underlying system specific unique identifier representing a concrete (partial) route for a specific vehicle and time. Be aware this is just a temporary id and may change daily!",
            "example" : "1|17166|0|85|18032019"
          },
          "serviceDays" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceDaysV2"
            }
          },
          "cancelled" : {
            "type" : "boolean",
            "description" : "true: Journey is `cancelled` (de:Ausfall), default=false."
          },
          "cancelledFormatted" : {
            "type" : "string",
            "description" : "If `cancelled`, enduser cancellation info.<br>(Translated according to Accept-Language.)",
            "example" : "Ausfall"
          },
          "partiallyCancelled" : {
            "type" : "boolean",
            "description" : "true: Journey is partially cancelled (de:Teilausfall) at beginning or end, default=false."
          },
          "partiallyCancelledFormatted" : {
            "type" : "string",
            "description" : "If `partiallyCancelled`, enduser info.<br>(Translated according to Accept-Language.)",
            "example" : "Ausfall"
          },
          "redirectedFormatted" : {
            "type" : "string",
            "description" : "Text intended for passengers about a planned stop being skipped, relates to `redirected`.<br>(Translated according to Accept-Language.)",
            "example" : "This vehicle is not stopping at all stations."
          },
          "unplannedStopsFormatted" : {
            "type" : "string",
            "description" : "Text intended for passengers about an additional non-planned stop at a station.<br>(Translated according to Accept-Language.)",
            "example" : "This vehicle is making exceptional stops. This can lead to increased travel time."
          },
          "reachable" : {
            "type" : "boolean",
            "description" : "Whether journey is reachable."
          },
          "redirected" : {
            "type" : "boolean",
            "description" : "Whether journey is redirected."
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "polylineFormatted" : {
            "type" : "string",
            "description" : "String list of WGS84 coordinates (optimized for min. volume and fast parsing.) and represents a de:Streckenverlauf. Depends on polyline=true",
            "example" : "latitude0,longitude0|latitude1,longitude1|.."
          }
        },
        "description" : "Complete route (de:Zuglauf) of a transport product."
      },
      "DepartureV2" : {
        "required" : [ "attributes", "cancelled", "journeyReference", "journeyStatus", "messages", "origin", "partiallyCancelled", "reachable", "redirected", "serviceDays", "stops", "transportProducts" ],
        "type" : "object",
        "properties" : {
          "journeyReference" : {
            "type" : "string",
            "description" : "Underlying system specific unique identifier representing a concrete (partial) route for a specific vehicle and time. Be aware this is just a temporary id and may change daily!",
            "example" : "1|17166|0|85|18032019"
          },
          "journeyStatus" : {
            "type" : "string",
            "description" : "Contains the status of the journey.",
            "example" : "PLANNED",
            "enum" : [ "PLANNED", "ADDITIONAL", "REPLACEMENT", "SPECIAL" ]
          },
          "transportProducts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportProductV2"
            }
          },
          "transportProduct" : {
            "$ref" : "#/components/schemas/TransportProductV2"
          },
          "origin" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "direction" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "stops" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StopV2"
            }
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "serviceDays" : {
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/ServiceDaysV2"
            }
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HimMessageV2"
            }
          },
          "cancelled" : {
            "type" : "boolean",
            "description" : "true: Journey is `cancelled` (de:Ausfall), default=false."
          },
          "cancelledFormatted" : {
            "type" : "string",
            "description" : "If `cancelled`, enduser cancellation info.<br>(Translated according to Accept-Language.)",
            "example" : "Ausfall"
          },
          "partiallyCancelled" : {
            "type" : "boolean",
            "description" : "true: Journey is partially cancelled (de:Teilausfall) at beginning or end, default=false."
          },
          "partiallyCancelledFormatted" : {
            "type" : "string",
            "description" : "If `partiallyCancelled`, enduser info.<br>(Translated according to Accept-Language.)",
            "example" : "Ausfall"
          },
          "reachable" : {
            "type" : "boolean",
            "description" : "true: journey is reachable (de:erreichbar)"
          },
          "redirected" : {
            "type" : "boolean",
            "description" : "true: journey is redirected (de:Umleitung)"
          },
          "redirectedFormatted" : {
            "type" : "string",
            "description" : "Text intended for passengers about a planned stop being skipped, relates to `redirected`.<br>(Translated according to Accept-Language.)",
            "example" : "This vehicle is not stopping at all stations."
          },
          "unplannedStopsFormatted" : {
            "type" : "string",
            "description" : "Text intended for passengers about an additional non-planned stop at a station.<br>(Translated according to Accept-Language.)",
            "example" : "This vehicle is making exceptional stops. This can lead to increased travel time."
          }
        },
        "description" : "Departure resp. kind of view of JourneyDetail from a specific stop towards its direction."
      },
      "Arrival" : {
        "required" : [ "arrival", "attributes", "cancelled", "journeyReference", "journeyStatus", "messages", "partiallyCancelled", "reachable", "redirected", "serviceDays", "stops", "transportProducts" ],
        "type" : "object",
        "properties" : {
          "journeyReference" : {
            "type" : "string",
            "description" : "Underlying system specific unique identifier representing a concrete (partial) route for a specific vehicle and time. Be aware this is just a temporary id and may change daily!",
            "example" : "1|17166|0|85|18032019"
          },
          "journeyStatus" : {
            "type" : "string",
            "description" : "Contains the status of the journey.",
            "example" : "PLANNED",
            "enum" : [ "PLANNED", "ADDITIONAL", "REPLACEMENT", "SPECIAL" ]
          },
          "transportProducts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransportProductV2"
            }
          },
          "transportProduct" : {
            "$ref" : "#/components/schemas/TransportProductV2"
          },
          "arrival" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "origin" : {
            "$ref" : "#/components/schemas/StopV2"
          },
          "stops" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StopV2"
            }
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "serviceDays" : {
            "type" : "array",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/ServiceDaysV2"
            }
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HimMessageV2"
            }
          },
          "cancelled" : {
            "type" : "boolean",
            "description" : "true: Journey is `cancelled` (de:Ausfall), default=false."
          },
          "cancelledFormatted" : {
            "type" : "string",
            "description" : "If `cancelled`, enduser cancellation info.<br>(Translated according to Accept-Language.)",
            "example" : "Ausfall"
          },
          "partiallyCancelled" : {
            "type" : "boolean",
            "description" : "true: Journey is partially cancelled (de:Teilausfall) at beginning or end, default=false."
          },
          "partiallyCancelledFormatted" : {
            "type" : "string",
            "description" : "If `partiallyCancelled`, enduser info.<br>(Translated according to Accept-Language.)",
            "example" : "Ausfall"
          },
          "reachable" : {
            "type" : "boolean",
            "description" : "true: journey is reachable (de:erreichbar)"
          },
          "redirected" : {
            "type" : "boolean",
            "description" : "true: journey is redirected (de:Umleitung)"
          },
          "redirectedFormatted" : {
            "type" : "string",
            "description" : "Text intended for passengers about a planned stop being skipped, relates to `redirected`.<br>(Translated according to Accept-Language.)",
            "example" : "This vehicle is not stopping at all stations."
          },
          "unplannedStopsFormatted" : {
            "type" : "string",
            "description" : "Text intended for passengers about an additional non-planned stop at a station.<br>(Translated according to Accept-Language.)",
            "example" : "This vehicle is making exceptional stops. This can lead to increased travel time."
          }
        },
        "description" : "Arrival at a specific stop resp. kind of view of JourneyDetail from its final direction."
      },
      "ForecastElement" : {
        "required" : [ "cloudiness", "dateTime", "descriptions", "humidity", "oneHourRainVolume", "oneHourSnowVolume", "temperature", "windSpeed", "wmoWeatherCode" ],
        "type" : "object",
        "properties" : {
          "cloudiness" : {
            "type" : "number",
            "description" : "Cloudiness in percent.",
            "format" : "double"
          },
          "oneHourRainVolume" : {
            "type" : "number",
            "description" : "Precipitation of rain within one hour in millimeters.",
            "format" : "double"
          },
          "oneHourSnowVolume" : {
            "type" : "number",
            "description" : "Precipitation of swon within one hour in millimeters.",
            "format" : "double"
          },
          "windSpeed" : {
            "type" : "number",
            "description" : "Wind speed in meters per second.",
            "format" : "double"
          },
          "temperature" : {
            "type" : "number",
            "description" : "Temperature in degrees celsius.",
            "format" : "double"
          },
          "humidity" : {
            "type" : "number",
            "description" : "Humidity in percent.",
            "format" : "double"
          },
          "descriptions" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "List of textual weather descriptions if available."
            }
          },
          "wmoWeatherCode" : {
            "type" : "integer",
            "description" : "Weather code according to WMO standard 4677.",
            "format" : "int32"
          },
          "dateTime" : {
            "type" : "string",
            "description" : "Forecast time.",
            "format" : "date-time"
          }
        },
        "description" : "Weather Forecast."
      },
      "TimedWeatherForecast" : {
        "required" : [ "forecast", "updateDateTime", "weatherCoordinates" ],
        "type" : "object",
        "properties" : {
          "updateDateTime" : {
            "type" : "string",
            "description" : "Update time of weather forecast.",
            "format" : "date-time"
          },
          "weatherCoordinates" : {
            "$ref" : "#/components/schemas/WeatherCoordinates"
          },
          "forecast" : {
            "$ref" : "#/components/schemas/ForecastElement"
          }
        },
        "description" : "Weather forecast for a given location and time."
      },
      "WeatherCoordinates" : {
        "type" : "object",
        "properties" : {
          "longitude" : {
            "type" : "number",
            "deprecated" : true
          },
          "latitude" : {
            "type" : "number",
            "deprecated" : true
          },
          "latitudeDecimalDegrees" : {
            "type" : "number",
            "format" : "double"
          },
          "longitudeDecimalDegrees" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "description" : "Coordinates for weather forecast."
      },
      "TripSubscriptionDeletionResponse" : {
        "required" : [ "technicalId" ],
        "type" : "object",
        "properties" : {
          "technicalId" : {
            "type" : "string",
            "description" : "HCSS generated Id, which is not subscribed any more."
          }
        },
        "description" : "Infos about the deleted subscription."
      }
    },
    "securitySchemes" : {
      "BearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}